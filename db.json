{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/pure/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/cat.jpeg","path":"images/cat.jpeg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/thumb-default.png","path":"images/thumb-default.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","path":"images/xingqiu-qrcode.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/about/index.md","hash":"d04eabebe082d2416598d517d4a54fb8cb7784a9","modified":1612788999252},{"_id":"source/books/index.md","hash":"2a25a418af6a248c880253acf0059d07280b87f8","modified":1612788999252},{"_id":"source/categories/index.md","hash":"dd1461ccbc3de0cf8ae745a26beec54f735d3b64","modified":1612788999268},{"_id":"source/links/index.md","hash":"939b8c5303a3a57abde1bea0aa2506b912f095c2","modified":1612788999268},{"_id":"source/repository/index.md","hash":"2515ad61cf89c17cfebebd3663250be161c019da","modified":1612788999268},{"_id":"source/tags/index.md","hash":"276eb0a0f91a56a6e487c8661a1ff14674257024","modified":1612788999268},{"_id":"source/_posts/bios/06_Biso_interface_update.md","hash":"b841e5f46dd515e9fdc89672fd9c890b0942839e","modified":1612788999232},{"_id":"source/_posts/git/05_git_normal_cmd.md","hash":"3bfadb10603d358d8a6dd93c44aa43ec305ffef7","modified":1612788999232},{"_id":"source/_posts/hexo/02_hexo_中文手册.md","hash":"74f72f200991678e2cc2e7baae81ae6e2c83980c","modified":1612788999232},{"_id":"source/_posts/liveoverflow/hack_binary_example.md","hash":"7d0f0cccc6f9433df43986dac304536bc527bd60","modified":1612804331884},{"_id":"source/_posts/markdown/03_language_markdown_ref.md","hash":"ba143d889dbf9ac288dbd16fe7ef27fa9af6ca3c","modified":1612788999232},{"_id":"source/_posts/tool/c_binary.md","hash":"6096dddf01e41a98f7599153b436fdf58f24cf40","modified":1612800216306},{"_id":"source/_posts/tool/cscope.md","hash":"8ab27216edf7bca04a972700dfd6f87eebd12e42","modified":1612800754548},{"_id":"source/_posts/tool/vim.md","hash":"11526b128f16f60ca4c94f3e1581bd866c8d27fe","modified":1612800203349},{"_id":"source/_posts/tool/youtuber_dll.md","hash":"cdb15a1e765687ef9997c2284d025371861c8cca","modified":1612789953776},{"_id":"source/_posts/uefi/04_UFEI_protocol.md","hash":"74f62d45212e691ddf2f4d0aeedac17261f8080c","modified":1612788999232},{"_id":"source/_posts/liveoverflow/patchbinary.png","hash":"86ba827e36a29ff532a8322e74fbbf19d039cc93","modified":1612803253713},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1612701822390},{"_id":"themes/pure/_config.yml","hash":"3038abe3c2cdb8b25b6098dc2590c93b95c4bbc0","modified":1612795128160},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1612701822390},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1612701822394},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1612701822394},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1612701822394},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1612701822394},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1612701822398},{"_id":"themes/pure/layout/archive.ejs","hash":"ded5d953b35666e30f4c6e48e2d2c62af8d95ebf","modified":1612701822398},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1612701822398},{"_id":"themes/pure/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1612701822398},{"_id":"themes/pure/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1612701822398},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1612701822398},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1612701822398},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1612701822398},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1612701822398},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1612701822398},{"_id":"themes/pure/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1612701822398},{"_id":"themes/pure/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1612701822398},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1612701822390},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1612701822398},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1612701822398},{"_id":"themes/pure/README.cn.md","hash":"a634af4addbb57088935e060e8ec6035ea7bab76","modified":1612701822390},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1612701822406},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1612701822410},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1612701822390},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1612701822390},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1612701822390},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1612701822390},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1612701822394},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1612701822394},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"cdc48ec70d9202b947f2a9334234d038d7014a7d","modified":1612701822394},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1612701822394},{"_id":"themes/pure/layout/_common/header.ejs","hash":"3d739d1e2b2991927c08ec222db123830a44a519","modified":1612701822394},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1612701822394},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a35a2610e9da762df96587b76b51470507a88cad","modified":1612701822394},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1612701822394},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1612701822394},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1612701822394},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"c66c86d6a6a90e00494c380603426fc0f4006311","modified":1612701822394},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1612701822394},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"e39dc762d9fe238cede462532e40eaa3d8651122","modified":1612701822394},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1612701822394},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1612701822394},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1612701822394},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1612701822394},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"9f755b0da1ea928dece32c2050d8a04b3a9fb13b","modified":1612701822394},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"41a319642da5af07d6cfb8525796aa610b721879","modified":1612701822394},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"e10ea0176ba87e64888234bafedc01c92544352c","modified":1612701822394},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"152538ceceb0fdef65c46470ebf0189f7b891c5b","modified":1612701822394},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1612701822394},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1612701822394},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1612701822394},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"143087db0573772b0bdaf7f93312553158942ec7","modified":1612701822394},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1612701822394},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1612701822394},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1612701822394},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"14f2e7d4c1055ff6a5f5867dc0e9a9f6f4c28fe1","modified":1612701822394},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1612701822394},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1612701822394},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1612701822394},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1612701822394},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1612701822394},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1612701822398},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1612701822398},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1612701822398},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1612701822398},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1612701822398},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1612701822398},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1612701822398},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1612701822394},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1612701822394},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1612701822410},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1612701822410},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1612701822410},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1612701822410},{"_id":"themes/pure/source/images/avatar.jpg","hash":"f86eafc318f3900319b25057811720168f24d248","modified":1612701822410},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1612701822410},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1612701822390},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1612701822410},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1612701822410},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1612701822410},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1612701822410},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1612701822394},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"a9d3d05428e5844a07706c7fcfeb842e44a36a64","modified":1612701822394},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1612701822394},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1612701822394},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1612701822394},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1612701822394},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1612701822394},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"95eabc0fe4033ec61b240a16eeaf7dc62a9e3da1","modified":1612701822394},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1612701822394},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1612701822394},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1612701822394},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1612701822394},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1612701822394},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1612701822394},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1612701822394},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1612701822394},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"fb01f1631c3ae7fe6211dc03233506cb344229be","modified":1612701822394},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1612701822394},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1612701822394},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1612701822394},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1612701822394},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1612701822394},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1612701822394},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1612701822410},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1612701822410},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1612701822410},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1612701822410},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1612701822410},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1612701822398},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1612701822398},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1612701822398},{"_id":"themes/pure/source/images/patchbinary.png","hash":"86ba827e36a29ff532a8322e74fbbf19d039cc93","modified":1612803253713},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1612701822414},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1612701822414},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1612701822414},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1612701822398},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1612701822398},{"_id":"themes/pure/source/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1612701822410},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1612701822410},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1612701822414},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1612701822410},{"_id":"themes/pure/source/images/cat.jpeg","hash":"fc144465c70a52a36c7607f01207d90be95bf57b","modified":1612701913808},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1612701822406},{"_id":"public/about/index.html","hash":"6c986b297b308d61e6cb3463c837f6b7657313bd","modified":1612803887771},{"_id":"public/links/index.html","hash":"af43df8cd19b719ef37c66c069786475aed1bf56","modified":1612803887771},{"_id":"public/tags/index.html","hash":"da9b0f3bc735f664698132e82cfe4a3001e3871a","modified":1612803887771},{"_id":"public/categories/bios/index.html","hash":"9f3818ee00566e27874dc68c4a85562838cb639b","modified":1612803887771},{"_id":"public/categories/git/index.html","hash":"af2be6544e5554a235389ef6e3b2f2a3e10228d9","modified":1612803887771},{"_id":"public/categories/hexo/index.html","hash":"429c77074fc43884144d3842f32908798b6f5533","modified":1612803887771},{"_id":"public/categories/liveoverflow/index.html","hash":"6af38f1fc7ca350a49bbe0393975c99914000cdc","modified":1612803887771},{"_id":"public/categories/markdown/index.html","hash":"ddd295ac7371d9280045ae8f9ae6a47e529c439c","modified":1612803887771},{"_id":"public/categories/tools/index.html","hash":"0d76c638b4e5fa29eeb5e8e9be999d2d86e9f211","modified":1612803887771},{"_id":"public/categories/uefi/index.html","hash":"0756d7cf7c6bbad70d0d55d4677ab0f3b55d06ea","modified":1612803887771},{"_id":"public/tags/hexo/index.html","hash":"265083c50c81c73c1faff6bd658c99047e510dac","modified":1612803887771},{"_id":"public/books/index.html","hash":"0f23f56f0d1d879fdeee86f5720127d842568fab","modified":1612803887771},{"_id":"public/categories/index.html","hash":"710acca1a91ac579f7257f4f5e06b431b892d986","modified":1612803887771},{"_id":"public/repository/index.html","hash":"da167fa0431c4f39e33c22dae25e5c373ba2401e","modified":1612803887771},{"_id":"public/2021/02/08/bios/06_Biso_interface_update/index.html","hash":"e277062382d3845e77600c81997d45ddb0c77c3b","modified":1612803887771},{"_id":"public/2021/02/08/tool/c_binary/index.html","hash":"ca4198d712d82a49b420d920dbe74f2c66b612a7","modified":1612803887771},{"_id":"public/2021/02/08/tool/cscope/index.html","hash":"94b8c69edb6eb57bc3d859107e70af4c595d2126","modified":1612803887771},{"_id":"public/2021/02/08/tool/vim/index.html","hash":"dbd8b8906a051b8c29a43f96a831e175b51452ca","modified":1612803887771},{"_id":"public/2021/02/08/tool/youtuber_dll/index.html","hash":"c1648385a862e27f05b4f2ed3db1796709250e09","modified":1612803887771},{"_id":"public/2021/02/07/git/05_git_normal_cmd/index.html","hash":"bf0ae5626b8f09004ab2208b203dabf87de81d16","modified":1612803887771},{"_id":"public/2021/02/07/hexo/02_hexo_中文手册/index.html","hash":"1f2def572784ad5fbaca36ade0a05d2a73749ec5","modified":1612803887771},{"_id":"public/2021/02/07/liveoverflow/hack_binary_example/index.html","hash":"7502daf4bee2a35f7da2a445bbc9272abb676ad3","modified":1612804340490},{"_id":"public/2021/02/07/markdown/03_language_markdown_ref/index.html","hash":"63dd45da6646a037b3773b7f8c20e4b2e076dfa6","modified":1612803887771},{"_id":"public/2021/02/07/uefi/04_UFEI_protocol/index.html","hash":"4456e156e805d13e1cd60589aa93029f21c91e19","modified":1612803887771},{"_id":"public/archives/index.html","hash":"15fdcdbd160fdb9ca671c6a1b86e66cccc7157ba","modified":1612803887771},{"_id":"public/archives/2021/index.html","hash":"80f815e93e1ba4176a5d818af430764b35293315","modified":1612803887771},{"_id":"public/archives/2021/02/index.html","hash":"926e31d1e9225acc9c94468d6243baa92a493c15","modified":1612803887771},{"_id":"public/index.html","hash":"95065f7f90e6e4975149cc6d1d3a5c0e33e87c27","modified":1612803887771},{"_id":"public/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1612803887771},{"_id":"public/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1612803887771},{"_id":"public/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1612803887771},{"_id":"public/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1612803887771},{"_id":"public/images/avatar.jpg","hash":"f86eafc318f3900319b25057811720168f24d248","modified":1612803887771},{"_id":"public/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1612803887771},{"_id":"public/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1612803887771},{"_id":"public/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1612803887771},{"_id":"public/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1612803887771},{"_id":"public/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1612803887771},{"_id":"public/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1612803887771},{"_id":"public/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1612803887771},{"_id":"public/images/patchbinary.png","hash":"86ba827e36a29ff532a8322e74fbbf19d039cc93","modified":1612803887771},{"_id":"public/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1612803887771},{"_id":"public/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1612803887771},{"_id":"public/fonts/README.html","hash":"3b9daaf126709e3bbce5926e15d599f1fe877921","modified":1612803887771},{"_id":"public/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1612803887771},{"_id":"public/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1612803887771},{"_id":"public/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1612803887771},{"_id":"public/images/cat.jpeg","hash":"fc144465c70a52a36c7607f01207d90be95bf57b","modified":1612803887771},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1612803887771},{"_id":"public/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1612803887771},{"_id":"public/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1612803887771},{"_id":"public/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1612803887771},{"_id":"public/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1612803887771},{"_id":"source/images/patchbinary.png","hash":"86ba827e36a29ff532a8322e74fbbf19d039cc93","modified":1612804081340},{"_id":"source/_posts/liveoverflow/hack_binary_example/patchbinary.png","hash":"86ba827e36a29ff532a8322e74fbbf19d039cc93","modified":1612804293568},{"_id":"public/2021/02/07/liveoverflow/hack_binary_example/patchbinary.png","hash":"86ba827e36a29ff532a8322e74fbbf19d039cc93","modified":1612804340490}],"Category":[{"name":"bios","_id":"ckkwtrt5v0004dpjs78bc65qc"},{"name":"git","_id":"ckkwtrt62000cdpjs6m5tbh9x"},{"name":"hexo","_id":"ckkwtrt66000hdpjs8la39qrm"},{"name":"liveoverflow","_id":"ckkwtrt6a000mdpjs3o58cyzm"},{"name":"markdown","_id":"ckkwtrt6c000pdpjs35ya61cc"},{"name":"tools","_id":"ckkwtrt6c000rdpjs0rhwgfjf"},{"name":"uefi","_id":"ckkwtrt6f000wdpjse6nb6gnb"}],"Data":[],"Page":[{"title":"about","date":"2021-02-07T13:03:27.000Z","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-02-07 21:03:27\nlayout: about\n---\n","updated":"2021-02-08T12:56:39.252Z","path":"about/index.html","comments":1,"_id":"ckkwtrt5o0000dpjs0j9g2a9a","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"books","date":"2021-02-07T13:03:20.000Z","layout":"books","_content":"","source":"books/index.md","raw":"---\ntitle: books\ndate: 2021-02-07 21:03:20\nlayout: books\n---\n","updated":"2021-02-08T12:56:39.252Z","path":"books/index.html","comments":1,"_id":"ckkwtrt5t0002dpjs3hlu6hir","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2021-02-07T13:01:18.000Z","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-02-07 21:01:18\nlayout: categories\n---\n","updated":"2021-02-08T12:56:39.268Z","path":"categories/index.html","comments":1,"_id":"ckkwtrt5x0005dpjs7xv21xqw","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"links","date":"2021-02-07T13:03:27.000Z","layout":"links","_content":"","source":"links/index.md","raw":"---\ntitle: links\ndate: 2021-02-07 21:03:27\nlayout: links\n---\n","updated":"2021-02-08T12:56:39.268Z","path":"links/index.html","comments":1,"_id":"ckkwtrt5z0007dpjs8mqhefqc","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"repository","date":"2021-02-07T13:03:12.000Z","layout":"repository","_content":"","source":"repository/index.md","raw":"---\ntitle: repository\ndate: 2021-02-07 21:03:12\nlayout: repository\n---\n","updated":"2021-02-08T12:56:39.268Z","path":"repository/index.html","comments":1,"_id":"ckkwtrt61000adpjs6vvs2w45","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2021-02-07T13:00:10.000Z","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-02-07 21:00:10\nlayout: tags\n---\n","updated":"2021-02-08T12:56:39.268Z","path":"tags/index.html","comments":1,"_id":"ckkwtrt63000ddpjsa4svfy8f","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"BiosInterFace update 的思路","data":"2021/2/8","toc":true,"_content":"\n---\n### 概念\n---\n* PMFW\n  专门控制CLK/power的一个bin ,\n* SMU\n  BIOS的菜单控制，设置值，分发值到具体的模块\n  SMU和PMFW通过msg机制更新biosinterfaceTable的结构体来通信。\n* MSG机制\n  一端，向某个寄存器写入消息ID，消息参数，poll 等待response，另一端是硬件中断，拿到硬件中断后，处理写入response消息。","source":"_posts/bios/06_Biso_interface_update.md","raw":"---\ntitle: BiosInterFace update 的思路\ndata: 2021/2/8\ncategories:\n- bios\ntoc: true # 是否启用内容索引\n# sidebar: none # 是否启用sidebar侧边栏，none：不启用\n---\n\n---\n### 概念\n---\n* PMFW\n  专门控制CLK/power的一个bin ,\n* SMU\n  BIOS的菜单控制，设置值，分发值到具体的模块\n  SMU和PMFW通过msg机制更新biosinterfaceTable的结构体来通信。\n* MSG机制\n  一端，向某个寄存器写入消息ID，消息参数，poll 等待response，另一端是硬件中断，拿到硬件中断后，处理写入response消息。","slug":"bios/06_Biso_interface_update","published":1,"date":"2021-02-08T12:56:39.232Z","updated":"2021-02-08T12:56:39.232Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkwtrt5q0001dpjs6lk5druy","content":"<hr>\n<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><hr>\n<ul>\n<li>PMFW<br>专门控制CLK/power的一个bin ,</li>\n<li>SMU<br>BIOS的菜单控制，设置值，分发值到具体的模块<br>SMU和PMFW通过msg机制更新biosinterfaceTable的结构体来通信。</li>\n<li>MSG机制<br>一端，向某个寄存器写入消息ID，消息参数，poll 等待response，另一端是硬件中断，拿到硬件中断后，处理写入response消息。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><hr>\n<ul>\n<li>PMFW<br>专门控制CLK/power的一个bin ,</li>\n<li>SMU<br>BIOS的菜单控制，设置值，分发值到具体的模块<br>SMU和PMFW通过msg机制更新biosinterfaceTable的结构体来通信。</li>\n<li>MSG机制<br>一端，向某个寄存器写入消息ID，消息参数，poll 等待response，另一端是硬件中断，拿到硬件中断后，处理写入response消息。</li>\n</ul>\n"},{"title":"git 常用命令列表","date":"2021-02-06T16:00:00.000Z","_content":"\n---\n### git config\n---\n配置 Git 的相关参数。\n\nGit 一共有3个配置文件：\n\n1. 仓库级的配置文件：在仓库的 .git/.gitconfig，该配置文件只对所在的仓库有效。\n2. 全局配置文件：Mac 系统在 ~/.gitconfig，Windows 系统在 C:\\Users\\<用户名>\\.gitconfig。\n3. 系统级的配置文件：在 Git 的安装目录下（Mac 系统下安装目录在 /usr/local/git）的 etc 文件夹中的 gitconfig。\n\n~~~bash\n# 查看配置信息\n# --local：仓库级，--global：全局级，--system：系统级\n$ git config <--local | --global | --system> -l\n\n# 查看当前生效的配置信息\n$ git config -l\n\n# 编辑配置文件\n# --local：仓库级，--global：全局级，--system：系统级\n$ git config <--local | --global | --system> -e\n\n# 添加配置项\n# --local：仓库级，--global：全局级，--system：系统级\n$ git config <--local | --global | --system> --add <name> <value>\n\n# 获取配置项\n$ git config <--local | --global | --system> --get <name>\n\n# 删除配置项\n$ git config <--local | --global | --system> --unset <name>\n\n# 配置提交记录中的用户信息\n$ git config --global user.name <用户名>\n$ git config --global user.email <邮箱地址>\n\n# 更改Git缓存区的大小\n# 如果提交的内容较大，默认缓存较小，提交会失败\n# 缓存大小单位：B，例如：524288000（500MB）\n$ git config --global http.postBuffer <缓存大小>\n\n# 调用 git status/git diff 命令时以高亮或彩色方式显示改动状态\n$ git config --global color.ui true\n\n# 配置可以缓存密码，默认缓存时间15分钟\n$ git config --global credential.helper cache\n\n# 配置密码的缓存时间\n# 缓存时间单位：秒\n$ git config --global credential.helper 'cache --timeout=<缓存时间>'\n\n# 配置长期存储密码\n$ git config --global credential.helper store\n\n# 配置忽略文件权限的改变\n$ git config --global core.filemode false\n~~~\n\n---\n### git clone\n---\n\n~~~bash\n# 默认在当前目录下创建和版本库名相同的文件夹并下载版本到该文件夹下\n$ git clone <远程仓库的网址>\n# 指定本地仓库的目录\n$ git clone <远程仓库的网址> <本地目录>\n# -b 指定要克隆的分支，默认是master分支\n$ git clone <远程仓库的网址> -b <分支名称> <本地目录>\n~~~\n\n---\n### git remote\n---\n\n~~~bash\n# 列出已经存在的远程仓库\n$ git remote\n\n# 列出远程仓库的详细信息，在别名后面列出URL地址\n$ git remote -v\n$ git remote --verbose\n\n# 添加远程仓库\n$ git remote add <远程仓库的别名> <远程仓库的URL地址>\n\n# 修改远程仓库的别名\n$ git remote rename <原远程仓库的别名> <新的别名>\n\n# 删除指定名称的远程仓库\n$ git remote remove <远程仓库的别名>\n\n# 修改远程仓库的 URL 地址\n$ git remote set-url <远程仓库的别名> <新的远程仓库URL地址>\n\n~~~\n\n---\n### git branch \n---\n\n\n~~~bash\n# 列出本地的所有分支，当前所在分支以 \"*\" 标出\n$ git branch\n\n# 列出本地的所有分支并显示最后一次提交，当前所在分支以 \"*\" 标出\n$ git branch -v\n\n# 创建新分支，新的分支基于上一次提交建立\n$ git branch <分支名>\n\n# 修改分支名称\n# 如果不指定原分支名称则为当前所在分支\n$ git branch -m [<原分支名称>] <新的分支名称>\n# 强制修改分支名称\n$ git branch -M [<原分支名称>] <新的分支名称>\n\n# 删除指定的本地分支\n$ git branch -d <分支名称>\n\n# 强制删除指定的本地分支\n$ git branch -D <分支名称>\n~~~\n\n---\n### git checkout\n---\n\n~~~bash\n# 切换到已存在的指定分支\n$ git checkout <分支名称>\n\n# 创建并切换到指定的分支，保留所有的提交记录\n# 等同于 \"git branch\" 和 \"git checkout\" 两个命令合并\n$ git checkout -b <分支名称>\n\n# 创建并切换到指定的分支，删除所有的提交记录\n$ git checkout --orphan <分支名称>\n\n# 替换掉本地的改动，新增的文件和已经添加到暂存区的内容不受影响\n$ git checkout <文件路径>\n~~~\n\n\n\n---\n### git cherry-pick\n---\n\n~~~bash\n# 把已经提交的记录合并到当前分支\n$ git cherry-pick <commit ID>\n~~~\n\n\n---\n### git fetch\n---\n\n~~~bash\n# 将远程仓库所有分支的最新版本全部取回到本地\n$ git fetch <远程仓库的别名>\n\n# 将远程仓库指定分支的最新版本取回到本地\n$ git fetch <远程主机名> <分支名>\n\n~~~\n\n\n---\n### git diff\n---\n\n~~~bash\n# 比较当前文件和暂存区中文件的差异，显示没有暂存起来的更改\n$ git diff\n\n# 比较暂存区中的文件和上次提交时的差异\n$ git diff --cached\n$ git diff --staged\n\n# 比较当前文件和上次提交时的差异\n$ git diff HEAD\n\n# 查看从指定的版本之后改动的内容\n$ git diff <commit ID>\n\n# 比较两个分支之间的差异\n$ git diff <分支名称> <分支名称>\n\n# 查看两个分支分开后各自的改动内容\n$ git diff <分支名称>...<分支名称>\n\n~~~\n\n\n---\n### git pull\n---\n从远程仓库获取最新版本并合并到本地。\n首先会执行 git fetch，然后执行 git merge，把获取的分支的 HEAD 合并到当前分支。\n~~~bash\n# 从远程仓库获取最新版本。\n$ git pull\n~~~\n\n\n---\n### git  push\n---\n\n~~~bash\n# 把本地仓库的分支推送到远程仓库的指定分支\n$ git push <远程仓库的别名> <本地分支名>:<远程分支名>\n\n# 删除指定的远程仓库的分支\n$ git push <远程仓库的别名> :<远程分支名>\n$ git push <远程仓库的别名> --delete <远程分支名>\n~~~\n\n\n---\n### git reset\n---\n\n~~~bash\n# 重置暂存区，但文件不受影响\n# 相当于将用 \"git add\" 命令更新到暂存区的内容撤出暂存区，可以指定文件\n# 没有指定 commit ID 则默认为当前 HEAD\n$ git reset [<文件路径>]\n$ git reset --mixed [<文件路径>]\n\n# 将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改\n$ git reset <commit ID>\n$ git reset --mixed <commit ID>\n\n# 将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改\n# 相当于调用 \"git reset --mixed\" 命令后又做了一次 \"git add\"\n$ git reset --soft <commit ID>\n\n# 将 HEAD 的指向改变，撤销到指定的提交记录，文件也修改了\n$ git reset --hard <commit ID>\n~~~\n\n\n\n---\n### git tag\n---\n\n~~~bash\n# 打印所有的标签\n$ git tag\n\n# 添加轻量标签，指向提交对象的引用，可以指定之前的提交记录\n$ git tag <标签名称> [<commit ID>]\n\n# 添加带有描述信息的附注标签，可以指定之前的提交记录\n$ git tag -a <标签名称> -m <标签描述信息> [<commit ID>]\n\n# 切换到指定的标签\n$ git checkout <标签名称>\n\n# 查看标签的信息\n$ git show <标签名称>\n\n# 删除指定的标签\n$ git tag -d <标签名称>\n\n# 将指定的标签提交到远程仓库\n$ git push <远程仓库的别名> <标签名称>\n\n# 将本地所有的标签全部提交到远程仓库\n$ git push <远程仓库的别名> –tags\n\n~~~\n\n\n---\n### git mv\n---\n\n~~~bash\n# 重命名指定的文件或者文件夹\n$ git mv <源文件/文件夹> <目标文件/文件夹>\n~~~\n\n\n\n---\n### git rm\n---\n\n~~~bash\n# 移除跟踪指定的文件，并从本地仓库的文件夹中删除\n$ git rm <文件路径>\n\n# 移除跟踪指定的文件夹，并从本地仓库的文件夹中删除\n$ git rm -r <文件夹路径>\n\n# 移除跟踪指定的文件，在本地仓库的文件夹中保留该文件\n$ git rm --cached\n~~~\n\n\n\n---\n### git 删除远程不存在的分支 ( 协同开发时，其他人删了远程分支 )\n---\n\n~~~bash\n# 使用 pull 命令，添加 -p 参数\n$ git pull -p\n\n# 等同于下面的命令\n$ git fetch -p\n$ git fetch --prune origin\n~~~","source":"_posts/git/05_git_normal_cmd.md","raw":"---\ntitle: git 常用命令列表\ndate: 2021/2/7\ncategories: git\n---\n\n---\n### git config\n---\n配置 Git 的相关参数。\n\nGit 一共有3个配置文件：\n\n1. 仓库级的配置文件：在仓库的 .git/.gitconfig，该配置文件只对所在的仓库有效。\n2. 全局配置文件：Mac 系统在 ~/.gitconfig，Windows 系统在 C:\\Users\\<用户名>\\.gitconfig。\n3. 系统级的配置文件：在 Git 的安装目录下（Mac 系统下安装目录在 /usr/local/git）的 etc 文件夹中的 gitconfig。\n\n~~~bash\n# 查看配置信息\n# --local：仓库级，--global：全局级，--system：系统级\n$ git config <--local | --global | --system> -l\n\n# 查看当前生效的配置信息\n$ git config -l\n\n# 编辑配置文件\n# --local：仓库级，--global：全局级，--system：系统级\n$ git config <--local | --global | --system> -e\n\n# 添加配置项\n# --local：仓库级，--global：全局级，--system：系统级\n$ git config <--local | --global | --system> --add <name> <value>\n\n# 获取配置项\n$ git config <--local | --global | --system> --get <name>\n\n# 删除配置项\n$ git config <--local | --global | --system> --unset <name>\n\n# 配置提交记录中的用户信息\n$ git config --global user.name <用户名>\n$ git config --global user.email <邮箱地址>\n\n# 更改Git缓存区的大小\n# 如果提交的内容较大，默认缓存较小，提交会失败\n# 缓存大小单位：B，例如：524288000（500MB）\n$ git config --global http.postBuffer <缓存大小>\n\n# 调用 git status/git diff 命令时以高亮或彩色方式显示改动状态\n$ git config --global color.ui true\n\n# 配置可以缓存密码，默认缓存时间15分钟\n$ git config --global credential.helper cache\n\n# 配置密码的缓存时间\n# 缓存时间单位：秒\n$ git config --global credential.helper 'cache --timeout=<缓存时间>'\n\n# 配置长期存储密码\n$ git config --global credential.helper store\n\n# 配置忽略文件权限的改变\n$ git config --global core.filemode false\n~~~\n\n---\n### git clone\n---\n\n~~~bash\n# 默认在当前目录下创建和版本库名相同的文件夹并下载版本到该文件夹下\n$ git clone <远程仓库的网址>\n# 指定本地仓库的目录\n$ git clone <远程仓库的网址> <本地目录>\n# -b 指定要克隆的分支，默认是master分支\n$ git clone <远程仓库的网址> -b <分支名称> <本地目录>\n~~~\n\n---\n### git remote\n---\n\n~~~bash\n# 列出已经存在的远程仓库\n$ git remote\n\n# 列出远程仓库的详细信息，在别名后面列出URL地址\n$ git remote -v\n$ git remote --verbose\n\n# 添加远程仓库\n$ git remote add <远程仓库的别名> <远程仓库的URL地址>\n\n# 修改远程仓库的别名\n$ git remote rename <原远程仓库的别名> <新的别名>\n\n# 删除指定名称的远程仓库\n$ git remote remove <远程仓库的别名>\n\n# 修改远程仓库的 URL 地址\n$ git remote set-url <远程仓库的别名> <新的远程仓库URL地址>\n\n~~~\n\n---\n### git branch \n---\n\n\n~~~bash\n# 列出本地的所有分支，当前所在分支以 \"*\" 标出\n$ git branch\n\n# 列出本地的所有分支并显示最后一次提交，当前所在分支以 \"*\" 标出\n$ git branch -v\n\n# 创建新分支，新的分支基于上一次提交建立\n$ git branch <分支名>\n\n# 修改分支名称\n# 如果不指定原分支名称则为当前所在分支\n$ git branch -m [<原分支名称>] <新的分支名称>\n# 强制修改分支名称\n$ git branch -M [<原分支名称>] <新的分支名称>\n\n# 删除指定的本地分支\n$ git branch -d <分支名称>\n\n# 强制删除指定的本地分支\n$ git branch -D <分支名称>\n~~~\n\n---\n### git checkout\n---\n\n~~~bash\n# 切换到已存在的指定分支\n$ git checkout <分支名称>\n\n# 创建并切换到指定的分支，保留所有的提交记录\n# 等同于 \"git branch\" 和 \"git checkout\" 两个命令合并\n$ git checkout -b <分支名称>\n\n# 创建并切换到指定的分支，删除所有的提交记录\n$ git checkout --orphan <分支名称>\n\n# 替换掉本地的改动，新增的文件和已经添加到暂存区的内容不受影响\n$ git checkout <文件路径>\n~~~\n\n\n\n---\n### git cherry-pick\n---\n\n~~~bash\n# 把已经提交的记录合并到当前分支\n$ git cherry-pick <commit ID>\n~~~\n\n\n---\n### git fetch\n---\n\n~~~bash\n# 将远程仓库所有分支的最新版本全部取回到本地\n$ git fetch <远程仓库的别名>\n\n# 将远程仓库指定分支的最新版本取回到本地\n$ git fetch <远程主机名> <分支名>\n\n~~~\n\n\n---\n### git diff\n---\n\n~~~bash\n# 比较当前文件和暂存区中文件的差异，显示没有暂存起来的更改\n$ git diff\n\n# 比较暂存区中的文件和上次提交时的差异\n$ git diff --cached\n$ git diff --staged\n\n# 比较当前文件和上次提交时的差异\n$ git diff HEAD\n\n# 查看从指定的版本之后改动的内容\n$ git diff <commit ID>\n\n# 比较两个分支之间的差异\n$ git diff <分支名称> <分支名称>\n\n# 查看两个分支分开后各自的改动内容\n$ git diff <分支名称>...<分支名称>\n\n~~~\n\n\n---\n### git pull\n---\n从远程仓库获取最新版本并合并到本地。\n首先会执行 git fetch，然后执行 git merge，把获取的分支的 HEAD 合并到当前分支。\n~~~bash\n# 从远程仓库获取最新版本。\n$ git pull\n~~~\n\n\n---\n### git  push\n---\n\n~~~bash\n# 把本地仓库的分支推送到远程仓库的指定分支\n$ git push <远程仓库的别名> <本地分支名>:<远程分支名>\n\n# 删除指定的远程仓库的分支\n$ git push <远程仓库的别名> :<远程分支名>\n$ git push <远程仓库的别名> --delete <远程分支名>\n~~~\n\n\n---\n### git reset\n---\n\n~~~bash\n# 重置暂存区，但文件不受影响\n# 相当于将用 \"git add\" 命令更新到暂存区的内容撤出暂存区，可以指定文件\n# 没有指定 commit ID 则默认为当前 HEAD\n$ git reset [<文件路径>]\n$ git reset --mixed [<文件路径>]\n\n# 将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改\n$ git reset <commit ID>\n$ git reset --mixed <commit ID>\n\n# 将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改\n# 相当于调用 \"git reset --mixed\" 命令后又做了一次 \"git add\"\n$ git reset --soft <commit ID>\n\n# 将 HEAD 的指向改变，撤销到指定的提交记录，文件也修改了\n$ git reset --hard <commit ID>\n~~~\n\n\n\n---\n### git tag\n---\n\n~~~bash\n# 打印所有的标签\n$ git tag\n\n# 添加轻量标签，指向提交对象的引用，可以指定之前的提交记录\n$ git tag <标签名称> [<commit ID>]\n\n# 添加带有描述信息的附注标签，可以指定之前的提交记录\n$ git tag -a <标签名称> -m <标签描述信息> [<commit ID>]\n\n# 切换到指定的标签\n$ git checkout <标签名称>\n\n# 查看标签的信息\n$ git show <标签名称>\n\n# 删除指定的标签\n$ git tag -d <标签名称>\n\n# 将指定的标签提交到远程仓库\n$ git push <远程仓库的别名> <标签名称>\n\n# 将本地所有的标签全部提交到远程仓库\n$ git push <远程仓库的别名> –tags\n\n~~~\n\n\n---\n### git mv\n---\n\n~~~bash\n# 重命名指定的文件或者文件夹\n$ git mv <源文件/文件夹> <目标文件/文件夹>\n~~~\n\n\n\n---\n### git rm\n---\n\n~~~bash\n# 移除跟踪指定的文件，并从本地仓库的文件夹中删除\n$ git rm <文件路径>\n\n# 移除跟踪指定的文件夹，并从本地仓库的文件夹中删除\n$ git rm -r <文件夹路径>\n\n# 移除跟踪指定的文件，在本地仓库的文件夹中保留该文件\n$ git rm --cached\n~~~\n\n\n\n---\n### git 删除远程不存在的分支 ( 协同开发时，其他人删了远程分支 )\n---\n\n~~~bash\n# 使用 pull 命令，添加 -p 参数\n$ git pull -p\n\n# 等同于下面的命令\n$ git fetch -p\n$ git fetch --prune origin\n~~~","slug":"git/05_git_normal_cmd","published":1,"updated":"2021-02-08T12:56:39.232Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkwtrt5u0003dpjscuflgrtu","content":"<hr>\n<h3 id=\"git-config\"><a href=\"#git-config\" class=\"headerlink\" title=\"git config\"></a>git config</h3><hr>\n<p>配置 Git 的相关参数。</p>\n<p>Git 一共有3个配置文件：</p>\n<ol>\n<li>仓库级的配置文件：在仓库的 .git/.gitconfig，该配置文件只对所在的仓库有效。</li>\n<li>全局配置文件：Mac 系统在 ~/.gitconfig，Windows 系统在 C:\\Users&lt;用户名&gt;.gitconfig。</li>\n<li>系统级的配置文件：在 Git 的安装目录下（Mac 系统下安装目录在 /usr/local/git）的 etc 文件夹中的 gitconfig。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看配置信息</span></span><br><span class=\"line\"><span class=\"comment\"># --local：仓库级，--global：全局级，--system：系统级</span></span><br><span class=\"line\">$ git config &lt;--<span class=\"built_in\">local</span> | --global | --system&gt; -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前生效的配置信息</span></span><br><span class=\"line\">$ git config -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编辑配置文件</span></span><br><span class=\"line\"><span class=\"comment\"># --local：仓库级，--global：全局级，--system：系统级</span></span><br><span class=\"line\">$ git config &lt;--<span class=\"built_in\">local</span> | --global | --system&gt; -e</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加配置项</span></span><br><span class=\"line\"><span class=\"comment\"># --local：仓库级，--global：全局级，--system：系统级</span></span><br><span class=\"line\">$ git config &lt;--<span class=\"built_in\">local</span> | --global | --system&gt; --add &lt;name&gt; &lt;value&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取配置项</span></span><br><span class=\"line\">$ git config &lt;--<span class=\"built_in\">local</span> | --global | --system&gt; --get &lt;name&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除配置项</span></span><br><span class=\"line\">$ git config &lt;--<span class=\"built_in\">local</span> | --global | --system&gt; --<span class=\"built_in\">unset</span> &lt;name&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置提交记录中的用户信息</span></span><br><span class=\"line\">$ git config --global user.name &lt;用户名&gt;</span><br><span class=\"line\">$ git config --global user.email &lt;邮箱地址&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更改Git缓存区的大小</span></span><br><span class=\"line\"><span class=\"comment\"># 如果提交的内容较大，默认缓存较小，提交会失败</span></span><br><span class=\"line\"><span class=\"comment\"># 缓存大小单位：B，例如：524288000（500MB）</span></span><br><span class=\"line\">$ git config --global http.postBuffer &lt;缓存大小&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用 git status/git diff 命令时以高亮或彩色方式显示改动状态</span></span><br><span class=\"line\">$ git config --global color.ui <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置可以缓存密码，默认缓存时间15分钟</span></span><br><span class=\"line\">$ git config --global credential.helper cache</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置密码的缓存时间</span></span><br><span class=\"line\"><span class=\"comment\"># 缓存时间单位：秒</span></span><br><span class=\"line\">$ git config --global credential.helper <span class=\"string\">&#x27;cache --timeout=&lt;缓存时间&gt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置长期存储密码</span></span><br><span class=\"line\">$ git config --global credential.helper store</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置忽略文件权限的改变</span></span><br><span class=\"line\">$ git config --global core.filemode <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"git-clone\"><a href=\"#git-clone\" class=\"headerlink\" title=\"git clone\"></a>git clone</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认在当前目录下创建和版本库名相同的文件夹并下载版本到该文件夹下</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> &lt;远程仓库的网址&gt;</span><br><span class=\"line\"><span class=\"comment\"># 指定本地仓库的目录</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> &lt;远程仓库的网址&gt; &lt;本地目录&gt;</span><br><span class=\"line\"><span class=\"comment\"># -b 指定要克隆的分支，默认是master分支</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> &lt;远程仓库的网址&gt; -b &lt;分支名称&gt; &lt;本地目录&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"git-remote\"><a href=\"#git-remote\" class=\"headerlink\" title=\"git remote\"></a>git remote</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出已经存在的远程仓库</span></span><br><span class=\"line\">$ git remote</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出远程仓库的详细信息，在别名后面列出URL地址</span></span><br><span class=\"line\">$ git remote -v</span><br><span class=\"line\">$ git remote --verbose</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加远程仓库</span></span><br><span class=\"line\">$ git remote add &lt;远程仓库的别名&gt; &lt;远程仓库的URL地址&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改远程仓库的别名</span></span><br><span class=\"line\">$ git remote rename &lt;原远程仓库的别名&gt; &lt;新的别名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除指定名称的远程仓库</span></span><br><span class=\"line\">$ git remote remove &lt;远程仓库的别名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改远程仓库的 URL 地址</span></span><br><span class=\"line\">$ git remote set-url &lt;远程仓库的别名&gt; &lt;新的远程仓库URL地址&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"git-branch\"><a href=\"#git-branch\" class=\"headerlink\" title=\"git branch\"></a>git branch</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出本地的所有分支，当前所在分支以 &quot;*&quot; 标出</span></span><br><span class=\"line\">$ git branch</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出本地的所有分支并显示最后一次提交，当前所在分支以 &quot;*&quot; 标出</span></span><br><span class=\"line\">$ git branch -v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建新分支，新的分支基于上一次提交建立</span></span><br><span class=\"line\">$ git branch &lt;分支名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改分支名称</span></span><br><span class=\"line\"><span class=\"comment\"># 如果不指定原分支名称则为当前所在分支</span></span><br><span class=\"line\">$ git branch -m [&lt;原分支名称&gt;] &lt;新的分支名称&gt;</span><br><span class=\"line\"><span class=\"comment\"># 强制修改分支名称</span></span><br><span class=\"line\">$ git branch -M [&lt;原分支名称&gt;] &lt;新的分支名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除指定的本地分支</span></span><br><span class=\"line\">$ git branch -d &lt;分支名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 强制删除指定的本地分支</span></span><br><span class=\"line\">$ git branch -D &lt;分支名称&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"git-checkout\"><a href=\"#git-checkout\" class=\"headerlink\" title=\"git checkout\"></a>git checkout</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换到已存在的指定分支</span></span><br><span class=\"line\">$ git checkout &lt;分支名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建并切换到指定的分支，保留所有的提交记录</span></span><br><span class=\"line\"><span class=\"comment\"># 等同于 &quot;git branch&quot; 和 &quot;git checkout&quot; 两个命令合并</span></span><br><span class=\"line\">$ git checkout -b &lt;分支名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建并切换到指定的分支，删除所有的提交记录</span></span><br><span class=\"line\">$ git checkout --orphan &lt;分支名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 替换掉本地的改动，新增的文件和已经添加到暂存区的内容不受影响</span></span><br><span class=\"line\">$ git checkout &lt;文件路径&gt;</span><br></pre></td></tr></table></figure>\n\n\n<hr>\n<h3 id=\"git-cherry-pick\"><a href=\"#git-cherry-pick\" class=\"headerlink\" title=\"git cherry-pick\"></a>git cherry-pick</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 把已经提交的记录合并到当前分支</span></span><br><span class=\"line\">$ git cherry-pick &lt;commit ID&gt;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"git-fetch\"><a href=\"#git-fetch\" class=\"headerlink\" title=\"git fetch\"></a>git fetch</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将远程仓库所有分支的最新版本全部取回到本地</span></span><br><span class=\"line\">$ git fetch &lt;远程仓库的别名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将远程仓库指定分支的最新版本取回到本地</span></span><br><span class=\"line\">$ git fetch &lt;远程主机名&gt; &lt;分支名&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"git-diff\"><a href=\"#git-diff\" class=\"headerlink\" title=\"git diff\"></a>git diff</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 比较当前文件和暂存区中文件的差异，显示没有暂存起来的更改</span></span><br><span class=\"line\">$ git diff</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 比较暂存区中的文件和上次提交时的差异</span></span><br><span class=\"line\">$ git diff --cached</span><br><span class=\"line\">$ git diff --staged</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 比较当前文件和上次提交时的差异</span></span><br><span class=\"line\">$ git diff HEAD</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看从指定的版本之后改动的内容</span></span><br><span class=\"line\">$ git diff &lt;commit ID&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 比较两个分支之间的差异</span></span><br><span class=\"line\">$ git diff &lt;分支名称&gt; &lt;分支名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看两个分支分开后各自的改动内容</span></span><br><span class=\"line\">$ git diff &lt;分支名称&gt;...&lt;分支名称&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"git-pull\"><a href=\"#git-pull\" class=\"headerlink\" title=\"git pull\"></a>git pull</h3><hr>\n<p>从远程仓库获取最新版本并合并到本地。<br>首先会执行 git fetch，然后执行 git merge，把获取的分支的 HEAD 合并到当前分支。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从远程仓库获取最新版本。</span></span><br><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"git-push\"><a href=\"#git-push\" class=\"headerlink\" title=\"git  push\"></a>git  push</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 把本地仓库的分支推送到远程仓库的指定分支</span></span><br><span class=\"line\">$ git push &lt;远程仓库的别名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除指定的远程仓库的分支</span></span><br><span class=\"line\">$ git push &lt;远程仓库的别名&gt; :&lt;远程分支名&gt;</span><br><span class=\"line\">$ git push &lt;远程仓库的别名&gt; --delete &lt;远程分支名&gt;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"git-reset\"><a href=\"#git-reset\" class=\"headerlink\" title=\"git reset\"></a>git reset</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重置暂存区，但文件不受影响</span></span><br><span class=\"line\"><span class=\"comment\"># 相当于将用 &quot;git add&quot; 命令更新到暂存区的内容撤出暂存区，可以指定文件</span></span><br><span class=\"line\"><span class=\"comment\"># 没有指定 commit ID 则默认为当前 HEAD</span></span><br><span class=\"line\">$ git reset [&lt;文件路径&gt;]</span><br><span class=\"line\">$ git reset --mixed [&lt;文件路径&gt;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改</span></span><br><span class=\"line\">$ git reset &lt;commit ID&gt;</span><br><span class=\"line\">$ git reset --mixed &lt;commit ID&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改</span></span><br><span class=\"line\"><span class=\"comment\"># 相当于调用 &quot;git reset --mixed&quot; 命令后又做了一次 &quot;git add&quot;</span></span><br><span class=\"line\">$ git reset --soft &lt;commit ID&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 HEAD 的指向改变，撤销到指定的提交记录，文件也修改了</span></span><br><span class=\"line\">$ git reset --hard &lt;commit ID&gt;</span><br></pre></td></tr></table></figure>\n\n\n<hr>\n<h3 id=\"git-tag\"><a href=\"#git-tag\" class=\"headerlink\" title=\"git tag\"></a>git tag</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打印所有的标签</span></span><br><span class=\"line\">$ git tag</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加轻量标签，指向提交对象的引用，可以指定之前的提交记录</span></span><br><span class=\"line\">$ git tag &lt;标签名称&gt; [&lt;commit ID&gt;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加带有描述信息的附注标签，可以指定之前的提交记录</span></span><br><span class=\"line\">$ git tag -a &lt;标签名称&gt; -m &lt;标签描述信息&gt; [&lt;commit ID&gt;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换到指定的标签</span></span><br><span class=\"line\">$ git checkout &lt;标签名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看标签的信息</span></span><br><span class=\"line\">$ git show &lt;标签名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除指定的标签</span></span><br><span class=\"line\">$ git tag -d &lt;标签名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将指定的标签提交到远程仓库</span></span><br><span class=\"line\">$ git push &lt;远程仓库的别名&gt; &lt;标签名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将本地所有的标签全部提交到远程仓库</span></span><br><span class=\"line\">$ git push &lt;远程仓库的别名&gt; –tags</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"git-mv\"><a href=\"#git-mv\" class=\"headerlink\" title=\"git mv\"></a>git mv</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重命名指定的文件或者文件夹</span></span><br><span class=\"line\">$ git mv &lt;源文件/文件夹&gt; &lt;目标文件/文件夹&gt;</span><br></pre></td></tr></table></figure>\n\n\n<hr>\n<h3 id=\"git-rm\"><a href=\"#git-rm\" class=\"headerlink\" title=\"git rm\"></a>git rm</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 移除跟踪指定的文件，并从本地仓库的文件夹中删除</span></span><br><span class=\"line\">$ git rm &lt;文件路径&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移除跟踪指定的文件夹，并从本地仓库的文件夹中删除</span></span><br><span class=\"line\">$ git rm -r &lt;文件夹路径&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移除跟踪指定的文件，在本地仓库的文件夹中保留该文件</span></span><br><span class=\"line\">$ git rm --cached</span><br></pre></td></tr></table></figure>\n\n\n<hr>\n<h3 id=\"git-删除远程不存在的分支-协同开发时，其他人删了远程分支\"><a href=\"#git-删除远程不存在的分支-协同开发时，其他人删了远程分支\" class=\"headerlink\" title=\"git 删除远程不存在的分支 ( 协同开发时，其他人删了远程分支 )\"></a>git 删除远程不存在的分支 ( 协同开发时，其他人删了远程分支 )</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用 pull 命令，添加 -p 参数</span></span><br><span class=\"line\">$ git pull -p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 等同于下面的命令</span></span><br><span class=\"line\">$ git fetch -p</span><br><span class=\"line\">$ git fetch --prune origin</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<hr>\n<h3 id=\"git-config\"><a href=\"#git-config\" class=\"headerlink\" title=\"git config\"></a>git config</h3><hr>\n<p>配置 Git 的相关参数。</p>\n<p>Git 一共有3个配置文件：</p>\n<ol>\n<li>仓库级的配置文件：在仓库的 .git/.gitconfig，该配置文件只对所在的仓库有效。</li>\n<li>全局配置文件：Mac 系统在 ~/.gitconfig，Windows 系统在 C:\\Users&lt;用户名&gt;.gitconfig。</li>\n<li>系统级的配置文件：在 Git 的安装目录下（Mac 系统下安装目录在 /usr/local/git）的 etc 文件夹中的 gitconfig。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看配置信息</span></span><br><span class=\"line\"><span class=\"comment\"># --local：仓库级，--global：全局级，--system：系统级</span></span><br><span class=\"line\">$ git config &lt;--<span class=\"built_in\">local</span> | --global | --system&gt; -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前生效的配置信息</span></span><br><span class=\"line\">$ git config -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编辑配置文件</span></span><br><span class=\"line\"><span class=\"comment\"># --local：仓库级，--global：全局级，--system：系统级</span></span><br><span class=\"line\">$ git config &lt;--<span class=\"built_in\">local</span> | --global | --system&gt; -e</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加配置项</span></span><br><span class=\"line\"><span class=\"comment\"># --local：仓库级，--global：全局级，--system：系统级</span></span><br><span class=\"line\">$ git config &lt;--<span class=\"built_in\">local</span> | --global | --system&gt; --add &lt;name&gt; &lt;value&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取配置项</span></span><br><span class=\"line\">$ git config &lt;--<span class=\"built_in\">local</span> | --global | --system&gt; --get &lt;name&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除配置项</span></span><br><span class=\"line\">$ git config &lt;--<span class=\"built_in\">local</span> | --global | --system&gt; --<span class=\"built_in\">unset</span> &lt;name&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置提交记录中的用户信息</span></span><br><span class=\"line\">$ git config --global user.name &lt;用户名&gt;</span><br><span class=\"line\">$ git config --global user.email &lt;邮箱地址&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更改Git缓存区的大小</span></span><br><span class=\"line\"><span class=\"comment\"># 如果提交的内容较大，默认缓存较小，提交会失败</span></span><br><span class=\"line\"><span class=\"comment\"># 缓存大小单位：B，例如：524288000（500MB）</span></span><br><span class=\"line\">$ git config --global http.postBuffer &lt;缓存大小&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用 git status/git diff 命令时以高亮或彩色方式显示改动状态</span></span><br><span class=\"line\">$ git config --global color.ui <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置可以缓存密码，默认缓存时间15分钟</span></span><br><span class=\"line\">$ git config --global credential.helper cache</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置密码的缓存时间</span></span><br><span class=\"line\"><span class=\"comment\"># 缓存时间单位：秒</span></span><br><span class=\"line\">$ git config --global credential.helper <span class=\"string\">&#x27;cache --timeout=&lt;缓存时间&gt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置长期存储密码</span></span><br><span class=\"line\">$ git config --global credential.helper store</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置忽略文件权限的改变</span></span><br><span class=\"line\">$ git config --global core.filemode <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"git-clone\"><a href=\"#git-clone\" class=\"headerlink\" title=\"git clone\"></a>git clone</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认在当前目录下创建和版本库名相同的文件夹并下载版本到该文件夹下</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> &lt;远程仓库的网址&gt;</span><br><span class=\"line\"><span class=\"comment\"># 指定本地仓库的目录</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> &lt;远程仓库的网址&gt; &lt;本地目录&gt;</span><br><span class=\"line\"><span class=\"comment\"># -b 指定要克隆的分支，默认是master分支</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> &lt;远程仓库的网址&gt; -b &lt;分支名称&gt; &lt;本地目录&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"git-remote\"><a href=\"#git-remote\" class=\"headerlink\" title=\"git remote\"></a>git remote</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出已经存在的远程仓库</span></span><br><span class=\"line\">$ git remote</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出远程仓库的详细信息，在别名后面列出URL地址</span></span><br><span class=\"line\">$ git remote -v</span><br><span class=\"line\">$ git remote --verbose</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加远程仓库</span></span><br><span class=\"line\">$ git remote add &lt;远程仓库的别名&gt; &lt;远程仓库的URL地址&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改远程仓库的别名</span></span><br><span class=\"line\">$ git remote rename &lt;原远程仓库的别名&gt; &lt;新的别名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除指定名称的远程仓库</span></span><br><span class=\"line\">$ git remote remove &lt;远程仓库的别名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改远程仓库的 URL 地址</span></span><br><span class=\"line\">$ git remote set-url &lt;远程仓库的别名&gt; &lt;新的远程仓库URL地址&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"git-branch\"><a href=\"#git-branch\" class=\"headerlink\" title=\"git branch\"></a>git branch</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出本地的所有分支，当前所在分支以 &quot;*&quot; 标出</span></span><br><span class=\"line\">$ git branch</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出本地的所有分支并显示最后一次提交，当前所在分支以 &quot;*&quot; 标出</span></span><br><span class=\"line\">$ git branch -v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建新分支，新的分支基于上一次提交建立</span></span><br><span class=\"line\">$ git branch &lt;分支名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改分支名称</span></span><br><span class=\"line\"><span class=\"comment\"># 如果不指定原分支名称则为当前所在分支</span></span><br><span class=\"line\">$ git branch -m [&lt;原分支名称&gt;] &lt;新的分支名称&gt;</span><br><span class=\"line\"><span class=\"comment\"># 强制修改分支名称</span></span><br><span class=\"line\">$ git branch -M [&lt;原分支名称&gt;] &lt;新的分支名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除指定的本地分支</span></span><br><span class=\"line\">$ git branch -d &lt;分支名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 强制删除指定的本地分支</span></span><br><span class=\"line\">$ git branch -D &lt;分支名称&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"git-checkout\"><a href=\"#git-checkout\" class=\"headerlink\" title=\"git checkout\"></a>git checkout</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换到已存在的指定分支</span></span><br><span class=\"line\">$ git checkout &lt;分支名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建并切换到指定的分支，保留所有的提交记录</span></span><br><span class=\"line\"><span class=\"comment\"># 等同于 &quot;git branch&quot; 和 &quot;git checkout&quot; 两个命令合并</span></span><br><span class=\"line\">$ git checkout -b &lt;分支名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建并切换到指定的分支，删除所有的提交记录</span></span><br><span class=\"line\">$ git checkout --orphan &lt;分支名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 替换掉本地的改动，新增的文件和已经添加到暂存区的内容不受影响</span></span><br><span class=\"line\">$ git checkout &lt;文件路径&gt;</span><br></pre></td></tr></table></figure>\n\n\n<hr>\n<h3 id=\"git-cherry-pick\"><a href=\"#git-cherry-pick\" class=\"headerlink\" title=\"git cherry-pick\"></a>git cherry-pick</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 把已经提交的记录合并到当前分支</span></span><br><span class=\"line\">$ git cherry-pick &lt;commit ID&gt;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"git-fetch\"><a href=\"#git-fetch\" class=\"headerlink\" title=\"git fetch\"></a>git fetch</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将远程仓库所有分支的最新版本全部取回到本地</span></span><br><span class=\"line\">$ git fetch &lt;远程仓库的别名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将远程仓库指定分支的最新版本取回到本地</span></span><br><span class=\"line\">$ git fetch &lt;远程主机名&gt; &lt;分支名&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"git-diff\"><a href=\"#git-diff\" class=\"headerlink\" title=\"git diff\"></a>git diff</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 比较当前文件和暂存区中文件的差异，显示没有暂存起来的更改</span></span><br><span class=\"line\">$ git diff</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 比较暂存区中的文件和上次提交时的差异</span></span><br><span class=\"line\">$ git diff --cached</span><br><span class=\"line\">$ git diff --staged</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 比较当前文件和上次提交时的差异</span></span><br><span class=\"line\">$ git diff HEAD</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看从指定的版本之后改动的内容</span></span><br><span class=\"line\">$ git diff &lt;commit ID&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 比较两个分支之间的差异</span></span><br><span class=\"line\">$ git diff &lt;分支名称&gt; &lt;分支名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看两个分支分开后各自的改动内容</span></span><br><span class=\"line\">$ git diff &lt;分支名称&gt;...&lt;分支名称&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"git-pull\"><a href=\"#git-pull\" class=\"headerlink\" title=\"git pull\"></a>git pull</h3><hr>\n<p>从远程仓库获取最新版本并合并到本地。<br>首先会执行 git fetch，然后执行 git merge，把获取的分支的 HEAD 合并到当前分支。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从远程仓库获取最新版本。</span></span><br><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"git-push\"><a href=\"#git-push\" class=\"headerlink\" title=\"git  push\"></a>git  push</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 把本地仓库的分支推送到远程仓库的指定分支</span></span><br><span class=\"line\">$ git push &lt;远程仓库的别名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除指定的远程仓库的分支</span></span><br><span class=\"line\">$ git push &lt;远程仓库的别名&gt; :&lt;远程分支名&gt;</span><br><span class=\"line\">$ git push &lt;远程仓库的别名&gt; --delete &lt;远程分支名&gt;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"git-reset\"><a href=\"#git-reset\" class=\"headerlink\" title=\"git reset\"></a>git reset</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重置暂存区，但文件不受影响</span></span><br><span class=\"line\"><span class=\"comment\"># 相当于将用 &quot;git add&quot; 命令更新到暂存区的内容撤出暂存区，可以指定文件</span></span><br><span class=\"line\"><span class=\"comment\"># 没有指定 commit ID 则默认为当前 HEAD</span></span><br><span class=\"line\">$ git reset [&lt;文件路径&gt;]</span><br><span class=\"line\">$ git reset --mixed [&lt;文件路径&gt;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改</span></span><br><span class=\"line\">$ git reset &lt;commit ID&gt;</span><br><span class=\"line\">$ git reset --mixed &lt;commit ID&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改</span></span><br><span class=\"line\"><span class=\"comment\"># 相当于调用 &quot;git reset --mixed&quot; 命令后又做了一次 &quot;git add&quot;</span></span><br><span class=\"line\">$ git reset --soft &lt;commit ID&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 HEAD 的指向改变，撤销到指定的提交记录，文件也修改了</span></span><br><span class=\"line\">$ git reset --hard &lt;commit ID&gt;</span><br></pre></td></tr></table></figure>\n\n\n<hr>\n<h3 id=\"git-tag\"><a href=\"#git-tag\" class=\"headerlink\" title=\"git tag\"></a>git tag</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打印所有的标签</span></span><br><span class=\"line\">$ git tag</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加轻量标签，指向提交对象的引用，可以指定之前的提交记录</span></span><br><span class=\"line\">$ git tag &lt;标签名称&gt; [&lt;commit ID&gt;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加带有描述信息的附注标签，可以指定之前的提交记录</span></span><br><span class=\"line\">$ git tag -a &lt;标签名称&gt; -m &lt;标签描述信息&gt; [&lt;commit ID&gt;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换到指定的标签</span></span><br><span class=\"line\">$ git checkout &lt;标签名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看标签的信息</span></span><br><span class=\"line\">$ git show &lt;标签名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除指定的标签</span></span><br><span class=\"line\">$ git tag -d &lt;标签名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将指定的标签提交到远程仓库</span></span><br><span class=\"line\">$ git push &lt;远程仓库的别名&gt; &lt;标签名称&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将本地所有的标签全部提交到远程仓库</span></span><br><span class=\"line\">$ git push &lt;远程仓库的别名&gt; –tags</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"git-mv\"><a href=\"#git-mv\" class=\"headerlink\" title=\"git mv\"></a>git mv</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重命名指定的文件或者文件夹</span></span><br><span class=\"line\">$ git mv &lt;源文件/文件夹&gt; &lt;目标文件/文件夹&gt;</span><br></pre></td></tr></table></figure>\n\n\n<hr>\n<h3 id=\"git-rm\"><a href=\"#git-rm\" class=\"headerlink\" title=\"git rm\"></a>git rm</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 移除跟踪指定的文件，并从本地仓库的文件夹中删除</span></span><br><span class=\"line\">$ git rm &lt;文件路径&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移除跟踪指定的文件夹，并从本地仓库的文件夹中删除</span></span><br><span class=\"line\">$ git rm -r &lt;文件夹路径&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移除跟踪指定的文件，在本地仓库的文件夹中保留该文件</span></span><br><span class=\"line\">$ git rm --cached</span><br></pre></td></tr></table></figure>\n\n\n<hr>\n<h3 id=\"git-删除远程不存在的分支-协同开发时，其他人删了远程分支\"><a href=\"#git-删除远程不存在的分支-协同开发时，其他人删了远程分支\" class=\"headerlink\" title=\"git 删除远程不存在的分支 ( 协同开发时，其他人删了远程分支 )\"></a>git 删除远程不存在的分支 ( 协同开发时，其他人删了远程分支 )</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用 pull 命令，添加 -p 参数</span></span><br><span class=\"line\">$ git pull -p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 等同于下面的命令</span></span><br><span class=\"line\">$ git fetch -p</span><br><span class=\"line\">$ git fetch --prune origin</span><br></pre></td></tr></table></figure>"},{"title":"HEXO Hacker 主题中文说明","date":"2021-02-06T16:00:00.000Z","toc":true,"_content":"\n\n# Hacker | [English Docs](/README.md)\n[![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)](https://github.com/ellerbrock/open-source-badge/)  [![GPL Licence](https://badges.frapsoft.com/os/gpl/gpl.svg?v=103)](https://opensource.org/licenses/GPL-2.0)  \n\n\n__Hacker 是一款专注于写作的简洁博客主题。在如此讲究复杂排版的趋势下，选择回归本源，专注于写作这件事。__  \n\n一开始是 [moyo](http://liuxinyu.me/) 为 Wordpress 所创作的一个主题，由 CodeDaraW 移植到 Hexo 。\n\n## Demo\n参考我的博客：[DaraW](http://blog.daraw.cn/)。  \n可以使用 TravisCI 实现自动化部署，配置参考 [CodeDaraW/Blog](https://github.com/CodeDaraW/Blog)。\n\n![](https://ooo.0o0.ooo/2016/08/04/57a306f56bee2.png\n)\n\n## 安装\n获得主题文件， `git clone` 或者 `download zip` 均可；  \n\n在 `themes` 文件夹中创建文件夹 `Hacker` ，将主题文件都复制粘贴至 `Hacker` 文件夹；  \n\n然后在hexo全局配置文件 `_config.yml` 中应用主题：\n\n```yaml\ntheme: Hacker\n```\n\n这样就安装好了，开始享受吧~\n\n__注意：版本更新后建议在hexo生成前执行一次 `hexo clean` ，清除以前的缓存，避免带来的一些莫名其妙的问题。__\n\n## 配置\n### 启用评论和谷歌分析\n参考 `_config.example.yml` 配置案例，创建主题配置文件 `_config.yml` 并编辑：\n\n```yaml\n# gitment\ngitment: false\ngitment_owner:\ngitment_repo:\ngitment_client_id:\ngitment_client_secret:\n\n# gitalk\ngitalk: false\ngitalk_owner:\ngitalk_admin: []\ngitalk_repo:\ngitalk_client_id:\ngitalk_client_secret:\n\n# valine comment\nvaline: false\nleancloud_id:\nleancloud_key:\n\n# disqus comment\ndisqus: false\ndisqus_shortname:\n\n# google analytics\ngoogleTrackId:\n\n# baidu analytics\nbaiduTrackId:\n```\n\n`gitment`: `boolean`，是否开启 Gitment 评论  \n`gitment_owner`: `string`，你的 GitHub ID  \n`gitment_repo`: `string`，存储评论的 Repo  \n`gitment_client_id`: `string`，你的 Client ID  \n`gitment_client_secret`: `string`，你的 Client Secret  \n\n`gitalk`: `boolean`，是否开启 Gitalk 评论  \n`gitalk_owner`: `string`，你的 GitHub ID  \n`gitalk_admin`: `array`，所有管理员 GitHub ID  \n`gitalk_repo`: `string`，存储评论的 Repo  \n`gitalk_client_id`: `string`，你的 Client ID  \n`gitalk_client_secret`: `string`，你的 Client Secret  \n\n`valine`: `boolean`，是否开启 Valine 评论  \n`leancloud_id`: `string`，你的 LeanCloud ID  \n`leancloud_key`: `string`，你的 LeanCloud Key  \n\n`disqus`: `boolean`，是否开启 Disqus 评论；  \n`disqus_shortname`: `string`，你的 Disqus Site Shortname。  \n\n`googleTrackId`: `string`，为谷歌分析的个人ID，留空则为不使用谷歌分析。\n`baiduTrackId`: `string`, 为百度统计的个人ID,留空则为不是用谷歌分析。\n\n### 启用分类和标签页面\n分类功能：执行 `hexo new page categories` ，然后修改生成的 `source/categories/index.md` ：\n\n``` markdown\ntitle: categories\ndate: 2017-01-30 19:16:17\nlayout: \"categories\"\n---  \n```\n\n如果你需要关闭该页的评论，可以添加一行 `comments: false`；`title` 对应的则是该页的标题。  \n\n标签功能：同理，执行 `hexo new page tags` ，然后修改生成的 `source/tags/index.md` ：\n``` markdown\ntitle: tags\ndate: 2017-01-30 19:16:17\nlayout: \"tags\"\n---  \n```\n配置同分类功能。\n\n在菜单中添加链接：编辑主题的 `_config.yml` ，在 `menu` 中添加 `Categories: /categories` 和 `Tags: /tags`，如下：\n``` yml\nmenu:\n  Home: /\n  Archives: /archives\n  Categories: /categories\n  Tags: /tags\n```\n\n## 协议\nGNU GPL(General Public License) v2.0\n","source":"_posts/hexo/02_hexo_中文手册.md","raw":"---\ntitle: HEXO Hacker 主题中文说明\ndate: 2021/2/7\ncategories:\n  - hexo\ntags:\n  - hexo\ntoc: true # 是否启用内容索引\n# sidebar: none # 是否启用sidebar侧边栏，none：不启用\n---\n\n\n# Hacker | [English Docs](/README.md)\n[![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)](https://github.com/ellerbrock/open-source-badge/)  [![GPL Licence](https://badges.frapsoft.com/os/gpl/gpl.svg?v=103)](https://opensource.org/licenses/GPL-2.0)  \n\n\n__Hacker 是一款专注于写作的简洁博客主题。在如此讲究复杂排版的趋势下，选择回归本源，专注于写作这件事。__  \n\n一开始是 [moyo](http://liuxinyu.me/) 为 Wordpress 所创作的一个主题，由 CodeDaraW 移植到 Hexo 。\n\n## Demo\n参考我的博客：[DaraW](http://blog.daraw.cn/)。  \n可以使用 TravisCI 实现自动化部署，配置参考 [CodeDaraW/Blog](https://github.com/CodeDaraW/Blog)。\n\n![](https://ooo.0o0.ooo/2016/08/04/57a306f56bee2.png\n)\n\n## 安装\n获得主题文件， `git clone` 或者 `download zip` 均可；  \n\n在 `themes` 文件夹中创建文件夹 `Hacker` ，将主题文件都复制粘贴至 `Hacker` 文件夹；  \n\n然后在hexo全局配置文件 `_config.yml` 中应用主题：\n\n```yaml\ntheme: Hacker\n```\n\n这样就安装好了，开始享受吧~\n\n__注意：版本更新后建议在hexo生成前执行一次 `hexo clean` ，清除以前的缓存，避免带来的一些莫名其妙的问题。__\n\n## 配置\n### 启用评论和谷歌分析\n参考 `_config.example.yml` 配置案例，创建主题配置文件 `_config.yml` 并编辑：\n\n```yaml\n# gitment\ngitment: false\ngitment_owner:\ngitment_repo:\ngitment_client_id:\ngitment_client_secret:\n\n# gitalk\ngitalk: false\ngitalk_owner:\ngitalk_admin: []\ngitalk_repo:\ngitalk_client_id:\ngitalk_client_secret:\n\n# valine comment\nvaline: false\nleancloud_id:\nleancloud_key:\n\n# disqus comment\ndisqus: false\ndisqus_shortname:\n\n# google analytics\ngoogleTrackId:\n\n# baidu analytics\nbaiduTrackId:\n```\n\n`gitment`: `boolean`，是否开启 Gitment 评论  \n`gitment_owner`: `string`，你的 GitHub ID  \n`gitment_repo`: `string`，存储评论的 Repo  \n`gitment_client_id`: `string`，你的 Client ID  \n`gitment_client_secret`: `string`，你的 Client Secret  \n\n`gitalk`: `boolean`，是否开启 Gitalk 评论  \n`gitalk_owner`: `string`，你的 GitHub ID  \n`gitalk_admin`: `array`，所有管理员 GitHub ID  \n`gitalk_repo`: `string`，存储评论的 Repo  \n`gitalk_client_id`: `string`，你的 Client ID  \n`gitalk_client_secret`: `string`，你的 Client Secret  \n\n`valine`: `boolean`，是否开启 Valine 评论  \n`leancloud_id`: `string`，你的 LeanCloud ID  \n`leancloud_key`: `string`，你的 LeanCloud Key  \n\n`disqus`: `boolean`，是否开启 Disqus 评论；  \n`disqus_shortname`: `string`，你的 Disqus Site Shortname。  \n\n`googleTrackId`: `string`，为谷歌分析的个人ID，留空则为不使用谷歌分析。\n`baiduTrackId`: `string`, 为百度统计的个人ID,留空则为不是用谷歌分析。\n\n### 启用分类和标签页面\n分类功能：执行 `hexo new page categories` ，然后修改生成的 `source/categories/index.md` ：\n\n``` markdown\ntitle: categories\ndate: 2017-01-30 19:16:17\nlayout: \"categories\"\n---  \n```\n\n如果你需要关闭该页的评论，可以添加一行 `comments: false`；`title` 对应的则是该页的标题。  \n\n标签功能：同理，执行 `hexo new page tags` ，然后修改生成的 `source/tags/index.md` ：\n``` markdown\ntitle: tags\ndate: 2017-01-30 19:16:17\nlayout: \"tags\"\n---  \n```\n配置同分类功能。\n\n在菜单中添加链接：编辑主题的 `_config.yml` ，在 `menu` 中添加 `Categories: /categories` 和 `Tags: /tags`，如下：\n``` yml\nmenu:\n  Home: /\n  Archives: /archives\n  Categories: /categories\n  Tags: /tags\n```\n\n## 协议\nGNU GPL(General Public License) v2.0\n","slug":"hexo/02_hexo_中文手册","published":1,"updated":"2021-02-08T12:56:39.232Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkwtrt5x0006dpjscbzz1xyd","content":"<h1 id=\"Hacker-English-Docs\"><a href=\"#Hacker-English-Docs\" class=\"headerlink\" title=\"Hacker | English Docs\"></a>Hacker | <a href=\"/README.md\">English Docs</a></h1><p><a href=\"https://github.com/ellerbrock/open-source-badge/\"><img src=\"https://badges.frapsoft.com/os/v1/open-source.svg?v=103\" alt=\"Open Source Love\"></a>  <a href=\"https://opensource.org/licenses/GPL-2.0\"><img src=\"https://badges.frapsoft.com/os/gpl/gpl.svg?v=103\" alt=\"GPL Licence\"></a>  </p>\n<p><strong>Hacker 是一款专注于写作的简洁博客主题。在如此讲究复杂排版的趋势下，选择回归本源，专注于写作这件事。</strong>  </p>\n<p>一开始是 <a href=\"http://liuxinyu.me/\">moyo</a> 为 Wordpress 所创作的一个主题，由 CodeDaraW 移植到 Hexo 。</p>\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p>参考我的博客：<a href=\"http://blog.daraw.cn/\">DaraW</a>。<br>可以使用 TravisCI 实现自动化部署，配置参考 <a href=\"https://github.com/CodeDaraW/Blog\">CodeDaraW/Blog</a>。</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/08/04/57a306f56bee2.png\"></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>获得主题文件， <code>git clone</code> 或者 <code>download zip</code> 均可；  </p>\n<p>在 <code>themes</code> 文件夹中创建文件夹 <code>Hacker</code> ，将主题文件都复制粘贴至 <code>Hacker</code> 文件夹；  </p>\n<p>然后在hexo全局配置文件 <code>_config.yml</code> 中应用主题：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">Hacker</span></span><br></pre></td></tr></table></figure>\n<p>这样就安装好了，开始享受吧~</p>\n<p><strong>注意：版本更新后建议在hexo生成前执行一次 <code>hexo clean</code> ，清除以前的缓存，避免带来的一些莫名其妙的问题。</strong></p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h3 id=\"启用评论和谷歌分析\"><a href=\"#启用评论和谷歌分析\" class=\"headerlink\" title=\"启用评论和谷歌分析\"></a>启用评论和谷歌分析</h3><p>参考 <code>_config.example.yml</code> 配置案例，创建主题配置文件 <code>_config.yml</code> 并编辑：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># gitment</span></span><br><span class=\"line\"><span class=\"attr\">gitment:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">gitment_owner:</span></span><br><span class=\"line\"><span class=\"attr\">gitment_repo:</span></span><br><span class=\"line\"><span class=\"attr\">gitment_client_id:</span></span><br><span class=\"line\"><span class=\"attr\">gitment_client_secret:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gitalk</span></span><br><span class=\"line\"><span class=\"attr\">gitalk:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">gitalk_owner:</span></span><br><span class=\"line\"><span class=\"attr\">gitalk_admin:</span> []</span><br><span class=\"line\"><span class=\"attr\">gitalk_repo:</span></span><br><span class=\"line\"><span class=\"attr\">gitalk_client_id:</span></span><br><span class=\"line\"><span class=\"attr\">gitalk_client_secret:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># valine comment</span></span><br><span class=\"line\"><span class=\"attr\">valine:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">leancloud_id:</span></span><br><span class=\"line\"><span class=\"attr\">leancloud_key:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># disqus comment</span></span><br><span class=\"line\"><span class=\"attr\">disqus:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">disqus_shortname:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># google analytics</span></span><br><span class=\"line\"><span class=\"attr\">googleTrackId:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># baidu analytics</span></span><br><span class=\"line\"><span class=\"attr\">baiduTrackId:</span></span><br></pre></td></tr></table></figure>\n<p><code>gitment</code>: <code>boolean</code>，是否开启 Gitment 评论<br><code>gitment_owner</code>: <code>string</code>，你的 GitHub ID<br><code>gitment_repo</code>: <code>string</code>，存储评论的 Repo<br><code>gitment_client_id</code>: <code>string</code>，你的 Client ID<br><code>gitment_client_secret</code>: <code>string</code>，你的 Client Secret  </p>\n<p><code>gitalk</code>: <code>boolean</code>，是否开启 Gitalk 评论<br><code>gitalk_owner</code>: <code>string</code>，你的 GitHub ID<br><code>gitalk_admin</code>: <code>array</code>，所有管理员 GitHub ID<br><code>gitalk_repo</code>: <code>string</code>，存储评论的 Repo<br><code>gitalk_client_id</code>: <code>string</code>，你的 Client ID<br><code>gitalk_client_secret</code>: <code>string</code>，你的 Client Secret  </p>\n<p><code>valine</code>: <code>boolean</code>，是否开启 Valine 评论<br><code>leancloud_id</code>: <code>string</code>，你的 LeanCloud ID<br><code>leancloud_key</code>: <code>string</code>，你的 LeanCloud Key  </p>\n<p><code>disqus</code>: <code>boolean</code>，是否开启 Disqus 评论；<br><code>disqus_shortname</code>: <code>string</code>，你的 Disqus Site Shortname。  </p>\n<p><code>googleTrackId</code>: <code>string</code>，为谷歌分析的个人ID，留空则为不使用谷歌分析。<br><code>baiduTrackId</code>: <code>string</code>, 为百度统计的个人ID,留空则为不是用谷歌分析。</p>\n<h3 id=\"启用分类和标签页面\"><a href=\"#启用分类和标签页面\" class=\"headerlink\" title=\"启用分类和标签页面\"></a>启用分类和标签页面</h3><p>分类功能：执行 <code>hexo new page categories</code> ，然后修改生成的 <code>source/categories/index.md</code> ：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2017-01-30 19:16:17</span><br><span class=\"line\">layout: &quot;categories&quot;</span><br><span class=\"line\">---  </span><br></pre></td></tr></table></figure>\n<p>如果你需要关闭该页的评论，可以添加一行 <code>comments: false</code>；<code>title</code> 对应的则是该页的标题。  </p>\n<p>标签功能：同理，执行 <code>hexo new page tags</code> ，然后修改生成的 <code>source/tags/index.md</code> ：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2017-01-30 19:16:17</span><br><span class=\"line\">layout: &quot;tags&quot;</span><br><span class=\"line\">---  </span><br></pre></td></tr></table></figure>\n<p>配置同分类功能。</p>\n<p>在菜单中添加链接：编辑主题的 <code>_config.yml</code> ，在 <code>menu</code> 中添加 <code>Categories: /categories</code> 和 <code>Tags: /tags</code>，如下：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">Home:</span> <span class=\"string\">/</span></span><br><span class=\"line\">  <span class=\"attr\">Archives:</span> <span class=\"string\">/archives</span></span><br><span class=\"line\">  <span class=\"attr\">Categories:</span> <span class=\"string\">/categories</span></span><br><span class=\"line\">  <span class=\"attr\">Tags:</span> <span class=\"string\">/tags</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"协议\"><a href=\"#协议\" class=\"headerlink\" title=\"协议\"></a>协议</h2><p>GNU GPL(General Public License) v2.0</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Hacker-English-Docs\"><a href=\"#Hacker-English-Docs\" class=\"headerlink\" title=\"Hacker | English Docs\"></a>Hacker | <a href=\"/README.md\">English Docs</a></h1><p><a href=\"https://github.com/ellerbrock/open-source-badge/\"><img src=\"https://badges.frapsoft.com/os/v1/open-source.svg?v=103\" alt=\"Open Source Love\"></a>  <a href=\"https://opensource.org/licenses/GPL-2.0\"><img src=\"https://badges.frapsoft.com/os/gpl/gpl.svg?v=103\" alt=\"GPL Licence\"></a>  </p>\n<p><strong>Hacker 是一款专注于写作的简洁博客主题。在如此讲究复杂排版的趋势下，选择回归本源，专注于写作这件事。</strong>  </p>\n<p>一开始是 <a href=\"http://liuxinyu.me/\">moyo</a> 为 Wordpress 所创作的一个主题，由 CodeDaraW 移植到 Hexo 。</p>\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p>参考我的博客：<a href=\"http://blog.daraw.cn/\">DaraW</a>。<br>可以使用 TravisCI 实现自动化部署，配置参考 <a href=\"https://github.com/CodeDaraW/Blog\">CodeDaraW/Blog</a>。</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/08/04/57a306f56bee2.png\"></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>获得主题文件， <code>git clone</code> 或者 <code>download zip</code> 均可；  </p>\n<p>在 <code>themes</code> 文件夹中创建文件夹 <code>Hacker</code> ，将主题文件都复制粘贴至 <code>Hacker</code> 文件夹；  </p>\n<p>然后在hexo全局配置文件 <code>_config.yml</code> 中应用主题：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">Hacker</span></span><br></pre></td></tr></table></figure>\n<p>这样就安装好了，开始享受吧~</p>\n<p><strong>注意：版本更新后建议在hexo生成前执行一次 <code>hexo clean</code> ，清除以前的缓存，避免带来的一些莫名其妙的问题。</strong></p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h3 id=\"启用评论和谷歌分析\"><a href=\"#启用评论和谷歌分析\" class=\"headerlink\" title=\"启用评论和谷歌分析\"></a>启用评论和谷歌分析</h3><p>参考 <code>_config.example.yml</code> 配置案例，创建主题配置文件 <code>_config.yml</code> 并编辑：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># gitment</span></span><br><span class=\"line\"><span class=\"attr\">gitment:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">gitment_owner:</span></span><br><span class=\"line\"><span class=\"attr\">gitment_repo:</span></span><br><span class=\"line\"><span class=\"attr\">gitment_client_id:</span></span><br><span class=\"line\"><span class=\"attr\">gitment_client_secret:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gitalk</span></span><br><span class=\"line\"><span class=\"attr\">gitalk:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">gitalk_owner:</span></span><br><span class=\"line\"><span class=\"attr\">gitalk_admin:</span> []</span><br><span class=\"line\"><span class=\"attr\">gitalk_repo:</span></span><br><span class=\"line\"><span class=\"attr\">gitalk_client_id:</span></span><br><span class=\"line\"><span class=\"attr\">gitalk_client_secret:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># valine comment</span></span><br><span class=\"line\"><span class=\"attr\">valine:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">leancloud_id:</span></span><br><span class=\"line\"><span class=\"attr\">leancloud_key:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># disqus comment</span></span><br><span class=\"line\"><span class=\"attr\">disqus:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">disqus_shortname:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># google analytics</span></span><br><span class=\"line\"><span class=\"attr\">googleTrackId:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># baidu analytics</span></span><br><span class=\"line\"><span class=\"attr\">baiduTrackId:</span></span><br></pre></td></tr></table></figure>\n<p><code>gitment</code>: <code>boolean</code>，是否开启 Gitment 评论<br><code>gitment_owner</code>: <code>string</code>，你的 GitHub ID<br><code>gitment_repo</code>: <code>string</code>，存储评论的 Repo<br><code>gitment_client_id</code>: <code>string</code>，你的 Client ID<br><code>gitment_client_secret</code>: <code>string</code>，你的 Client Secret  </p>\n<p><code>gitalk</code>: <code>boolean</code>，是否开启 Gitalk 评论<br><code>gitalk_owner</code>: <code>string</code>，你的 GitHub ID<br><code>gitalk_admin</code>: <code>array</code>，所有管理员 GitHub ID<br><code>gitalk_repo</code>: <code>string</code>，存储评论的 Repo<br><code>gitalk_client_id</code>: <code>string</code>，你的 Client ID<br><code>gitalk_client_secret</code>: <code>string</code>，你的 Client Secret  </p>\n<p><code>valine</code>: <code>boolean</code>，是否开启 Valine 评论<br><code>leancloud_id</code>: <code>string</code>，你的 LeanCloud ID<br><code>leancloud_key</code>: <code>string</code>，你的 LeanCloud Key  </p>\n<p><code>disqus</code>: <code>boolean</code>，是否开启 Disqus 评论；<br><code>disqus_shortname</code>: <code>string</code>，你的 Disqus Site Shortname。  </p>\n<p><code>googleTrackId</code>: <code>string</code>，为谷歌分析的个人ID，留空则为不使用谷歌分析。<br><code>baiduTrackId</code>: <code>string</code>, 为百度统计的个人ID,留空则为不是用谷歌分析。</p>\n<h3 id=\"启用分类和标签页面\"><a href=\"#启用分类和标签页面\" class=\"headerlink\" title=\"启用分类和标签页面\"></a>启用分类和标签页面</h3><p>分类功能：执行 <code>hexo new page categories</code> ，然后修改生成的 <code>source/categories/index.md</code> ：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2017-01-30 19:16:17</span><br><span class=\"line\">layout: &quot;categories&quot;</span><br><span class=\"line\">---  </span><br></pre></td></tr></table></figure>\n<p>如果你需要关闭该页的评论，可以添加一行 <code>comments: false</code>；<code>title</code> 对应的则是该页的标题。  </p>\n<p>标签功能：同理，执行 <code>hexo new page tags</code> ，然后修改生成的 <code>source/tags/index.md</code> ：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2017-01-30 19:16:17</span><br><span class=\"line\">layout: &quot;tags&quot;</span><br><span class=\"line\">---  </span><br></pre></td></tr></table></figure>\n<p>配置同分类功能。</p>\n<p>在菜单中添加链接：编辑主题的 <code>_config.yml</code> ，在 <code>menu</code> 中添加 <code>Categories: /categories</code> 和 <code>Tags: /tags</code>，如下：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">Home:</span> <span class=\"string\">/</span></span><br><span class=\"line\">  <span class=\"attr\">Archives:</span> <span class=\"string\">/archives</span></span><br><span class=\"line\">  <span class=\"attr\">Categories:</span> <span class=\"string\">/categories</span></span><br><span class=\"line\">  <span class=\"attr\">Tags:</span> <span class=\"string\">/tags</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"协议\"><a href=\"#协议\" class=\"headerlink\" title=\"协议\"></a>协议</h2><p>GNU GPL(General Public License) v2.0</p>\n"},{"title":"hack_binary_example","date":"2021-02-06T16:00:00.000Z","_content":"\n--- \n### 目的\n---\n通过修改bin文件，跳过字符串匹配，密码检查。\n\n--- \n### 代码\n---\n\n~~~c\n#include <stdio.h>    \n#include <string.h>    \n    \nint main(int argc,char* argv[]){    \n        if (argc == 2){    \n                printf(\"cheking passwd!\\n\");    \n                if (strcmp(\"pwd\",argv[1]) == 0){    \n                        printf(\"ok you got me\\n\");    \n                }else    \n                        printf(\"WRONG !\\n\");    \n        }else    \n                printf(\"Usage: <key>\\n\");    \n    \n        return ;    \n} \n~~~\n---\n### 带参数打开gdb \n---\n~~~c\n    gdb --args ./a.out pwd\n~~~\n---\n### gdb 检查\n--- \n1.  我们通过gdb单步，到strcmp后一步,打开汇编\n\n~~~c\n    (gdb) n\n    10\t                        printf(\"WRONG !\\n\");\n    (gdb) disassemble \n    Dump of assembler code for function main:\n    0x0000555555555169 <+0>:\tendbr64 \n    0x000055555555516d <+4>:\tpush   %rbp\n    0x000055555555516e <+5>:\tmov    %rsp,%rbp\n    0x0000555555555171 <+8>:\tsub    $0x10,%rsp\n    0x0000555555555175 <+12>:\tmov    %edi,-0x4(%rbp)\n    0x0000555555555178 <+15>:\tmov    %rsi,-0x10(%rbp)\n    0x000055555555517c <+19>:\tcmpl   $0x2,-0x4(%rbp)\n    0x0000555555555180 <+23>:\tjne    0x5555555551c8 <main+95>\n    0x0000555555555182 <+25>:\tlea    0xe7b(%rip),%rdi        # 0x555555556004\n    0x0000555555555189 <+32>:\tcallq  0x555555555060 <puts@plt>\n    0x000055555555518e <+37>:\tmov    -0x10(%rbp),%rax\n    0x0000555555555192 <+41>:\tadd    $0x8,%rax\n    0x0000555555555196 <+45>:\tmov    (%rax),%rax\n    0x0000555555555199 <+48>:\tmov    %rax,%rsi\n    0x000055555555519c <+51>:\tlea    0xe71(%rip),%rdi        # 0x555555556014\n    0x00005555555551a3 <+58>:\tcallq  0x555555555070 <strcmp@plt>\n    0x00005555555551a8 <+63>:\ttest   %eax,%eax\n    0x00005555555551aa <+65>:\tjne    0x5555555551ba <main+81>\n    0x00005555555551ac <+67>:\tlea    0xe65(%rip),%rdi        # 0x555555556018\n    0x00005555555551b3 <+74>:\tcallq  0x555555555060 <puts@plt>\n    0x00005555555551b8 <+79>:\tjmp    0x5555555551d4 <main+107>\n => 0x00005555555551ba <+81>:\tlea    0xe65(%rip),%rdi        # 0x555555556026\n    0x00005555555551c1 <+88>:\tcallq  0x555555555060 <puts@plt>\n    0x00005555555551c6 <+93>:\tjmp    0x5555555551d4 <main+107>\n    0x00005555555551c8 <+95>:\tlea    0xe5f(%rip),%rdi        # 0x55555555602e\n    0x00005555555551cf <+102>:\tcallq  0x555555555060 <puts@plt>\n    0x00005555555551d4 <+107>:\tnop\n    0x00005555555551d5 <+108>:\tnop\n    0x00005555555551d6 <+109>:\tleaveq \n    0x00005555555551d7 <+110>:\tretq   \n    End of assembler dump.\n~~~\n可以看到 strcmp 后，有一句：test   %eax,%eax ，意思是判断eax 是不是0， 并将状态保存到某个寄存器中，后面肯定也会根据状态判断strcmp返回是不是0\n~~~c\n    (gdb) x/8b 0x00005555555551aa\n    0x5555555551aa <main+65>:\t117\t14\t72\t-115\t61\t101\t14\t0\n    (gdb) x/8x 0x00005555555551aa\n    0x5555555551aa <main+65>:\t0x75\t0x0e\t0x48\t0x8d\t0x3d\t0x65\t0x0e\t0x00\n    (gdb) \n~~~\ntest 后就是跳转命令， jne, 查看intel 架构的手册，他就是根据 0x75 来判断是不是相等的，类似ARM中的 cpsv标志位.\n~~~c\n    0x75 不等\n    0x74 相等\n~~~\n\n所以目标就是将0x75更换为0x74,通过上下文的数字确定位置。0x75\t0x0e 0x48 0x8d 0x3d\n\n---\n### 修改16进制文件\n--- \nvim 中，执行：%！xxd 可以将二进制转换为十六进制修改。 ：%！xxd -r 返回二进制， 保存\n~~~c\n    00001120: f30f 1efa 803d e52e 0000 0075 2b55 4883  .....=.....u+UH.\n    00001130: 3dc2 2e00 0000 4889 e574 0c48 8b3d c62e  =.....H..t.H.=..\n    00001140: 0000 e809 ffff ffe8 64ff ffff c605 bd2e  ........d.......\n    00001150: 0000 015d c30f 1f00 c30f 1f80 0000 0000  ...]............\n    00001160: f30f 1efa e977 ffff fff3 0f1e fa55 4889  .....w.......UH.\n    00001170: e548 83ec 1089 7dfc 4889 75f0 837d fc02  .H....}.H.u..}..\n    00001180: 7546 488d 3d7b 0e00 00e8 d2fe ffff 488b  uFH.={........H.\n    00001190: 45f0 4883 c008 488b 0048 89c6 488d 3d71  E.H...H..H..H.=q\n    000011a0: 0e00 00e8 c8fe ffff 85c0 750e 488d 3d65  ..........u.H.=e\n    000011b0: 0e00 00e8 a8fe ffff eb1a 488d 3d65 0e00  ..........H.=e..\n    000011c0: 00e8 9afe ffff eb0c 488d 3d5f 0e00 00e8  ........H.=_....\n    000011d0: 8cfe ffff 9090 c9c3 0f1f 8400 0000 0000  ................\n    000011e0: f30f 1efa 4157 4c8d 3dc3 2b00 0041 5649  ....AWL.=.+..AVI\n    000011f0: 89d6 4155 4989 f541 5441 89fc 5548 8d2d  ..AUI..ATA..UH.-\n    00001200: b42b 0000 534c 29fd 4883 ec08 e8ef fdff  .+..SL).H.......\n    00001210: ff48 c1fd 0374 1f31 db0f 1f80 0000 0000  .H...t.1........\n    00001220: 4c89 f24c 89ee 4489 e741 ff14 df48 83c3  L..L..D..A...H..\n    00001230: 0148 39dd 75ea 4883 c408 5b5d 415c 415d  .H9.u.H...[]A\\A]\n    00001240: 415e 415f c366 662e 0f1f 8400 0000 0000  A^A_.ff.........\n~~~\n\n---\n### 效果\n--- \n\n~~~\n    ./a.out fawe\n    cheking passwd!\n    WRONG !\n    \n    vim a.out \n    \n    ./a.out fawe\n    cheking passwd!\n    ok you got me\n~~~\n\n---\n### binaryninga \n--- \n有一些GUI工具可以很简单的完成这些步骤\n\n![](patchbinary.png)\n\n","source":"_posts/liveoverflow/hack_binary_example.md","raw":"---\ntitle: hack_binary_example\ndate: 2021/2/7\ncategories: liveoverflow\n---\n\n--- \n### 目的\n---\n通过修改bin文件，跳过字符串匹配，密码检查。\n\n--- \n### 代码\n---\n\n~~~c\n#include <stdio.h>    \n#include <string.h>    \n    \nint main(int argc,char* argv[]){    \n        if (argc == 2){    \n                printf(\"cheking passwd!\\n\");    \n                if (strcmp(\"pwd\",argv[1]) == 0){    \n                        printf(\"ok you got me\\n\");    \n                }else    \n                        printf(\"WRONG !\\n\");    \n        }else    \n                printf(\"Usage: <key>\\n\");    \n    \n        return ;    \n} \n~~~\n---\n### 带参数打开gdb \n---\n~~~c\n    gdb --args ./a.out pwd\n~~~\n---\n### gdb 检查\n--- \n1.  我们通过gdb单步，到strcmp后一步,打开汇编\n\n~~~c\n    (gdb) n\n    10\t                        printf(\"WRONG !\\n\");\n    (gdb) disassemble \n    Dump of assembler code for function main:\n    0x0000555555555169 <+0>:\tendbr64 \n    0x000055555555516d <+4>:\tpush   %rbp\n    0x000055555555516e <+5>:\tmov    %rsp,%rbp\n    0x0000555555555171 <+8>:\tsub    $0x10,%rsp\n    0x0000555555555175 <+12>:\tmov    %edi,-0x4(%rbp)\n    0x0000555555555178 <+15>:\tmov    %rsi,-0x10(%rbp)\n    0x000055555555517c <+19>:\tcmpl   $0x2,-0x4(%rbp)\n    0x0000555555555180 <+23>:\tjne    0x5555555551c8 <main+95>\n    0x0000555555555182 <+25>:\tlea    0xe7b(%rip),%rdi        # 0x555555556004\n    0x0000555555555189 <+32>:\tcallq  0x555555555060 <puts@plt>\n    0x000055555555518e <+37>:\tmov    -0x10(%rbp),%rax\n    0x0000555555555192 <+41>:\tadd    $0x8,%rax\n    0x0000555555555196 <+45>:\tmov    (%rax),%rax\n    0x0000555555555199 <+48>:\tmov    %rax,%rsi\n    0x000055555555519c <+51>:\tlea    0xe71(%rip),%rdi        # 0x555555556014\n    0x00005555555551a3 <+58>:\tcallq  0x555555555070 <strcmp@plt>\n    0x00005555555551a8 <+63>:\ttest   %eax,%eax\n    0x00005555555551aa <+65>:\tjne    0x5555555551ba <main+81>\n    0x00005555555551ac <+67>:\tlea    0xe65(%rip),%rdi        # 0x555555556018\n    0x00005555555551b3 <+74>:\tcallq  0x555555555060 <puts@plt>\n    0x00005555555551b8 <+79>:\tjmp    0x5555555551d4 <main+107>\n => 0x00005555555551ba <+81>:\tlea    0xe65(%rip),%rdi        # 0x555555556026\n    0x00005555555551c1 <+88>:\tcallq  0x555555555060 <puts@plt>\n    0x00005555555551c6 <+93>:\tjmp    0x5555555551d4 <main+107>\n    0x00005555555551c8 <+95>:\tlea    0xe5f(%rip),%rdi        # 0x55555555602e\n    0x00005555555551cf <+102>:\tcallq  0x555555555060 <puts@plt>\n    0x00005555555551d4 <+107>:\tnop\n    0x00005555555551d5 <+108>:\tnop\n    0x00005555555551d6 <+109>:\tleaveq \n    0x00005555555551d7 <+110>:\tretq   \n    End of assembler dump.\n~~~\n可以看到 strcmp 后，有一句：test   %eax,%eax ，意思是判断eax 是不是0， 并将状态保存到某个寄存器中，后面肯定也会根据状态判断strcmp返回是不是0\n~~~c\n    (gdb) x/8b 0x00005555555551aa\n    0x5555555551aa <main+65>:\t117\t14\t72\t-115\t61\t101\t14\t0\n    (gdb) x/8x 0x00005555555551aa\n    0x5555555551aa <main+65>:\t0x75\t0x0e\t0x48\t0x8d\t0x3d\t0x65\t0x0e\t0x00\n    (gdb) \n~~~\ntest 后就是跳转命令， jne, 查看intel 架构的手册，他就是根据 0x75 来判断是不是相等的，类似ARM中的 cpsv标志位.\n~~~c\n    0x75 不等\n    0x74 相等\n~~~\n\n所以目标就是将0x75更换为0x74,通过上下文的数字确定位置。0x75\t0x0e 0x48 0x8d 0x3d\n\n---\n### 修改16进制文件\n--- \nvim 中，执行：%！xxd 可以将二进制转换为十六进制修改。 ：%！xxd -r 返回二进制， 保存\n~~~c\n    00001120: f30f 1efa 803d e52e 0000 0075 2b55 4883  .....=.....u+UH.\n    00001130: 3dc2 2e00 0000 4889 e574 0c48 8b3d c62e  =.....H..t.H.=..\n    00001140: 0000 e809 ffff ffe8 64ff ffff c605 bd2e  ........d.......\n    00001150: 0000 015d c30f 1f00 c30f 1f80 0000 0000  ...]............\n    00001160: f30f 1efa e977 ffff fff3 0f1e fa55 4889  .....w.......UH.\n    00001170: e548 83ec 1089 7dfc 4889 75f0 837d fc02  .H....}.H.u..}..\n    00001180: 7546 488d 3d7b 0e00 00e8 d2fe ffff 488b  uFH.={........H.\n    00001190: 45f0 4883 c008 488b 0048 89c6 488d 3d71  E.H...H..H..H.=q\n    000011a0: 0e00 00e8 c8fe ffff 85c0 750e 488d 3d65  ..........u.H.=e\n    000011b0: 0e00 00e8 a8fe ffff eb1a 488d 3d65 0e00  ..........H.=e..\n    000011c0: 00e8 9afe ffff eb0c 488d 3d5f 0e00 00e8  ........H.=_....\n    000011d0: 8cfe ffff 9090 c9c3 0f1f 8400 0000 0000  ................\n    000011e0: f30f 1efa 4157 4c8d 3dc3 2b00 0041 5649  ....AWL.=.+..AVI\n    000011f0: 89d6 4155 4989 f541 5441 89fc 5548 8d2d  ..AUI..ATA..UH.-\n    00001200: b42b 0000 534c 29fd 4883 ec08 e8ef fdff  .+..SL).H.......\n    00001210: ff48 c1fd 0374 1f31 db0f 1f80 0000 0000  .H...t.1........\n    00001220: 4c89 f24c 89ee 4489 e741 ff14 df48 83c3  L..L..D..A...H..\n    00001230: 0148 39dd 75ea 4883 c408 5b5d 415c 415d  .H9.u.H...[]A\\A]\n    00001240: 415e 415f c366 662e 0f1f 8400 0000 0000  A^A_.ff.........\n~~~\n\n---\n### 效果\n--- \n\n~~~\n    ./a.out fawe\n    cheking passwd!\n    WRONG !\n    \n    vim a.out \n    \n    ./a.out fawe\n    cheking passwd!\n    ok you got me\n~~~\n\n---\n### binaryninga \n--- \n有一些GUI工具可以很简单的完成这些步骤\n\n![](patchbinary.png)\n\n","slug":"liveoverflow/hack_binary_example","published":1,"updated":"2021-02-08T17:12:11.884Z","_id":"ckkwtrt5z0008dpjs0zpkfyx1","comments":1,"layout":"post","photos":[],"link":"","content":"<hr>\n<h3 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h3><hr>\n<p>通过修改bin文件，跳过字符串匹配，密码检查。</p>\n<hr>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><hr>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;    </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;    </span></span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc,<span class=\"keyword\">char</span>* argv[])</span></span>&#123;    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (argc == <span class=\"number\">2</span>)&#123;    </span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;cheking passwd!\\n&quot;</span>);    </span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"built_in\">strcmp</span>(<span class=\"string\">&quot;pwd&quot;</span>,argv[<span class=\"number\">1</span>]) == <span class=\"number\">0</span>)&#123;    </span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;ok you got me\\n&quot;</span>);    </span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>    </span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;WRONG !\\n&quot;</span>);    </span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>    </span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Usage: &lt;key&gt;\\n&quot;</span>);    </span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> ;    </span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"带参数打开gdb\"><a href=\"#带参数打开gdb\" class=\"headerlink\" title=\"带参数打开gdb\"></a>带参数打开gdb</h3><hr>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gdb --args ./a.out pwd</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"gdb-检查\"><a href=\"#gdb-检查\" class=\"headerlink\" title=\"gdb 检查\"></a>gdb 检查</h3><hr>\n<ol>\n<li> 我们通过gdb单步，到strcmp后一步,打开汇编</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   (gdb) n</span><br><span class=\"line\">   <span class=\"number\">10</span>\t                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;WRONG !\\n&quot;</span>);</span><br><span class=\"line\">   (gdb) disassemble </span><br><span class=\"line\">   Dump of assembler code <span class=\"keyword\">for</span> function main:</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555169</span> &lt;+<span class=\"number\">0</span>&gt;:\tendbr64 </span><br><span class=\"line\">   <span class=\"number\">0x000055555555516d</span> &lt;+<span class=\"number\">4</span>&gt;:\tpush   %rbp</span><br><span class=\"line\">   <span class=\"number\">0x000055555555516e</span> &lt;+<span class=\"number\">5</span>&gt;:\tmov    %rsp,%rbp</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555171</span> &lt;+<span class=\"number\">8</span>&gt;:\tsub    $<span class=\"number\">0x10</span>,%rsp</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555175</span> &lt;+<span class=\"number\">12</span>&gt;:\tmov    %edi,<span class=\"number\">-0x4</span>(%rbp)</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555178</span> &lt;+<span class=\"number\">15</span>&gt;:\tmov    %rsi,<span class=\"number\">-0x10</span>(%rbp)</span><br><span class=\"line\">   <span class=\"number\">0x000055555555517c</span> &lt;+<span class=\"number\">19</span>&gt;:\tcmpl   $<span class=\"number\">0x2</span>,<span class=\"number\">-0x4</span>(%rbp)</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555180</span> &lt;+<span class=\"number\">23</span>&gt;:\tjne    <span class=\"number\">0x5555555551c8</span> &lt;main+<span class=\"number\">95</span>&gt;</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555182</span> &lt;+<span class=\"number\">25</span>&gt;:\tlea    <span class=\"number\">0xe7b</span>(%rip),%rdi        # <span class=\"number\">0x555555556004</span></span><br><span class=\"line\">   <span class=\"number\">0x0000555555555189</span> &lt;+<span class=\"number\">32</span>&gt;:\tcallq  <span class=\"number\">0x555555555060</span> &lt;<span class=\"built_in\">puts</span>@plt&gt;</span><br><span class=\"line\">   <span class=\"number\">0x000055555555518e</span> &lt;+<span class=\"number\">37</span>&gt;:\tmov    <span class=\"number\">-0x10</span>(%rbp),%rax</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555192</span> &lt;+<span class=\"number\">41</span>&gt;:\tadd    $<span class=\"number\">0x8</span>,%rax</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555196</span> &lt;+<span class=\"number\">45</span>&gt;:\tmov    (%rax),%rax</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555199</span> &lt;+<span class=\"number\">48</span>&gt;:\tmov    %rax,%rsi</span><br><span class=\"line\">   <span class=\"number\">0x000055555555519c</span> &lt;+<span class=\"number\">51</span>&gt;:\tlea    <span class=\"number\">0xe71</span>(%rip),%rdi        # <span class=\"number\">0x555555556014</span></span><br><span class=\"line\">   <span class=\"number\">0x00005555555551a3</span> &lt;+<span class=\"number\">58</span>&gt;:\tcallq  <span class=\"number\">0x555555555070</span> &lt;<span class=\"built_in\">strcmp</span>@plt&gt;</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551a8</span> &lt;+<span class=\"number\">63</span>&gt;:\ttest   %eax,%eax</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551aa</span> &lt;+<span class=\"number\">65</span>&gt;:\tjne    <span class=\"number\">0x5555555551ba</span> &lt;main+<span class=\"number\">81</span>&gt;</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551ac</span> &lt;+<span class=\"number\">67</span>&gt;:\tlea    <span class=\"number\">0xe65</span>(%rip),%rdi        # <span class=\"number\">0x555555556018</span></span><br><span class=\"line\">   <span class=\"number\">0x00005555555551b3</span> &lt;+<span class=\"number\">74</span>&gt;:\tcallq  <span class=\"number\">0x555555555060</span> &lt;<span class=\"built_in\">puts</span>@plt&gt;</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551b8</span> &lt;+<span class=\"number\">79</span>&gt;:\tjmp    <span class=\"number\">0x5555555551d4</span> &lt;main+<span class=\"number\">107</span>&gt;</span><br><span class=\"line\">=&gt; <span class=\"number\">0x00005555555551ba</span> &lt;+<span class=\"number\">81</span>&gt;:\tlea    <span class=\"number\">0xe65</span>(%rip),%rdi        # <span class=\"number\">0x555555556026</span></span><br><span class=\"line\">   <span class=\"number\">0x00005555555551c1</span> &lt;+<span class=\"number\">88</span>&gt;:\tcallq  <span class=\"number\">0x555555555060</span> &lt;<span class=\"built_in\">puts</span>@plt&gt;</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551c6</span> &lt;+<span class=\"number\">93</span>&gt;:\tjmp    <span class=\"number\">0x5555555551d4</span> &lt;main+<span class=\"number\">107</span>&gt;</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551c8</span> &lt;+<span class=\"number\">95</span>&gt;:\tlea    <span class=\"number\">0xe5f</span>(%rip),%rdi        # <span class=\"number\">0x55555555602e</span></span><br><span class=\"line\">   <span class=\"number\">0x00005555555551cf</span> &lt;+<span class=\"number\">102</span>&gt;:\tcallq  <span class=\"number\">0x555555555060</span> &lt;<span class=\"built_in\">puts</span>@plt&gt;</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551d4</span> &lt;+<span class=\"number\">107</span>&gt;:\tnop</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551d5</span> &lt;+<span class=\"number\">108</span>&gt;:\tnop</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551d6</span> &lt;+<span class=\"number\">109</span>&gt;:\tleaveq </span><br><span class=\"line\">   <span class=\"number\">0x00005555555551d7</span> &lt;+<span class=\"number\">110</span>&gt;:\tretq   </span><br><span class=\"line\">   End of assembler dump.</span><br></pre></td></tr></table></figure>\n<p>可以看到 strcmp 后，有一句：test   %eax,%eax ，意思是判断eax 是不是0， 并将状态保存到某个寄存器中，后面肯定也会根据状态判断strcmp返回是不是0</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(gdb) x/<span class=\"number\">8b</span> <span class=\"number\">0x00005555555551aa</span></span><br><span class=\"line\"><span class=\"number\">0x5555555551aa</span> &lt;main+<span class=\"number\">65</span>&gt;:\t<span class=\"number\">117</span>\t<span class=\"number\">14</span>\t<span class=\"number\">72</span>\t<span class=\"number\">-115</span>\t<span class=\"number\">61</span>\t<span class=\"number\">101</span>\t<span class=\"number\">14</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">(gdb) x/<span class=\"number\">8</span>x <span class=\"number\">0x00005555555551aa</span></span><br><span class=\"line\"><span class=\"number\">0x5555555551aa</span> &lt;main+<span class=\"number\">65</span>&gt;:\t<span class=\"number\">0x75</span>\t<span class=\"number\">0x0e</span>\t<span class=\"number\">0x48</span>\t<span class=\"number\">0x8d</span>\t<span class=\"number\">0x3d</span>\t<span class=\"number\">0x65</span>\t<span class=\"number\">0x0e</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\">(gdb) </span><br></pre></td></tr></table></figure>\n<p>test 后就是跳转命令， jne, 查看intel 架构的手册，他就是根据 0x75 来判断是不是相等的，类似ARM中的 cpsv标志位.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0x75</span> 不等</span><br><span class=\"line\"><span class=\"number\">0x74</span> 相等</span><br></pre></td></tr></table></figure>\n<p>所以目标就是将0x75更换为0x74,通过上下文的数字确定位置。0x75    0x0e 0x48 0x8d 0x3d</p>\n<hr>\n<h3 id=\"修改16进制文件\"><a href=\"#修改16进制文件\" class=\"headerlink\" title=\"修改16进制文件\"></a>修改16进制文件</h3><hr>\n<p>vim 中，执行：%！xxd 可以将二进制转换为十六进制修改。 ：%！xxd -r 返回二进制， 保存</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">00001120</span>: f30f <span class=\"number\">1</span>efa <span class=\"number\">803</span>d e52e <span class=\"number\">0000</span> <span class=\"number\">0075</span> <span class=\"number\">2b</span>55 <span class=\"number\">4883</span>  .....=.....u+UH.</span><br><span class=\"line\"><span class=\"number\">00001130</span>: <span class=\"number\">3</span>dc2 <span class=\"number\">2e00</span> <span class=\"number\">0000</span> <span class=\"number\">4889</span> e574 <span class=\"number\">0</span>c48 <span class=\"number\">8b</span>3d c62e  =.....H..t.H.=..</span><br><span class=\"line\"><span class=\"number\">00001140</span>: <span class=\"number\">0000</span> e809 ffff ffe8 <span class=\"number\">64f</span>f ffff c605 bd2e  ........d.......</span><br><span class=\"line\"><span class=\"number\">00001150</span>: <span class=\"number\">0000</span> <span class=\"number\">015</span>d c30f <span class=\"number\">1f</span>00 c30f <span class=\"number\">1f</span>80 <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ...]............</span><br><span class=\"line\"><span class=\"number\">00001160</span>: f30f <span class=\"number\">1</span>efa e977 ffff fff3 <span class=\"number\">0f</span>1e fa55 <span class=\"number\">4889</span>  .....w.......UH.</span><br><span class=\"line\"><span class=\"number\">00001170</span>: e548 <span class=\"number\">83</span>ec <span class=\"number\">1089</span> <span class=\"number\">7</span>dfc <span class=\"number\">4889</span> <span class=\"number\">75f</span>0 <span class=\"number\">837</span>d fc02  .H....&#125;.H.u..&#125;..</span><br><span class=\"line\"><span class=\"number\">00001180</span>: <span class=\"number\">7546</span> <span class=\"number\">488</span>d <span class=\"number\">3</span>d7b <span class=\"number\">0e00</span> <span class=\"number\">00e8</span> d2fe ffff <span class=\"number\">488b</span>  uFH.=&#123;........H.</span><br><span class=\"line\"><span class=\"number\">00001190</span>: <span class=\"number\">45f</span>0 <span class=\"number\">4883</span> c008 <span class=\"number\">488b</span> <span class=\"number\">0048</span> <span class=\"number\">89</span>c6 <span class=\"number\">488</span>d <span class=\"number\">3</span>d71  E.H...H..H..H.=q</span><br><span class=\"line\"><span class=\"number\">000011</span>a0: <span class=\"number\">0e00</span> <span class=\"number\">00e8</span> c8fe ffff <span class=\"number\">85</span>c0 <span class=\"number\">750</span>e <span class=\"number\">488</span>d <span class=\"number\">3</span>d65  ..........u.H.=e</span><br><span class=\"line\"><span class=\"number\">000011b</span>0: <span class=\"number\">0e00</span> <span class=\"number\">00e8</span> a8fe ffff eb1a <span class=\"number\">488</span>d <span class=\"number\">3</span>d65 <span class=\"number\">0e00</span>  ..........H.=e..</span><br><span class=\"line\"><span class=\"number\">000011</span>c0: <span class=\"number\">00e8</span> <span class=\"number\">9</span>afe ffff eb0c <span class=\"number\">488</span>d <span class=\"number\">3</span>d5f <span class=\"number\">0e00</span> <span class=\"number\">00e8</span>  ........H.=_....</span><br><span class=\"line\"><span class=\"number\">000011</span>d0: <span class=\"number\">8</span>cfe ffff <span class=\"number\">9090</span> c9c3 <span class=\"number\">0f</span>1f <span class=\"number\">8400</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................</span><br><span class=\"line\"><span class=\"number\">000011e0</span>: f30f <span class=\"number\">1</span>efa <span class=\"number\">4157</span> <span class=\"number\">4</span>c8d <span class=\"number\">3</span>dc3 <span class=\"number\">2b</span>00 <span class=\"number\">0041</span> <span class=\"number\">5649</span>  ....AWL.=.+..AVI</span><br><span class=\"line\"><span class=\"number\">000011f</span>0: <span class=\"number\">89</span>d6 <span class=\"number\">4155</span> <span class=\"number\">4989</span> f541 <span class=\"number\">5441</span> <span class=\"number\">89f</span>c <span class=\"number\">5548</span> <span class=\"number\">8</span>d2d  ..AUI..ATA..UH.-</span><br><span class=\"line\"><span class=\"number\">00001200</span>: b42b <span class=\"number\">0000</span> <span class=\"number\">534</span>c <span class=\"number\">29f</span>d <span class=\"number\">4883</span> ec08 e8ef fdff  .+..SL).H.......</span><br><span class=\"line\"><span class=\"number\">00001210</span>: ff48 c1fd <span class=\"number\">0374</span> <span class=\"number\">1f</span>31 db0f <span class=\"number\">1f</span>80 <span class=\"number\">0000</span> <span class=\"number\">0000</span>  .H...t<span class=\"number\">.1</span>........</span><br><span class=\"line\"><span class=\"number\">00001220</span>: <span class=\"number\">4</span>c89 f24c <span class=\"number\">89</span>ee <span class=\"number\">4489</span> e741 ff14 df48 <span class=\"number\">83</span>c3  L..L..D..A...H..</span><br><span class=\"line\"><span class=\"number\">00001230</span>: <span class=\"number\">0148</span> <span class=\"number\">39</span>dd <span class=\"number\">75</span>ea <span class=\"number\">4883</span> c408 <span class=\"number\">5b</span>5d <span class=\"number\">415</span>c <span class=\"number\">415</span>d  .H9.u.H...[]A\\A]</span><br><span class=\"line\"><span class=\"number\">00001240</span>: <span class=\"number\">415</span>e <span class=\"number\">415f</span> c366 <span class=\"number\">662</span>e <span class=\"number\">0f</span>1f <span class=\"number\">8400</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  A^A_.ff.........</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;a.out fawe</span><br><span class=\"line\">cheking passwd!</span><br><span class=\"line\">WRONG !</span><br><span class=\"line\"></span><br><span class=\"line\">vim a.out </span><br><span class=\"line\"></span><br><span class=\"line\">.&#x2F;a.out fawe</span><br><span class=\"line\">cheking passwd!</span><br><span class=\"line\">ok you got me</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"binaryninga\"><a href=\"#binaryninga\" class=\"headerlink\" title=\"binaryninga\"></a>binaryninga</h3><hr>\n<p>有一些GUI工具可以很简单的完成这些步骤</p>\n<p><img src=\"patchbinary.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<h3 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h3><hr>\n<p>通过修改bin文件，跳过字符串匹配，密码检查。</p>\n<hr>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><hr>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;    </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;    </span></span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc,<span class=\"keyword\">char</span>* argv[])</span></span>&#123;    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (argc == <span class=\"number\">2</span>)&#123;    </span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;cheking passwd!\\n&quot;</span>);    </span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"built_in\">strcmp</span>(<span class=\"string\">&quot;pwd&quot;</span>,argv[<span class=\"number\">1</span>]) == <span class=\"number\">0</span>)&#123;    </span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;ok you got me\\n&quot;</span>);    </span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>    </span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;WRONG !\\n&quot;</span>);    </span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>    </span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Usage: &lt;key&gt;\\n&quot;</span>);    </span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> ;    </span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"带参数打开gdb\"><a href=\"#带参数打开gdb\" class=\"headerlink\" title=\"带参数打开gdb\"></a>带参数打开gdb</h3><hr>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gdb --args ./a.out pwd</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"gdb-检查\"><a href=\"#gdb-检查\" class=\"headerlink\" title=\"gdb 检查\"></a>gdb 检查</h3><hr>\n<ol>\n<li> 我们通过gdb单步，到strcmp后一步,打开汇编</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   (gdb) n</span><br><span class=\"line\">   <span class=\"number\">10</span>\t                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;WRONG !\\n&quot;</span>);</span><br><span class=\"line\">   (gdb) disassemble </span><br><span class=\"line\">   Dump of assembler code <span class=\"keyword\">for</span> function main:</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555169</span> &lt;+<span class=\"number\">0</span>&gt;:\tendbr64 </span><br><span class=\"line\">   <span class=\"number\">0x000055555555516d</span> &lt;+<span class=\"number\">4</span>&gt;:\tpush   %rbp</span><br><span class=\"line\">   <span class=\"number\">0x000055555555516e</span> &lt;+<span class=\"number\">5</span>&gt;:\tmov    %rsp,%rbp</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555171</span> &lt;+<span class=\"number\">8</span>&gt;:\tsub    $<span class=\"number\">0x10</span>,%rsp</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555175</span> &lt;+<span class=\"number\">12</span>&gt;:\tmov    %edi,<span class=\"number\">-0x4</span>(%rbp)</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555178</span> &lt;+<span class=\"number\">15</span>&gt;:\tmov    %rsi,<span class=\"number\">-0x10</span>(%rbp)</span><br><span class=\"line\">   <span class=\"number\">0x000055555555517c</span> &lt;+<span class=\"number\">19</span>&gt;:\tcmpl   $<span class=\"number\">0x2</span>,<span class=\"number\">-0x4</span>(%rbp)</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555180</span> &lt;+<span class=\"number\">23</span>&gt;:\tjne    <span class=\"number\">0x5555555551c8</span> &lt;main+<span class=\"number\">95</span>&gt;</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555182</span> &lt;+<span class=\"number\">25</span>&gt;:\tlea    <span class=\"number\">0xe7b</span>(%rip),%rdi        # <span class=\"number\">0x555555556004</span></span><br><span class=\"line\">   <span class=\"number\">0x0000555555555189</span> &lt;+<span class=\"number\">32</span>&gt;:\tcallq  <span class=\"number\">0x555555555060</span> &lt;<span class=\"built_in\">puts</span>@plt&gt;</span><br><span class=\"line\">   <span class=\"number\">0x000055555555518e</span> &lt;+<span class=\"number\">37</span>&gt;:\tmov    <span class=\"number\">-0x10</span>(%rbp),%rax</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555192</span> &lt;+<span class=\"number\">41</span>&gt;:\tadd    $<span class=\"number\">0x8</span>,%rax</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555196</span> &lt;+<span class=\"number\">45</span>&gt;:\tmov    (%rax),%rax</span><br><span class=\"line\">   <span class=\"number\">0x0000555555555199</span> &lt;+<span class=\"number\">48</span>&gt;:\tmov    %rax,%rsi</span><br><span class=\"line\">   <span class=\"number\">0x000055555555519c</span> &lt;+<span class=\"number\">51</span>&gt;:\tlea    <span class=\"number\">0xe71</span>(%rip),%rdi        # <span class=\"number\">0x555555556014</span></span><br><span class=\"line\">   <span class=\"number\">0x00005555555551a3</span> &lt;+<span class=\"number\">58</span>&gt;:\tcallq  <span class=\"number\">0x555555555070</span> &lt;<span class=\"built_in\">strcmp</span>@plt&gt;</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551a8</span> &lt;+<span class=\"number\">63</span>&gt;:\ttest   %eax,%eax</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551aa</span> &lt;+<span class=\"number\">65</span>&gt;:\tjne    <span class=\"number\">0x5555555551ba</span> &lt;main+<span class=\"number\">81</span>&gt;</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551ac</span> &lt;+<span class=\"number\">67</span>&gt;:\tlea    <span class=\"number\">0xe65</span>(%rip),%rdi        # <span class=\"number\">0x555555556018</span></span><br><span class=\"line\">   <span class=\"number\">0x00005555555551b3</span> &lt;+<span class=\"number\">74</span>&gt;:\tcallq  <span class=\"number\">0x555555555060</span> &lt;<span class=\"built_in\">puts</span>@plt&gt;</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551b8</span> &lt;+<span class=\"number\">79</span>&gt;:\tjmp    <span class=\"number\">0x5555555551d4</span> &lt;main+<span class=\"number\">107</span>&gt;</span><br><span class=\"line\">=&gt; <span class=\"number\">0x00005555555551ba</span> &lt;+<span class=\"number\">81</span>&gt;:\tlea    <span class=\"number\">0xe65</span>(%rip),%rdi        # <span class=\"number\">0x555555556026</span></span><br><span class=\"line\">   <span class=\"number\">0x00005555555551c1</span> &lt;+<span class=\"number\">88</span>&gt;:\tcallq  <span class=\"number\">0x555555555060</span> &lt;<span class=\"built_in\">puts</span>@plt&gt;</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551c6</span> &lt;+<span class=\"number\">93</span>&gt;:\tjmp    <span class=\"number\">0x5555555551d4</span> &lt;main+<span class=\"number\">107</span>&gt;</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551c8</span> &lt;+<span class=\"number\">95</span>&gt;:\tlea    <span class=\"number\">0xe5f</span>(%rip),%rdi        # <span class=\"number\">0x55555555602e</span></span><br><span class=\"line\">   <span class=\"number\">0x00005555555551cf</span> &lt;+<span class=\"number\">102</span>&gt;:\tcallq  <span class=\"number\">0x555555555060</span> &lt;<span class=\"built_in\">puts</span>@plt&gt;</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551d4</span> &lt;+<span class=\"number\">107</span>&gt;:\tnop</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551d5</span> &lt;+<span class=\"number\">108</span>&gt;:\tnop</span><br><span class=\"line\">   <span class=\"number\">0x00005555555551d6</span> &lt;+<span class=\"number\">109</span>&gt;:\tleaveq </span><br><span class=\"line\">   <span class=\"number\">0x00005555555551d7</span> &lt;+<span class=\"number\">110</span>&gt;:\tretq   </span><br><span class=\"line\">   End of assembler dump.</span><br></pre></td></tr></table></figure>\n<p>可以看到 strcmp 后，有一句：test   %eax,%eax ，意思是判断eax 是不是0， 并将状态保存到某个寄存器中，后面肯定也会根据状态判断strcmp返回是不是0</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(gdb) x/<span class=\"number\">8b</span> <span class=\"number\">0x00005555555551aa</span></span><br><span class=\"line\"><span class=\"number\">0x5555555551aa</span> &lt;main+<span class=\"number\">65</span>&gt;:\t<span class=\"number\">117</span>\t<span class=\"number\">14</span>\t<span class=\"number\">72</span>\t<span class=\"number\">-115</span>\t<span class=\"number\">61</span>\t<span class=\"number\">101</span>\t<span class=\"number\">14</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">(gdb) x/<span class=\"number\">8</span>x <span class=\"number\">0x00005555555551aa</span></span><br><span class=\"line\"><span class=\"number\">0x5555555551aa</span> &lt;main+<span class=\"number\">65</span>&gt;:\t<span class=\"number\">0x75</span>\t<span class=\"number\">0x0e</span>\t<span class=\"number\">0x48</span>\t<span class=\"number\">0x8d</span>\t<span class=\"number\">0x3d</span>\t<span class=\"number\">0x65</span>\t<span class=\"number\">0x0e</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\">(gdb) </span><br></pre></td></tr></table></figure>\n<p>test 后就是跳转命令， jne, 查看intel 架构的手册，他就是根据 0x75 来判断是不是相等的，类似ARM中的 cpsv标志位.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0x75</span> 不等</span><br><span class=\"line\"><span class=\"number\">0x74</span> 相等</span><br></pre></td></tr></table></figure>\n<p>所以目标就是将0x75更换为0x74,通过上下文的数字确定位置。0x75    0x0e 0x48 0x8d 0x3d</p>\n<hr>\n<h3 id=\"修改16进制文件\"><a href=\"#修改16进制文件\" class=\"headerlink\" title=\"修改16进制文件\"></a>修改16进制文件</h3><hr>\n<p>vim 中，执行：%！xxd 可以将二进制转换为十六进制修改。 ：%！xxd -r 返回二进制， 保存</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">00001120</span>: f30f <span class=\"number\">1</span>efa <span class=\"number\">803</span>d e52e <span class=\"number\">0000</span> <span class=\"number\">0075</span> <span class=\"number\">2b</span>55 <span class=\"number\">4883</span>  .....=.....u+UH.</span><br><span class=\"line\"><span class=\"number\">00001130</span>: <span class=\"number\">3</span>dc2 <span class=\"number\">2e00</span> <span class=\"number\">0000</span> <span class=\"number\">4889</span> e574 <span class=\"number\">0</span>c48 <span class=\"number\">8b</span>3d c62e  =.....H..t.H.=..</span><br><span class=\"line\"><span class=\"number\">00001140</span>: <span class=\"number\">0000</span> e809 ffff ffe8 <span class=\"number\">64f</span>f ffff c605 bd2e  ........d.......</span><br><span class=\"line\"><span class=\"number\">00001150</span>: <span class=\"number\">0000</span> <span class=\"number\">015</span>d c30f <span class=\"number\">1f</span>00 c30f <span class=\"number\">1f</span>80 <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ...]............</span><br><span class=\"line\"><span class=\"number\">00001160</span>: f30f <span class=\"number\">1</span>efa e977 ffff fff3 <span class=\"number\">0f</span>1e fa55 <span class=\"number\">4889</span>  .....w.......UH.</span><br><span class=\"line\"><span class=\"number\">00001170</span>: e548 <span class=\"number\">83</span>ec <span class=\"number\">1089</span> <span class=\"number\">7</span>dfc <span class=\"number\">4889</span> <span class=\"number\">75f</span>0 <span class=\"number\">837</span>d fc02  .H....&#125;.H.u..&#125;..</span><br><span class=\"line\"><span class=\"number\">00001180</span>: <span class=\"number\">7546</span> <span class=\"number\">488</span>d <span class=\"number\">3</span>d7b <span class=\"number\">0e00</span> <span class=\"number\">00e8</span> d2fe ffff <span class=\"number\">488b</span>  uFH.=&#123;........H.</span><br><span class=\"line\"><span class=\"number\">00001190</span>: <span class=\"number\">45f</span>0 <span class=\"number\">4883</span> c008 <span class=\"number\">488b</span> <span class=\"number\">0048</span> <span class=\"number\">89</span>c6 <span class=\"number\">488</span>d <span class=\"number\">3</span>d71  E.H...H..H..H.=q</span><br><span class=\"line\"><span class=\"number\">000011</span>a0: <span class=\"number\">0e00</span> <span class=\"number\">00e8</span> c8fe ffff <span class=\"number\">85</span>c0 <span class=\"number\">750</span>e <span class=\"number\">488</span>d <span class=\"number\">3</span>d65  ..........u.H.=e</span><br><span class=\"line\"><span class=\"number\">000011b</span>0: <span class=\"number\">0e00</span> <span class=\"number\">00e8</span> a8fe ffff eb1a <span class=\"number\">488</span>d <span class=\"number\">3</span>d65 <span class=\"number\">0e00</span>  ..........H.=e..</span><br><span class=\"line\"><span class=\"number\">000011</span>c0: <span class=\"number\">00e8</span> <span class=\"number\">9</span>afe ffff eb0c <span class=\"number\">488</span>d <span class=\"number\">3</span>d5f <span class=\"number\">0e00</span> <span class=\"number\">00e8</span>  ........H.=_....</span><br><span class=\"line\"><span class=\"number\">000011</span>d0: <span class=\"number\">8</span>cfe ffff <span class=\"number\">9090</span> c9c3 <span class=\"number\">0f</span>1f <span class=\"number\">8400</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................</span><br><span class=\"line\"><span class=\"number\">000011e0</span>: f30f <span class=\"number\">1</span>efa <span class=\"number\">4157</span> <span class=\"number\">4</span>c8d <span class=\"number\">3</span>dc3 <span class=\"number\">2b</span>00 <span class=\"number\">0041</span> <span class=\"number\">5649</span>  ....AWL.=.+..AVI</span><br><span class=\"line\"><span class=\"number\">000011f</span>0: <span class=\"number\">89</span>d6 <span class=\"number\">4155</span> <span class=\"number\">4989</span> f541 <span class=\"number\">5441</span> <span class=\"number\">89f</span>c <span class=\"number\">5548</span> <span class=\"number\">8</span>d2d  ..AUI..ATA..UH.-</span><br><span class=\"line\"><span class=\"number\">00001200</span>: b42b <span class=\"number\">0000</span> <span class=\"number\">534</span>c <span class=\"number\">29f</span>d <span class=\"number\">4883</span> ec08 e8ef fdff  .+..SL).H.......</span><br><span class=\"line\"><span class=\"number\">00001210</span>: ff48 c1fd <span class=\"number\">0374</span> <span class=\"number\">1f</span>31 db0f <span class=\"number\">1f</span>80 <span class=\"number\">0000</span> <span class=\"number\">0000</span>  .H...t<span class=\"number\">.1</span>........</span><br><span class=\"line\"><span class=\"number\">00001220</span>: <span class=\"number\">4</span>c89 f24c <span class=\"number\">89</span>ee <span class=\"number\">4489</span> e741 ff14 df48 <span class=\"number\">83</span>c3  L..L..D..A...H..</span><br><span class=\"line\"><span class=\"number\">00001230</span>: <span class=\"number\">0148</span> <span class=\"number\">39</span>dd <span class=\"number\">75</span>ea <span class=\"number\">4883</span> c408 <span class=\"number\">5b</span>5d <span class=\"number\">415</span>c <span class=\"number\">415</span>d  .H9.u.H...[]A\\A]</span><br><span class=\"line\"><span class=\"number\">00001240</span>: <span class=\"number\">415</span>e <span class=\"number\">415f</span> c366 <span class=\"number\">662</span>e <span class=\"number\">0f</span>1f <span class=\"number\">8400</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  A^A_.ff.........</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;a.out fawe</span><br><span class=\"line\">cheking passwd!</span><br><span class=\"line\">WRONG !</span><br><span class=\"line\"></span><br><span class=\"line\">vim a.out </span><br><span class=\"line\"></span><br><span class=\"line\">.&#x2F;a.out fawe</span><br><span class=\"line\">cheking passwd!</span><br><span class=\"line\">ok you got me</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"binaryninga\"><a href=\"#binaryninga\" class=\"headerlink\" title=\"binaryninga\"></a>binaryninga</h3><hr>\n<p>有一些GUI工具可以很简单的完成这些步骤</p>\n<p><img src=\"patchbinary.png\"></p>\n"},{"title":"MarkDown Language Reference","date":"2021-02-06T16:00:00.000Z","_content":"\n- [一级标题](#一级标题)\n  - [二级标题](#二级标题)\n    - [三级标题](#三级标题)\n      - [四级标题](#四级标题)\n        - [五级标题](#五级标题)\n  - [###### 六级标题](#-六级标题)\n    - [代码块](#代码块)\n    - [表格](#表格)\n  - [| 单元格  | 单元格 |](#-单元格---单元格-)\n    - [红色字体](#红色字体)\n    - [注释](#注释)\n  - [~~~](#)\n    - [任务列表](#任务列表)\n  - [- [x] 任务二 已做任务 `- + 空格 + [x]`](#--x-任务二-已做任务----空格--x)\n    - [换行 (后面空2格)](#换行-后面空2格)\n    - [空行](#空行)\n    - [对齐方式](#对齐方式)\n    - [斜体、粗体、删除线、下划线、背景高亮](#斜体粗体删除线下划线背景高亮)\n    - [超链接、页内链接、自动链接](#超链接页内链接自动链接)\n    - [注脚](#注脚)\n    - [自动链接](#自动链接)\n    - [插图片](#插图片)\n    - [多级引用](#多级引用)\n    - [字体、字号、颜色](#字体字号颜色)\n    - [流程图](#流程图)\n      - [分割线](#分割线)\n    - [HTML表单](#html表单)\n    - [特殊字符](#特殊字符)\n\n\n----\n### 目录\n  Markdown All in One: Create Table of Contents\n----\n### 标题\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题  <!--最多6级标题-->\n----\n### 代码块\n$符，加行号\n~~~c\n$   int a = 4 ;\n~~~\nVS\n~~~c\n   int a = 4 ;\n~~~\n\n---\n### 表格\n|  表头   | 表头  |\n|  ----  | ----  |\n| 单元格  | 单元格 |\n| 单元格  | 单元格 |\n---\n### 红色字体\n\n---\n### 注释\n~~~javascript\n<div style='display: none'>\n哈哈我是注释，不会在浏览器中显示。\n</div>\n~~~\n---\n### 任务列表\n- [ ] 任务一 未做任务 `- + 空格 + [ ]`\n- [x] 任务二 已做任务 `- + 空格 + [x]`\n---\n### 换行 (后面空2格)\nnihao  \nfaweafe\n\n---\n### 空行\n在编辑的时候有多少个空行(只要这一行只有回车或者space没有其他的字符就算空行)，在渲染之后，只隔着一行。\n\n--- \n### 对齐方式\n<center>行中心对齐</center>\n<p align=\"left\">行左对齐</p>\n<p align=\"right\">行右对齐</p>\n\n---\n### 斜体、粗体、删除线、下划线、背景高亮\n*斜体*或_斜体_\n**粗体**\n***加粗斜体***\n~~删除线~~\n++下划线++\n==背景高亮==\n\n--- \n### 超链接、页内链接、自动链接\n* 方法一\n[]里写链接文字，()里写链接地址, ()中的\"\"中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字，链接地址与title前有一个空格。\n\n作者：择势量投\n链接：https://www.jianshu.com/p/ebe52d2d468f\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n欢迎阅读 [择势勤](https://www.jianshu.com/u/16d77399d3a7 \"择势勤\")\n* 方法二\n我经常去的几个网站[Google][1]、[Leanote][2]。\n\n[1]:http://www.google.com \n[2]:http://www.leanote.com\n\n\n\n--- \n### 注脚\n使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2]。\n\n[^1]:Markdown是一种纯文本标记语言\n\n[^2]:HyperText Markup Language 超文本标记语言\n\n\n--- \n### 自动链接\nMarkdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用<>包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：\n&lt;http://example.com/&gt; &emsp;&emsp; \n&lt;address@example.com&gt;\n\n---\n### 插图片\n1. _config.yml 中配置 post_asset_folder: true\n2. 在md文件同级目录建立同名文件夹，将图片放入，就可以相对的引用\n![](patchbinary.png)\n\n<!-- <center>  <!--开始居中对齐-->\n<!-- ![GitHub set up](./images/1.jpg \"图片Title\")\n![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif \"图片Title\")\n格式: ![图片Alt](图片地址 \"图片Title\") -->\n<!-- </center> 结束居中对齐 --> -->\n\n--- \n### 多级引用\n>>> 请问 Markdwon 怎么用？ - 小白\n>> 自己看教程！ - 愤青\n> 教程在哪？ - 小白\n\n---\n### 字体、字号、颜色\n<font face=\"黑体\">我是黑体字</font>\n<font face=\"微软雅黑\">我是微软雅黑</font>\n<font face=\"STCAIYUN\">我是华文彩云</font>\n<font color=#0099ff size=12 face=\"黑体\">黑体</font>\n<font color=gray size=5>gray</font>\n<font color=#00ffff size=3>null</font>\n\n--- \n### 流程图\n```\ngraph LR\nA-->B\n```\n```\nsequenceDiagram\nA->>B: How are you?\nB->>A: Great!\n```\n\n--- \n#### 分割线\n* * *\n***\n*****\n- - -\n-----------\n\n\n--- \n### HTML表单\n<center>\n<table>\n<tr>\n<th rowspan=\"2\">值班人员</th>\n<th>星期一</th>\n<th>星期二</th>\n<th>星期三</th>\n</tr>\n<tr>\n<td>李强</td>\n<td>张明</td>\n<td>王平</td>\n</tr>\n</table>\n\n</center>\n\n\n---\n### 特殊字符\n|  表头   | 表头  |\n|  ----  | ----  |\n| 单元格  | 单元格 |\n| 单元格  | 单元格 |\n\n｜特殊字符 | 描述 | 字符的代|\n |  ----  | ----  | ----  |\n｜   | 空格符 |\t&nbsp;|\n｜< | 小于号 |\t&lt; |\n｜ > | 大于号 | &gt; |\n｜&\t | 和号\t| &amp;|\n｜￥\t | 人民币 | &yen;|\n｜©\t | 版权\t| &copy;|\n｜®\t | 注册商标\t| &reg;|\n｜°C | 摄氏度 | &deg;|\n｜±\t | 正负号 | &plusmn;|\n｜×\t| 乘号 | &times;|\n｜÷\t| 除号 | &divide;|\n｜²\t| 平方（上标²）| &sup2;|\n｜³\t| 立方（上标³）| &sup3;|\n\n\n","source":"_posts/markdown/03_language_markdown_ref.md","raw":"---\ntitle: MarkDown Language Reference\ndate: 2021/2/7\ncategories: markdown\n---\n\n- [一级标题](#一级标题)\n  - [二级标题](#二级标题)\n    - [三级标题](#三级标题)\n      - [四级标题](#四级标题)\n        - [五级标题](#五级标题)\n  - [###### 六级标题](#-六级标题)\n    - [代码块](#代码块)\n    - [表格](#表格)\n  - [| 单元格  | 单元格 |](#-单元格---单元格-)\n    - [红色字体](#红色字体)\n    - [注释](#注释)\n  - [~~~](#)\n    - [任务列表](#任务列表)\n  - [- [x] 任务二 已做任务 `- + 空格 + [x]`](#--x-任务二-已做任务----空格--x)\n    - [换行 (后面空2格)](#换行-后面空2格)\n    - [空行](#空行)\n    - [对齐方式](#对齐方式)\n    - [斜体、粗体、删除线、下划线、背景高亮](#斜体粗体删除线下划线背景高亮)\n    - [超链接、页内链接、自动链接](#超链接页内链接自动链接)\n    - [注脚](#注脚)\n    - [自动链接](#自动链接)\n    - [插图片](#插图片)\n    - [多级引用](#多级引用)\n    - [字体、字号、颜色](#字体字号颜色)\n    - [流程图](#流程图)\n      - [分割线](#分割线)\n    - [HTML表单](#html表单)\n    - [特殊字符](#特殊字符)\n\n\n----\n### 目录\n  Markdown All in One: Create Table of Contents\n----\n### 标题\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题  <!--最多6级标题-->\n----\n### 代码块\n$符，加行号\n~~~c\n$   int a = 4 ;\n~~~\nVS\n~~~c\n   int a = 4 ;\n~~~\n\n---\n### 表格\n|  表头   | 表头  |\n|  ----  | ----  |\n| 单元格  | 单元格 |\n| 单元格  | 单元格 |\n---\n### 红色字体\n\n---\n### 注释\n~~~javascript\n<div style='display: none'>\n哈哈我是注释，不会在浏览器中显示。\n</div>\n~~~\n---\n### 任务列表\n- [ ] 任务一 未做任务 `- + 空格 + [ ]`\n- [x] 任务二 已做任务 `- + 空格 + [x]`\n---\n### 换行 (后面空2格)\nnihao  \nfaweafe\n\n---\n### 空行\n在编辑的时候有多少个空行(只要这一行只有回车或者space没有其他的字符就算空行)，在渲染之后，只隔着一行。\n\n--- \n### 对齐方式\n<center>行中心对齐</center>\n<p align=\"left\">行左对齐</p>\n<p align=\"right\">行右对齐</p>\n\n---\n### 斜体、粗体、删除线、下划线、背景高亮\n*斜体*或_斜体_\n**粗体**\n***加粗斜体***\n~~删除线~~\n++下划线++\n==背景高亮==\n\n--- \n### 超链接、页内链接、自动链接\n* 方法一\n[]里写链接文字，()里写链接地址, ()中的\"\"中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字，链接地址与title前有一个空格。\n\n作者：择势量投\n链接：https://www.jianshu.com/p/ebe52d2d468f\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n欢迎阅读 [择势勤](https://www.jianshu.com/u/16d77399d3a7 \"择势勤\")\n* 方法二\n我经常去的几个网站[Google][1]、[Leanote][2]。\n\n[1]:http://www.google.com \n[2]:http://www.leanote.com\n\n\n\n--- \n### 注脚\n使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2]。\n\n[^1]:Markdown是一种纯文本标记语言\n\n[^2]:HyperText Markup Language 超文本标记语言\n\n\n--- \n### 自动链接\nMarkdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用<>包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：\n&lt;http://example.com/&gt; &emsp;&emsp; \n&lt;address@example.com&gt;\n\n---\n### 插图片\n1. _config.yml 中配置 post_asset_folder: true\n2. 在md文件同级目录建立同名文件夹，将图片放入，就可以相对的引用\n![](patchbinary.png)\n\n<!-- <center>  <!--开始居中对齐-->\n<!-- ![GitHub set up](./images/1.jpg \"图片Title\")\n![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif \"图片Title\")\n格式: ![图片Alt](图片地址 \"图片Title\") -->\n<!-- </center> 结束居中对齐 --> -->\n\n--- \n### 多级引用\n>>> 请问 Markdwon 怎么用？ - 小白\n>> 自己看教程！ - 愤青\n> 教程在哪？ - 小白\n\n---\n### 字体、字号、颜色\n<font face=\"黑体\">我是黑体字</font>\n<font face=\"微软雅黑\">我是微软雅黑</font>\n<font face=\"STCAIYUN\">我是华文彩云</font>\n<font color=#0099ff size=12 face=\"黑体\">黑体</font>\n<font color=gray size=5>gray</font>\n<font color=#00ffff size=3>null</font>\n\n--- \n### 流程图\n```\ngraph LR\nA-->B\n```\n```\nsequenceDiagram\nA->>B: How are you?\nB->>A: Great!\n```\n\n--- \n#### 分割线\n* * *\n***\n*****\n- - -\n-----------\n\n\n--- \n### HTML表单\n<center>\n<table>\n<tr>\n<th rowspan=\"2\">值班人员</th>\n<th>星期一</th>\n<th>星期二</th>\n<th>星期三</th>\n</tr>\n<tr>\n<td>李强</td>\n<td>张明</td>\n<td>王平</td>\n</tr>\n</table>\n\n</center>\n\n\n---\n### 特殊字符\n|  表头   | 表头  |\n|  ----  | ----  |\n| 单元格  | 单元格 |\n| 单元格  | 单元格 |\n\n｜特殊字符 | 描述 | 字符的代|\n |  ----  | ----  | ----  |\n｜   | 空格符 |\t&nbsp;|\n｜< | 小于号 |\t&lt; |\n｜ > | 大于号 | &gt; |\n｜&\t | 和号\t| &amp;|\n｜￥\t | 人民币 | &yen;|\n｜©\t | 版权\t| &copy;|\n｜®\t | 注册商标\t| &reg;|\n｜°C | 摄氏度 | &deg;|\n｜±\t | 正负号 | &plusmn;|\n｜×\t| 乘号 | &times;|\n｜÷\t| 除号 | &divide;|\n｜²\t| 平方（上标²）| &sup2;|\n｜³\t| 立方（上标³）| &sup3;|\n\n\n","slug":"markdown/03_language_markdown_ref","published":1,"updated":"2021-02-08T17:15:37.039Z","_id":"ckkwtrt61000bdpjs11ez8hye","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li><a href=\"#%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98\">一级标题</a><ul>\n<li><a href=\"#%E4%BA%8C%E7%BA%A7%E6%A0%87%E9%A2%98\">二级标题</a><ul>\n<li><a href=\"#%E4%B8%89%E7%BA%A7%E6%A0%87%E9%A2%98\">三级标题</a><ul>\n<li><a href=\"#%E5%9B%9B%E7%BA%A7%E6%A0%87%E9%A2%98\">四级标题</a><ul>\n<li><a href=\"#%E4%BA%94%E7%BA%A7%E6%A0%87%E9%A2%98\">五级标题</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#-%E5%85%AD%E7%BA%A7%E6%A0%87%E9%A2%98\">###### 六级标题</a><ul>\n<li><a href=\"#%E4%BB%A3%E7%A0%81%E5%9D%97\">代码块</a></li>\n<li><a href=\"#%E8%A1%A8%E6%A0%BC\">表格</a></li>\n</ul>\n</li>\n<li><a href=\"#-%E5%8D%95%E5%85%83%E6%A0%BC---%E5%8D%95%E5%85%83%E6%A0%BC-\">| 单元格  | 单元格 |</a><ul>\n<li><a href=\"#%E7%BA%A2%E8%89%B2%E5%AD%97%E4%BD%93\">红色字体</a></li>\n<li><a href=\"#%E6%B3%A8%E9%87%8A\">注释</a></li>\n</ul>\n</li>\n<li><a href=\"#\">~~~</a><ul>\n<li><a href=\"#%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8\">任务列表</a></li>\n</ul>\n</li>\n<li><a href=\"#--x-%E4%BB%BB%E5%8A%A1%E4%BA%8C-%E5%B7%B2%E5%81%9A%E4%BB%BB%E5%8A%A1----%E7%A9%BA%E6%A0%BC--x\">- [x] 任务二 已做任务 <code>- + 空格 + [x]</code></a><ul>\n<li><a href=\"#%E6%8D%A2%E8%A1%8C-%E5%90%8E%E9%9D%A2%E7%A9%BA2%E6%A0%BC\">换行 (后面空2格)</a></li>\n<li><a href=\"#%E7%A9%BA%E8%A1%8C\">空行</a></li>\n<li><a href=\"#%E5%AF%B9%E9%BD%90%E6%96%B9%E5%BC%8F\">对齐方式</a></li>\n<li><a href=\"#%E6%96%9C%E4%BD%93%E7%B2%97%E4%BD%93%E5%88%A0%E9%99%A4%E7%BA%BF%E4%B8%8B%E5%88%92%E7%BA%BF%E8%83%8C%E6%99%AF%E9%AB%98%E4%BA%AE\">斜体、粗体、删除线、下划线、背景高亮</a></li>\n<li><a href=\"#%E8%B6%85%E9%93%BE%E6%8E%A5%E9%A1%B5%E5%86%85%E9%93%BE%E6%8E%A5%E8%87%AA%E5%8A%A8%E9%93%BE%E6%8E%A5\">超链接、页内链接、自动链接</a></li>\n<li><a href=\"#%E6%B3%A8%E8%84%9A\">注脚</a></li>\n<li><a href=\"#%E8%87%AA%E5%8A%A8%E9%93%BE%E6%8E%A5\">自动链接</a></li>\n<li><a href=\"#%E6%8F%92%E5%9B%BE%E7%89%87\">插图片</a></li>\n<li><a href=\"#%E5%A4%9A%E7%BA%A7%E5%BC%95%E7%94%A8\">多级引用</a></li>\n<li><a href=\"#%E5%AD%97%E4%BD%93%E5%AD%97%E5%8F%B7%E9%A2%9C%E8%89%B2\">字体、字号、颜色</a></li>\n<li><a href=\"#%E6%B5%81%E7%A8%8B%E5%9B%BE\">流程图</a><ul>\n<li><a href=\"#%E5%88%86%E5%89%B2%E7%BA%BF\">分割线</a></li>\n</ul>\n</li>\n<li><a href=\"#html%E8%A1%A8%E5%8D%95\">HTML表单</a></li>\n<li><a href=\"#%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6\">特殊字符</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><h2 id=\"Markdown-All-in-One-Create-Table-of-Contents\"><a href=\"#Markdown-All-in-One-Create-Table-of-Contents\" class=\"headerlink\" title=\"  Markdown All in One: Create Table of Contents\"></a>  Markdown All in One: Create Table of Contents</h2><h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题  \"></a>六级标题  <!--最多6级标题--></h6><hr>\n<h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><p>$符，加行号</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$   <span class=\"keyword\">int</span> a = <span class=\"number\">4</span> ;</span><br></pre></td></tr></table></figure>\n<p>VS</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">4</span> ;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><table>\n<thead>\n<tr>\n<th>表头</th>\n<th>表头</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n<tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"红色字体\"><a href=\"#红色字体\" class=\"headerlink\" title=\"红色字体\"></a>红色字体</h3><hr>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div style=<span class=\"string\">&#x27;display: none&#x27;</span>&gt;</span><br><span class=\"line\">哈哈我是注释，不会在浏览器中显示。</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"任务列表\"><a href=\"#任务列表\" class=\"headerlink\" title=\"任务列表\"></a>任务列表</h3><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 任务一 未做任务 <code>- + 空格 + [ ]</code></li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 任务二 已做任务 <code>- + 空格 + [x]</code></li>\n</ul>\n<hr>\n<h3 id=\"换行-后面空2格\"><a href=\"#换行-后面空2格\" class=\"headerlink\" title=\"换行 (后面空2格)\"></a>换行 (后面空2格)</h3><p>nihao<br>faweafe</p>\n<hr>\n<h3 id=\"空行\"><a href=\"#空行\" class=\"headerlink\" title=\"空行\"></a>空行</h3><p>在编辑的时候有多少个空行(只要这一行只有回车或者space没有其他的字符就算空行)，在渲染之后，只隔着一行。</p>\n<hr>\n<h3 id=\"对齐方式\"><a href=\"#对齐方式\" class=\"headerlink\" title=\"对齐方式\"></a>对齐方式</h3><center>行中心对齐</center>\n<p align=\"left\">行左对齐</p>\n<p align=\"right\">行右对齐</p>\n\n<hr>\n<h3 id=\"斜体、粗体、删除线、下划线、背景高亮\"><a href=\"#斜体、粗体、删除线、下划线、背景高亮\" class=\"headerlink\" title=\"斜体、粗体、删除线、下划线、背景高亮\"></a>斜体、粗体、删除线、下划线、背景高亮</h3><p><em>斜体</em>或<em>斜体</em><br><strong>粗体</strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del><br>++下划线++<br>==背景高亮==</p>\n<hr>\n<h3 id=\"超链接、页内链接、自动链接\"><a href=\"#超链接、页内链接、自动链接\" class=\"headerlink\" title=\"超链接、页内链接、自动链接\"></a>超链接、页内链接、自动链接</h3><ul>\n<li>方法一<br>[]里写链接文字，()里写链接地址, ()中的””中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字，链接地址与title前有一个空格。</li>\n</ul>\n<p>作者：择势量投<br>链接：<a href=\"https://www.jianshu.com/p/ebe52d2d468f\">https://www.jianshu.com/p/ebe52d2d468f</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br>欢迎阅读 <a href=\"https://www.jianshu.com/u/16d77399d3a7\" title=\"择势勤\">择势勤</a></p>\n<ul>\n<li>方法二<br>我经常去的几个网站<a href=\"http://www.google.com/\">Google</a>、<a href=\"http://www.leanote.com/\">Leanote</a>。</li>\n</ul>\n<hr>\n<h3 id=\"注脚\"><a href=\"#注脚\" class=\"headerlink\" title=\"注脚\"></a>注脚</h3><p>使用 Markdown<a href=\"Markdown%E6%98%AF%E4%B8%80%E7%A7%8D%E7%BA%AF%E6%96%87%E6%9C%AC%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80\">^1</a>可以效率的书写文档, 直接转换成 HTML[^2]。</p>\n<p>[^2]:HyperText Markup Language 超文本标记语言</p>\n<hr>\n<h3 id=\"自动链接\"><a href=\"#自动链接\" class=\"headerlink\" title=\"自动链接\"></a>自动链接</h3><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：<br>&lt;<a href=\"http://example.com/\">http://example.com/</a>&gt; &emsp;&emsp;<br>&lt;<a href=\"mailto:&#x61;&#100;&#100;&#x72;&#x65;&#x73;&#115;&#64;&#101;&#x78;&#x61;&#109;&#112;&#x6c;&#101;&#x2e;&#99;&#x6f;&#x6d;\">&#x61;&#100;&#100;&#x72;&#x65;&#x73;&#115;&#64;&#101;&#x78;&#x61;&#109;&#112;&#x6c;&#101;&#x2e;&#99;&#x6f;&#x6d;</a>&gt;</p>\n<hr>\n<h3 id=\"插图片\"><a href=\"#插图片\" class=\"headerlink\" title=\"插图片\"></a>插图片</h3><ol>\n<li>_config.yml 中配置 post_asset_folder: true</li>\n<li>在md文件同级目录建立同名文件夹，将图片放入，就可以相对的引用<br><img src=\"patchbinary.png\"></li>\n</ol>\n<!-- <center>  <!--开始居中对齐-->\n<!-- ![GitHub set up](./images/1.jpg \"图片Title\")\n![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif \"图片Title\")\n格式: ![图片Alt](图片地址 \"图片Title\") -->\n<!-- </center> 结束居中对齐 --> -->\n\n<hr>\n<h3 id=\"多级引用\"><a href=\"#多级引用\" class=\"headerlink\" title=\"多级引用\"></a>多级引用</h3><blockquote>\n<blockquote>\n<blockquote>\n<p>请问 Markdwon 怎么用？ - 小白<br>自己看教程！ - 愤青<br>教程在哪？ - 小白</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<hr>\n<h3 id=\"字体、字号、颜色\"><a href=\"#字体、字号、颜色\" class=\"headerlink\" title=\"字体、字号、颜色\"></a>字体、字号、颜色</h3><p><font face=\"黑体\">我是黑体字</font><br><font face=\"微软雅黑\">我是微软雅黑</font><br><font face=\"STCAIYUN\">我是华文彩云</font><br><font color=#0099ff size=12 face=\"黑体\">黑体</font><br><font color=gray size=5>gray</font><br><font color=#00ffff size=3>null</font></p>\n<hr>\n<h3 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">A--&gt;B</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">A-&gt;&gt;B: How are you?</span><br><span class=\"line\">B-&gt;&gt;A: Great!</span><br></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h4><hr>\n<hr>\n<hr>\n<hr>\n<hr>\n<hr>\n<h3 id=\"HTML表单\"><a href=\"#HTML表单\" class=\"headerlink\" title=\"HTML表单\"></a>HTML表单</h3><center>\n<table>\n<tr>\n<th rowspan=\"2\">值班人员</th>\n<th>星期一</th>\n<th>星期二</th>\n<th>星期三</th>\n</tr>\n<tr>\n<td>李强</td>\n<td>张明</td>\n<td>王平</td>\n</tr>\n</table>\n\n</center>\n\n\n<hr>\n<h3 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h3><table>\n<thead>\n<tr>\n<th>表头</th>\n<th>表头</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n<tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n</tbody></table>\n<p>｜特殊字符 | 描述 | 字符的代|<br> |  —-  | —-  | —-  |<br>｜   | 空格符 |    &nbsp;|<br>｜&lt; | 小于号 |    &lt; |<br>｜ &gt; | 大于号 | &gt; |<br>｜&amp;     | 和号    | &amp;|<br>｜￥     | 人民币 | &yen;|<br>｜©     | 版权    | &copy;|<br>｜®     | 注册商标    | &reg;|<br>｜°C | 摄氏度 | &deg;|<br>｜±     | 正负号 | &plusmn;|<br>｜×    | 乘号 | &times;|<br>｜÷    | 除号 | &divide;|<br>｜²    | 平方（上标²）| &sup2;|<br>｜³    | 立方（上标³）| &sup3;|</p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><a href=\"#%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98\">一级标题</a><ul>\n<li><a href=\"#%E4%BA%8C%E7%BA%A7%E6%A0%87%E9%A2%98\">二级标题</a><ul>\n<li><a href=\"#%E4%B8%89%E7%BA%A7%E6%A0%87%E9%A2%98\">三级标题</a><ul>\n<li><a href=\"#%E5%9B%9B%E7%BA%A7%E6%A0%87%E9%A2%98\">四级标题</a><ul>\n<li><a href=\"#%E4%BA%94%E7%BA%A7%E6%A0%87%E9%A2%98\">五级标题</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#-%E5%85%AD%E7%BA%A7%E6%A0%87%E9%A2%98\">###### 六级标题</a><ul>\n<li><a href=\"#%E4%BB%A3%E7%A0%81%E5%9D%97\">代码块</a></li>\n<li><a href=\"#%E8%A1%A8%E6%A0%BC\">表格</a></li>\n</ul>\n</li>\n<li><a href=\"#-%E5%8D%95%E5%85%83%E6%A0%BC---%E5%8D%95%E5%85%83%E6%A0%BC-\">| 单元格  | 单元格 |</a><ul>\n<li><a href=\"#%E7%BA%A2%E8%89%B2%E5%AD%97%E4%BD%93\">红色字体</a></li>\n<li><a href=\"#%E6%B3%A8%E9%87%8A\">注释</a></li>\n</ul>\n</li>\n<li><a href=\"#\">~~~</a><ul>\n<li><a href=\"#%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8\">任务列表</a></li>\n</ul>\n</li>\n<li><a href=\"#--x-%E4%BB%BB%E5%8A%A1%E4%BA%8C-%E5%B7%B2%E5%81%9A%E4%BB%BB%E5%8A%A1----%E7%A9%BA%E6%A0%BC--x\">- [x] 任务二 已做任务 <code>- + 空格 + [x]</code></a><ul>\n<li><a href=\"#%E6%8D%A2%E8%A1%8C-%E5%90%8E%E9%9D%A2%E7%A9%BA2%E6%A0%BC\">换行 (后面空2格)</a></li>\n<li><a href=\"#%E7%A9%BA%E8%A1%8C\">空行</a></li>\n<li><a href=\"#%E5%AF%B9%E9%BD%90%E6%96%B9%E5%BC%8F\">对齐方式</a></li>\n<li><a href=\"#%E6%96%9C%E4%BD%93%E7%B2%97%E4%BD%93%E5%88%A0%E9%99%A4%E7%BA%BF%E4%B8%8B%E5%88%92%E7%BA%BF%E8%83%8C%E6%99%AF%E9%AB%98%E4%BA%AE\">斜体、粗体、删除线、下划线、背景高亮</a></li>\n<li><a href=\"#%E8%B6%85%E9%93%BE%E6%8E%A5%E9%A1%B5%E5%86%85%E9%93%BE%E6%8E%A5%E8%87%AA%E5%8A%A8%E9%93%BE%E6%8E%A5\">超链接、页内链接、自动链接</a></li>\n<li><a href=\"#%E6%B3%A8%E8%84%9A\">注脚</a></li>\n<li><a href=\"#%E8%87%AA%E5%8A%A8%E9%93%BE%E6%8E%A5\">自动链接</a></li>\n<li><a href=\"#%E6%8F%92%E5%9B%BE%E7%89%87\">插图片</a></li>\n<li><a href=\"#%E5%A4%9A%E7%BA%A7%E5%BC%95%E7%94%A8\">多级引用</a></li>\n<li><a href=\"#%E5%AD%97%E4%BD%93%E5%AD%97%E5%8F%B7%E9%A2%9C%E8%89%B2\">字体、字号、颜色</a></li>\n<li><a href=\"#%E6%B5%81%E7%A8%8B%E5%9B%BE\">流程图</a><ul>\n<li><a href=\"#%E5%88%86%E5%89%B2%E7%BA%BF\">分割线</a></li>\n</ul>\n</li>\n<li><a href=\"#html%E8%A1%A8%E5%8D%95\">HTML表单</a></li>\n<li><a href=\"#%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6\">特殊字符</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><h2 id=\"Markdown-All-in-One-Create-Table-of-Contents\"><a href=\"#Markdown-All-in-One-Create-Table-of-Contents\" class=\"headerlink\" title=\"  Markdown All in One: Create Table of Contents\"></a>  Markdown All in One: Create Table of Contents</h2><h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题  \"></a>六级标题  <!--最多6级标题--></h6><hr>\n<h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><p>$符，加行号</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$   <span class=\"keyword\">int</span> a = <span class=\"number\">4</span> ;</span><br></pre></td></tr></table></figure>\n<p>VS</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">4</span> ;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><table>\n<thead>\n<tr>\n<th>表头</th>\n<th>表头</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n<tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"红色字体\"><a href=\"#红色字体\" class=\"headerlink\" title=\"红色字体\"></a>红色字体</h3><hr>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div style=<span class=\"string\">&#x27;display: none&#x27;</span>&gt;</span><br><span class=\"line\">哈哈我是注释，不会在浏览器中显示。</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"任务列表\"><a href=\"#任务列表\" class=\"headerlink\" title=\"任务列表\"></a>任务列表</h3><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 任务一 未做任务 <code>- + 空格 + [ ]</code></li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 任务二 已做任务 <code>- + 空格 + [x]</code></li>\n</ul>\n<hr>\n<h3 id=\"换行-后面空2格\"><a href=\"#换行-后面空2格\" class=\"headerlink\" title=\"换行 (后面空2格)\"></a>换行 (后面空2格)</h3><p>nihao<br>faweafe</p>\n<hr>\n<h3 id=\"空行\"><a href=\"#空行\" class=\"headerlink\" title=\"空行\"></a>空行</h3><p>在编辑的时候有多少个空行(只要这一行只有回车或者space没有其他的字符就算空行)，在渲染之后，只隔着一行。</p>\n<hr>\n<h3 id=\"对齐方式\"><a href=\"#对齐方式\" class=\"headerlink\" title=\"对齐方式\"></a>对齐方式</h3><center>行中心对齐</center>\n<p align=\"left\">行左对齐</p>\n<p align=\"right\">行右对齐</p>\n\n<hr>\n<h3 id=\"斜体、粗体、删除线、下划线、背景高亮\"><a href=\"#斜体、粗体、删除线、下划线、背景高亮\" class=\"headerlink\" title=\"斜体、粗体、删除线、下划线、背景高亮\"></a>斜体、粗体、删除线、下划线、背景高亮</h3><p><em>斜体</em>或<em>斜体</em><br><strong>粗体</strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del><br>++下划线++<br>==背景高亮==</p>\n<hr>\n<h3 id=\"超链接、页内链接、自动链接\"><a href=\"#超链接、页内链接、自动链接\" class=\"headerlink\" title=\"超链接、页内链接、自动链接\"></a>超链接、页内链接、自动链接</h3><ul>\n<li>方法一<br>[]里写链接文字，()里写链接地址, ()中的””中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字，链接地址与title前有一个空格。</li>\n</ul>\n<p>作者：择势量投<br>链接：<a href=\"https://www.jianshu.com/p/ebe52d2d468f\">https://www.jianshu.com/p/ebe52d2d468f</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br>欢迎阅读 <a href=\"https://www.jianshu.com/u/16d77399d3a7\" title=\"择势勤\">择势勤</a></p>\n<ul>\n<li>方法二<br>我经常去的几个网站<a href=\"http://www.google.com/\">Google</a>、<a href=\"http://www.leanote.com/\">Leanote</a>。</li>\n</ul>\n<hr>\n<h3 id=\"注脚\"><a href=\"#注脚\" class=\"headerlink\" title=\"注脚\"></a>注脚</h3><p>使用 Markdown<a href=\"Markdown%E6%98%AF%E4%B8%80%E7%A7%8D%E7%BA%AF%E6%96%87%E6%9C%AC%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80\">^1</a>可以效率的书写文档, 直接转换成 HTML[^2]。</p>\n<p>[^2]:HyperText Markup Language 超文本标记语言</p>\n<hr>\n<h3 id=\"自动链接\"><a href=\"#自动链接\" class=\"headerlink\" title=\"自动链接\"></a>自动链接</h3><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：<br>&lt;<a href=\"http://example.com/\">http://example.com/</a>&gt; &emsp;&emsp;<br>&lt;<a href=\"mailto:&#x61;&#100;&#100;&#x72;&#x65;&#x73;&#115;&#64;&#101;&#x78;&#x61;&#109;&#112;&#x6c;&#101;&#x2e;&#99;&#x6f;&#x6d;\">&#x61;&#100;&#100;&#x72;&#x65;&#x73;&#115;&#64;&#101;&#x78;&#x61;&#109;&#112;&#x6c;&#101;&#x2e;&#99;&#x6f;&#x6d;</a>&gt;</p>\n<hr>\n<h3 id=\"插图片\"><a href=\"#插图片\" class=\"headerlink\" title=\"插图片\"></a>插图片</h3><ol>\n<li>_config.yml 中配置 post_asset_folder: true</li>\n<li>在md文件同级目录建立同名文件夹，将图片放入，就可以相对的引用<br><img src=\"patchbinary.png\"></li>\n</ol>\n<!-- <center>  <!--开始居中对齐-->\n<!-- ![GitHub set up](./images/1.jpg \"图片Title\")\n![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif \"图片Title\")\n格式: ![图片Alt](图片地址 \"图片Title\") -->\n<!-- </center> 结束居中对齐 --> -->\n\n<hr>\n<h3 id=\"多级引用\"><a href=\"#多级引用\" class=\"headerlink\" title=\"多级引用\"></a>多级引用</h3><blockquote>\n<blockquote>\n<blockquote>\n<p>请问 Markdwon 怎么用？ - 小白<br>自己看教程！ - 愤青<br>教程在哪？ - 小白</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<hr>\n<h3 id=\"字体、字号、颜色\"><a href=\"#字体、字号、颜色\" class=\"headerlink\" title=\"字体、字号、颜色\"></a>字体、字号、颜色</h3><p><font face=\"黑体\">我是黑体字</font><br><font face=\"微软雅黑\">我是微软雅黑</font><br><font face=\"STCAIYUN\">我是华文彩云</font><br><font color=#0099ff size=12 face=\"黑体\">黑体</font><br><font color=gray size=5>gray</font><br><font color=#00ffff size=3>null</font></p>\n<hr>\n<h3 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">A--&gt;B</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">A-&gt;&gt;B: How are you?</span><br><span class=\"line\">B-&gt;&gt;A: Great!</span><br></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h4><hr>\n<hr>\n<hr>\n<hr>\n<hr>\n<hr>\n<h3 id=\"HTML表单\"><a href=\"#HTML表单\" class=\"headerlink\" title=\"HTML表单\"></a>HTML表单</h3><center>\n<table>\n<tr>\n<th rowspan=\"2\">值班人员</th>\n<th>星期一</th>\n<th>星期二</th>\n<th>星期三</th>\n</tr>\n<tr>\n<td>李强</td>\n<td>张明</td>\n<td>王平</td>\n</tr>\n</table>\n\n</center>\n\n\n<hr>\n<h3 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h3><table>\n<thead>\n<tr>\n<th>表头</th>\n<th>表头</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n<tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n</tbody></table>\n<p>｜特殊字符 | 描述 | 字符的代|<br> |  —-  | —-  | —-  |<br>｜   | 空格符 |    &nbsp;|<br>｜&lt; | 小于号 |    &lt; |<br>｜ &gt; | 大于号 | &gt; |<br>｜&amp;     | 和号    | &amp;|<br>｜￥     | 人民币 | &yen;|<br>｜©     | 版权    | &copy;|<br>｜®     | 注册商标    | &reg;|<br>｜°C | 摄氏度 | &deg;|<br>｜±     | 正负号 | &plusmn;|<br>｜×    | 乘号 | &times;|<br>｜÷    | 除号 | &divide;|<br>｜²    | 平方（上标²）| &sup2;|<br>｜³    | 立方（上标³）| &sup3;|</p>\n"},{"title":"c binary 相关工具","date":"2021-02-07T16:00:00.000Z","toc":true,"_content":"\n---\n### strings \n---\n列出bin文件中的字符串\n~~~bash\n    strings a.out \n\n    /lib64/ld-linux-x86-64.so.2\n    libc.so.6\n    puts\n    __cxa_finalize\n    strcmp\n    __libc_start_main\n    GLIBC_2.2.5\n    _ITM_deregisterTMCloneTable\n    __gmon_start__\n    _ITM_registerTMCloneTable\n    u+UH\n    []A\\A]A^A_\n    cheking passwd!\n    ok you got me\n    WRONG !\n    Usage: <key>\n    :*3$\"\n    GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\n    /usr/lib/gcc/x86_64-linux-gnu/9/include\n    /usr/include/x86_64-linux-gnu/bits\n    /usr/include/x86_64-linux-gnu/bits/types\n    /usr/include\n    main.c\n    stddef.h\n~~~\n\n---\n### 2进制转16进制 \n---\n\n1.  vim 中 ：%！xxd   退回二进制： ：%！xxd  -r \n2.  bash shell: xxd a.out > 16.txt\n\n\n---\n### strings \n---\n\n~~~bash \n~~~\n\n\n","source":"_posts/tool/c_binary.md","raw":"---\ntitle: c binary 相关工具\ncategories:\n- tools\ndate: 2021/2/8\ntoc: true # 是否启用内容索引\n---\n\n---\n### strings \n---\n列出bin文件中的字符串\n~~~bash\n    strings a.out \n\n    /lib64/ld-linux-x86-64.so.2\n    libc.so.6\n    puts\n    __cxa_finalize\n    strcmp\n    __libc_start_main\n    GLIBC_2.2.5\n    _ITM_deregisterTMCloneTable\n    __gmon_start__\n    _ITM_registerTMCloneTable\n    u+UH\n    []A\\A]A^A_\n    cheking passwd!\n    ok you got me\n    WRONG !\n    Usage: <key>\n    :*3$\"\n    GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\n    /usr/lib/gcc/x86_64-linux-gnu/9/include\n    /usr/include/x86_64-linux-gnu/bits\n    /usr/include/x86_64-linux-gnu/bits/types\n    /usr/include\n    main.c\n    stddef.h\n~~~\n\n---\n### 2进制转16进制 \n---\n\n1.  vim 中 ：%！xxd   退回二进制： ：%！xxd  -r \n2.  bash shell: xxd a.out > 16.txt\n\n\n---\n### strings \n---\n\n~~~bash \n~~~\n\n\n","slug":"tool/c_binary","published":1,"updated":"2021-02-08T16:03:36.306Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkwtrt63000edpjsd7ma4tx1","content":"<hr>\n<h3 id=\"strings\"><a href=\"#strings\" class=\"headerlink\" title=\"strings\"></a>strings</h3><hr>\n<p>列出bin文件中的字符串</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strings a.out </span><br><span class=\"line\"></span><br><span class=\"line\">/lib64/ld-linux-x86-64.so.2</span><br><span class=\"line\">libc.so.6</span><br><span class=\"line\">puts</span><br><span class=\"line\">__cxa_finalize</span><br><span class=\"line\">strcmp</span><br><span class=\"line\">__libc_start_main</span><br><span class=\"line\">GLIBC_2.2.5</span><br><span class=\"line\">_ITM_deregisterTMCloneTable</span><br><span class=\"line\">__gmon_start__</span><br><span class=\"line\">_ITM_registerTMCloneTable</span><br><span class=\"line\">u+UH</span><br><span class=\"line\">[]A\\A]A^A_</span><br><span class=\"line\">cheking passwd!</span><br><span class=\"line\">ok you got me</span><br><span class=\"line\">WRONG !</span><br><span class=\"line\">Usage: &lt;key&gt;</span><br><span class=\"line\">:*3$<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0</span></span><br><span class=\"line\"><span class=\"string\">/usr/lib/gcc/x86_64-linux-gnu/9/include</span></span><br><span class=\"line\"><span class=\"string\">/usr/include/x86_64-linux-gnu/bits</span></span><br><span class=\"line\"><span class=\"string\">/usr/include/x86_64-linux-gnu/bits/types</span></span><br><span class=\"line\"><span class=\"string\">/usr/include</span></span><br><span class=\"line\"><span class=\"string\">main.c</span></span><br><span class=\"line\"><span class=\"string\">stddef.h</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"2进制转16进制\"><a href=\"#2进制转16进制\" class=\"headerlink\" title=\"2进制转16进制\"></a>2进制转16进制</h3><hr>\n<ol>\n<li> vim 中 ：%！xxd   退回二进制： ：%！xxd  -r </li>\n<li> bash shell: xxd a.out &gt; 16.txt</li>\n</ol>\n<hr>\n<h3 id=\"strings-1\"><a href=\"#strings-1\" class=\"headerlink\" title=\"strings\"></a>strings</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<h3 id=\"strings\"><a href=\"#strings\" class=\"headerlink\" title=\"strings\"></a>strings</h3><hr>\n<p>列出bin文件中的字符串</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strings a.out </span><br><span class=\"line\"></span><br><span class=\"line\">/lib64/ld-linux-x86-64.so.2</span><br><span class=\"line\">libc.so.6</span><br><span class=\"line\">puts</span><br><span class=\"line\">__cxa_finalize</span><br><span class=\"line\">strcmp</span><br><span class=\"line\">__libc_start_main</span><br><span class=\"line\">GLIBC_2.2.5</span><br><span class=\"line\">_ITM_deregisterTMCloneTable</span><br><span class=\"line\">__gmon_start__</span><br><span class=\"line\">_ITM_registerTMCloneTable</span><br><span class=\"line\">u+UH</span><br><span class=\"line\">[]A\\A]A^A_</span><br><span class=\"line\">cheking passwd!</span><br><span class=\"line\">ok you got me</span><br><span class=\"line\">WRONG !</span><br><span class=\"line\">Usage: &lt;key&gt;</span><br><span class=\"line\">:*3$<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0</span></span><br><span class=\"line\"><span class=\"string\">/usr/lib/gcc/x86_64-linux-gnu/9/include</span></span><br><span class=\"line\"><span class=\"string\">/usr/include/x86_64-linux-gnu/bits</span></span><br><span class=\"line\"><span class=\"string\">/usr/include/x86_64-linux-gnu/bits/types</span></span><br><span class=\"line\"><span class=\"string\">/usr/include</span></span><br><span class=\"line\"><span class=\"string\">main.c</span></span><br><span class=\"line\"><span class=\"string\">stddef.h</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"2进制转16进制\"><a href=\"#2进制转16进制\" class=\"headerlink\" title=\"2进制转16进制\"></a>2进制转16进制</h3><hr>\n<ol>\n<li> vim 中 ：%！xxd   退回二进制： ：%！xxd  -r </li>\n<li> bash shell: xxd a.out &gt; 16.txt</li>\n</ol>\n<hr>\n<h3 id=\"strings-1\"><a href=\"#strings-1\" class=\"headerlink\" title=\"strings\"></a>strings</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"cscope 安装 配置 使用","date":"2021-02-07T16:00:00.000Z","toc":true,"_content":"\n---\n### 安装\n---\n~~~\n    sudo apt install cscope\n~~~\n\n---\n### 配置\n---\n~/.vimrc 中添加如下配置\n~~~bash\n    \" tags 设置\n    set tags=tags;\n        set autochdir\n\n    if has(\"cscope\")\n        set csprg=/usr/bin/cscope\n        \"指定用来执行 cscope 的命令\n        set csto=1\n        \"先搜索tags标签文件,再搜索cscope数据库\n        set cst\n        \"使用|:cstag|(:cs find g),而不是缺省的:tag\n        set nocsverb\n        \"不显示添加数据库是否成功\n        \" add any database in current directory\n        if filereadable(\"cscope.out\")\n            cs add cscope.out\n        \"添加cscope数据库\n        endif\n        \"显示添加成功与否\n        set csverb\n    endif\n\n    :set cscopequickfix=s-,c-,d-,i-,t-,e-\n\n    nmap <C-\\>s :cs find s <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>g :cs find g <C-R>=expand(\"<cword>\")<CR><CR>\n    # 查找哪里调用了当前的函数\n    nmap <C-\\>c :cs find c <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>t :cs find t <C-R>=expand(\"<cword>\")<CR><CR>\n    # 查找所有符号\n    nmap <C-\\>e :cs find e <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>f :cs find f <C-R>=expand(\"<cfile>\")<CR><CR>\n    nmap <C-\\>i :cs find i ^<C-R>=expand(\"<cfile>\")<CR>$<CR>\n    nmap <C-\\>d :cs find d <C-R>=expand(\"<cword>\")<CR><CR>\n~~~\n\n---\n### 建立索引\n---\n建立脚本，执行生成tag, cscope符号表\n~~~bash\n    #!/bin/sh\n    find `pwd` -name \"*.[ch]\" -o -name \"*.cpp\" > cscope.files  \n    cscope -bRkq -i cscope.files  \n\n    ctags -R\n~~~\n\n---\n### cscope 使用\n---\n快捷键，上面配置中已经配置了。\n~~~bash\n    cscope --help\n    Usage: cscope [-bcCdehklLqRTuUvV] [-f file] [-F file] [-i file] [-I dir] [-s dir]\n                [-p number] [-P path] [-[0-8] pattern] [source files]\n\n    -b            Build the cross-reference only.\n    -C            Ignore letter case when searching.\n    -c            Use only ASCII characters in the cross-ref file (don't compress).\n    -d            Do not update the cross-reference.\n    -e            Suppress the <Ctrl>-e command prompt between files.\n    -F symfile    Read symbol reference lines from symfile.\n    -f reffile    Use reffile as cross-ref file name instead of cscope.out.\n    -h            This help screen.\n    -I incdir     Look in incdir for any #include files.\n    -i namefile   Browse through files listed in namefile, instead of cscope.files\n    -k            Kernel Mode - don't use /usr/include for #include files.\n    -L            Do a single search with line-oriented output.\n    -l            Line-oriented interface.\n    -num pattern  Go to input field num (counting from 0) and find pattern.\n    -P path       Prepend path to relative file names in pre-built cross-ref file.\n    -p n          Display the last n file path components.\n    -q            Build an inverted index for quick symbol searching.\n    -R            Recurse directories for files.\n    -s dir        Look in dir for additional source  files.\n    -T            Use only the first eight characters to match against C symbols.\n    -U            Check file time stamps.\n    -u            Unconditionally build the cross-reference file.\n    -v            Be more verbose in line mode.\n    -V            Print the version number.\n\n    Please see the manpage for more information.\n~~~\n","source":"_posts/tool/cscope.md","raw":"---\ntitle: cscope 安装 配置 使用\ncategories:\n- tools\ndate: 2021/2/8\ntoc: true # 是否启用内容索引\n---\n\n---\n### 安装\n---\n~~~\n    sudo apt install cscope\n~~~\n\n---\n### 配置\n---\n~/.vimrc 中添加如下配置\n~~~bash\n    \" tags 设置\n    set tags=tags;\n        set autochdir\n\n    if has(\"cscope\")\n        set csprg=/usr/bin/cscope\n        \"指定用来执行 cscope 的命令\n        set csto=1\n        \"先搜索tags标签文件,再搜索cscope数据库\n        set cst\n        \"使用|:cstag|(:cs find g),而不是缺省的:tag\n        set nocsverb\n        \"不显示添加数据库是否成功\n        \" add any database in current directory\n        if filereadable(\"cscope.out\")\n            cs add cscope.out\n        \"添加cscope数据库\n        endif\n        \"显示添加成功与否\n        set csverb\n    endif\n\n    :set cscopequickfix=s-,c-,d-,i-,t-,e-\n\n    nmap <C-\\>s :cs find s <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>g :cs find g <C-R>=expand(\"<cword>\")<CR><CR>\n    # 查找哪里调用了当前的函数\n    nmap <C-\\>c :cs find c <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>t :cs find t <C-R>=expand(\"<cword>\")<CR><CR>\n    # 查找所有符号\n    nmap <C-\\>e :cs find e <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>f :cs find f <C-R>=expand(\"<cfile>\")<CR><CR>\n    nmap <C-\\>i :cs find i ^<C-R>=expand(\"<cfile>\")<CR>$<CR>\n    nmap <C-\\>d :cs find d <C-R>=expand(\"<cword>\")<CR><CR>\n~~~\n\n---\n### 建立索引\n---\n建立脚本，执行生成tag, cscope符号表\n~~~bash\n    #!/bin/sh\n    find `pwd` -name \"*.[ch]\" -o -name \"*.cpp\" > cscope.files  \n    cscope -bRkq -i cscope.files  \n\n    ctags -R\n~~~\n\n---\n### cscope 使用\n---\n快捷键，上面配置中已经配置了。\n~~~bash\n    cscope --help\n    Usage: cscope [-bcCdehklLqRTuUvV] [-f file] [-F file] [-i file] [-I dir] [-s dir]\n                [-p number] [-P path] [-[0-8] pattern] [source files]\n\n    -b            Build the cross-reference only.\n    -C            Ignore letter case when searching.\n    -c            Use only ASCII characters in the cross-ref file (don't compress).\n    -d            Do not update the cross-reference.\n    -e            Suppress the <Ctrl>-e command prompt between files.\n    -F symfile    Read symbol reference lines from symfile.\n    -f reffile    Use reffile as cross-ref file name instead of cscope.out.\n    -h            This help screen.\n    -I incdir     Look in incdir for any #include files.\n    -i namefile   Browse through files listed in namefile, instead of cscope.files\n    -k            Kernel Mode - don't use /usr/include for #include files.\n    -L            Do a single search with line-oriented output.\n    -l            Line-oriented interface.\n    -num pattern  Go to input field num (counting from 0) and find pattern.\n    -P path       Prepend path to relative file names in pre-built cross-ref file.\n    -p n          Display the last n file path components.\n    -q            Build an inverted index for quick symbol searching.\n    -R            Recurse directories for files.\n    -s dir        Look in dir for additional source  files.\n    -T            Use only the first eight characters to match against C symbols.\n    -U            Check file time stamps.\n    -u            Unconditionally build the cross-reference file.\n    -v            Be more verbose in line mode.\n    -V            Print the version number.\n\n    Please see the manpage for more information.\n~~~\n","slug":"tool/cscope","published":1,"updated":"2021-02-08T16:12:34.548Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkwtrt64000fdpjsbhfqbmjs","content":"<hr>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install cscope</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><hr>\n<p>~/.vimrc 中添加如下配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot; tags 设置</span></span><br><span class=\"line\"><span class=\"string\">set tags=tags;</span></span><br><span class=\"line\"><span class=\"string\">    set autochdir</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">if has(&quot;</span>cscope<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    set csprg=/usr/bin/cscope</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>指定用来执行 cscope 的命令</span><br><span class=\"line\">    <span class=\"built_in\">set</span> csto=1</span><br><span class=\"line\">    <span class=\"string\">&quot;先搜索tags标签文件,再搜索cscope数据库</span></span><br><span class=\"line\"><span class=\"string\">    set cst</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>使用|:cstag|(:cs find g),而不是缺省的:tag</span><br><span class=\"line\">    <span class=\"built_in\">set</span> nocsverb</span><br><span class=\"line\">    <span class=\"string\">&quot;不显示添加数据库是否成功</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span> add any database <span class=\"keyword\">in</span> current directory</span><br><span class=\"line\">    <span class=\"keyword\">if</span> filereadable(<span class=\"string\">&quot;cscope.out&quot;</span>)</span><br><span class=\"line\">        cs add cscope.out</span><br><span class=\"line\">    <span class=\"string\">&quot;添加cscope数据库</span></span><br><span class=\"line\"><span class=\"string\">    endif</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>显示添加成功与否</span><br><span class=\"line\">    <span class=\"built_in\">set</span> csverb</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\">:<span class=\"built_in\">set</span> cscopequickfix=s-,c-,d-,i-,t-,e-</span><br><span class=\"line\"></span><br><span class=\"line\">nmap &lt;C-\\&gt;s :cs find s &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;C-\\&gt;g :cs find g &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\"><span class=\"comment\"># 查找哪里调用了当前的函数</span></span><br><span class=\"line\">nmap &lt;C-\\&gt;c :cs find c &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;C-\\&gt;t :cs find t &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\"><span class=\"comment\"># 查找所有符号</span></span><br><span class=\"line\">nmap &lt;C-\\&gt;e :cs find e &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;C-\\&gt;f :cs find f &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cfile&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;C-\\&gt;i :cs find i ^&lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cfile&gt;&quot;</span>)&lt;CR&gt;$&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;C-\\&gt;d :cs find d &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"建立索引\"><a href=\"#建立索引\" class=\"headerlink\" title=\"建立索引\"></a>建立索引</h3><hr>\n<p>建立脚本，执行生成tag, cscope符号表</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">find `<span class=\"built_in\">pwd</span>` -name <span class=\"string\">&quot;*.[ch]&quot;</span> -o -name <span class=\"string\">&quot;*.cpp&quot;</span> &gt; cscope.files  </span><br><span class=\"line\">cscope -bRkq -i cscope.files  </span><br><span class=\"line\"></span><br><span class=\"line\">ctags -R</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"cscope-使用\"><a href=\"#cscope-使用\" class=\"headerlink\" title=\"cscope 使用\"></a>cscope 使用</h3><hr>\n<p>快捷键，上面配置中已经配置了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cscope --<span class=\"built_in\">help</span></span><br><span class=\"line\">Usage: cscope [-bcCdehklLqRTuUvV] [-f file] [-F file] [-i file] [-I dir] [-s dir]</span><br><span class=\"line\">            [-p number] [-P path] [-[0-8] pattern] [<span class=\"built_in\">source</span> files]</span><br><span class=\"line\"></span><br><span class=\"line\">-b            Build the cross-reference only.</span><br><span class=\"line\">-C            Ignore letter <span class=\"keyword\">case</span> when searching.</span><br><span class=\"line\">-c            Use only ASCII characters <span class=\"keyword\">in</span> the cross-ref file (don<span class=\"string\">&#x27;t compress).</span></span><br><span class=\"line\"><span class=\"string\">-d            Do not update the cross-reference.</span></span><br><span class=\"line\"><span class=\"string\">-e            Suppress the &lt;Ctrl&gt;-e command prompt between files.</span></span><br><span class=\"line\"><span class=\"string\">-F symfile    Read symbol reference lines from symfile.</span></span><br><span class=\"line\"><span class=\"string\">-f reffile    Use reffile as cross-ref file name instead of cscope.out.</span></span><br><span class=\"line\"><span class=\"string\">-h            This help screen.</span></span><br><span class=\"line\"><span class=\"string\">-I incdir     Look in incdir for any #include files.</span></span><br><span class=\"line\"><span class=\"string\">-i namefile   Browse through files listed in namefile, instead of cscope.files</span></span><br><span class=\"line\"><span class=\"string\">-k            Kernel Mode - don&#x27;</span>t use /usr/include <span class=\"keyword\">for</span> <span class=\"comment\">#include files.</span></span><br><span class=\"line\">-L            Do a single search with line-oriented output.</span><br><span class=\"line\">-l            Line-oriented interface.</span><br><span class=\"line\">-num pattern  Go to input field num (counting from 0) and find pattern.</span><br><span class=\"line\">-P path       Prepend path to relative file names <span class=\"keyword\">in</span> pre-built cross-ref file.</span><br><span class=\"line\">-p n          Display the last n file path components.</span><br><span class=\"line\">-q            Build an inverted index <span class=\"keyword\">for</span> quick symbol searching.</span><br><span class=\"line\">-R            Recurse directories <span class=\"keyword\">for</span> files.</span><br><span class=\"line\">-s dir        Look <span class=\"keyword\">in</span> dir <span class=\"keyword\">for</span> additional <span class=\"built_in\">source</span>  files.</span><br><span class=\"line\">-T            Use only the first eight characters to match against C symbols.</span><br><span class=\"line\">-U            Check file time stamps.</span><br><span class=\"line\">-u            Unconditionally build the cross-reference file.</span><br><span class=\"line\">-v            Be more verbose <span class=\"keyword\">in</span> line mode.</span><br><span class=\"line\">-V            Print the version number.</span><br><span class=\"line\"></span><br><span class=\"line\">Please see the manpage <span class=\"keyword\">for</span> more information.</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<hr>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install cscope</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><hr>\n<p>~/.vimrc 中添加如下配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot; tags 设置</span></span><br><span class=\"line\"><span class=\"string\">set tags=tags;</span></span><br><span class=\"line\"><span class=\"string\">    set autochdir</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">if has(&quot;</span>cscope<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    set csprg=/usr/bin/cscope</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>指定用来执行 cscope 的命令</span><br><span class=\"line\">    <span class=\"built_in\">set</span> csto=1</span><br><span class=\"line\">    <span class=\"string\">&quot;先搜索tags标签文件,再搜索cscope数据库</span></span><br><span class=\"line\"><span class=\"string\">    set cst</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>使用|:cstag|(:cs find g),而不是缺省的:tag</span><br><span class=\"line\">    <span class=\"built_in\">set</span> nocsverb</span><br><span class=\"line\">    <span class=\"string\">&quot;不显示添加数据库是否成功</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span> add any database <span class=\"keyword\">in</span> current directory</span><br><span class=\"line\">    <span class=\"keyword\">if</span> filereadable(<span class=\"string\">&quot;cscope.out&quot;</span>)</span><br><span class=\"line\">        cs add cscope.out</span><br><span class=\"line\">    <span class=\"string\">&quot;添加cscope数据库</span></span><br><span class=\"line\"><span class=\"string\">    endif</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>显示添加成功与否</span><br><span class=\"line\">    <span class=\"built_in\">set</span> csverb</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\">:<span class=\"built_in\">set</span> cscopequickfix=s-,c-,d-,i-,t-,e-</span><br><span class=\"line\"></span><br><span class=\"line\">nmap &lt;C-\\&gt;s :cs find s &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;C-\\&gt;g :cs find g &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\"><span class=\"comment\"># 查找哪里调用了当前的函数</span></span><br><span class=\"line\">nmap &lt;C-\\&gt;c :cs find c &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;C-\\&gt;t :cs find t &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\"><span class=\"comment\"># 查找所有符号</span></span><br><span class=\"line\">nmap &lt;C-\\&gt;e :cs find e &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;C-\\&gt;f :cs find f &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cfile&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;C-\\&gt;i :cs find i ^&lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cfile&gt;&quot;</span>)&lt;CR&gt;$&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;C-\\&gt;d :cs find d &lt;C-R&gt;=expand(<span class=\"string\">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"建立索引\"><a href=\"#建立索引\" class=\"headerlink\" title=\"建立索引\"></a>建立索引</h3><hr>\n<p>建立脚本，执行生成tag, cscope符号表</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">find `<span class=\"built_in\">pwd</span>` -name <span class=\"string\">&quot;*.[ch]&quot;</span> -o -name <span class=\"string\">&quot;*.cpp&quot;</span> &gt; cscope.files  </span><br><span class=\"line\">cscope -bRkq -i cscope.files  </span><br><span class=\"line\"></span><br><span class=\"line\">ctags -R</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"cscope-使用\"><a href=\"#cscope-使用\" class=\"headerlink\" title=\"cscope 使用\"></a>cscope 使用</h3><hr>\n<p>快捷键，上面配置中已经配置了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cscope --<span class=\"built_in\">help</span></span><br><span class=\"line\">Usage: cscope [-bcCdehklLqRTuUvV] [-f file] [-F file] [-i file] [-I dir] [-s dir]</span><br><span class=\"line\">            [-p number] [-P path] [-[0-8] pattern] [<span class=\"built_in\">source</span> files]</span><br><span class=\"line\"></span><br><span class=\"line\">-b            Build the cross-reference only.</span><br><span class=\"line\">-C            Ignore letter <span class=\"keyword\">case</span> when searching.</span><br><span class=\"line\">-c            Use only ASCII characters <span class=\"keyword\">in</span> the cross-ref file (don<span class=\"string\">&#x27;t compress).</span></span><br><span class=\"line\"><span class=\"string\">-d            Do not update the cross-reference.</span></span><br><span class=\"line\"><span class=\"string\">-e            Suppress the &lt;Ctrl&gt;-e command prompt between files.</span></span><br><span class=\"line\"><span class=\"string\">-F symfile    Read symbol reference lines from symfile.</span></span><br><span class=\"line\"><span class=\"string\">-f reffile    Use reffile as cross-ref file name instead of cscope.out.</span></span><br><span class=\"line\"><span class=\"string\">-h            This help screen.</span></span><br><span class=\"line\"><span class=\"string\">-I incdir     Look in incdir for any #include files.</span></span><br><span class=\"line\"><span class=\"string\">-i namefile   Browse through files listed in namefile, instead of cscope.files</span></span><br><span class=\"line\"><span class=\"string\">-k            Kernel Mode - don&#x27;</span>t use /usr/include <span class=\"keyword\">for</span> <span class=\"comment\">#include files.</span></span><br><span class=\"line\">-L            Do a single search with line-oriented output.</span><br><span class=\"line\">-l            Line-oriented interface.</span><br><span class=\"line\">-num pattern  Go to input field num (counting from 0) and find pattern.</span><br><span class=\"line\">-P path       Prepend path to relative file names <span class=\"keyword\">in</span> pre-built cross-ref file.</span><br><span class=\"line\">-p n          Display the last n file path components.</span><br><span class=\"line\">-q            Build an inverted index <span class=\"keyword\">for</span> quick symbol searching.</span><br><span class=\"line\">-R            Recurse directories <span class=\"keyword\">for</span> files.</span><br><span class=\"line\">-s dir        Look <span class=\"keyword\">in</span> dir <span class=\"keyword\">for</span> additional <span class=\"built_in\">source</span>  files.</span><br><span class=\"line\">-T            Use only the first eight characters to match against C symbols.</span><br><span class=\"line\">-U            Check file time stamps.</span><br><span class=\"line\">-u            Unconditionally build the cross-reference file.</span><br><span class=\"line\">-v            Be more verbose <span class=\"keyword\">in</span> line mode.</span><br><span class=\"line\">-V            Print the version number.</span><br><span class=\"line\"></span><br><span class=\"line\">Please see the manpage <span class=\"keyword\">for</span> more information.</span><br></pre></td></tr></table></figure>"},{"title":"vim plug","date":"2021-02-07T16:00:00.000Z","toc":true,"_content":"\n---\n### 安装vim-plug \n---\n~~~bash\n    vim    :  curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n    neovim :  curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n~~~\n\n\n---\n### 配置 vim-plug\n---\n修改 ~/.vimrc\n~~~bash\n    call plug#begin('~/.vim/plugged')\n    Plug 'itchyny/lightline.vim'\n    call plug#end()\n~~~\n\n---\n### 插件操作\n---\n~~~bash\n    # 导入插件\n    :PlugInstall\n\n    # 更新插件\n    :PlugUpdate\n\n    # 清理插件\n    :PlugClean\n~~~\n\n---\n### 常用插件\n---\n~~~bash\n    # 目录树\n    Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }  \n~~~\n\n---\n### 配置实现的插件\n---\n换行 ALT + 上下 实现vscode类似的换行效果\n~~~bash\n    noremap <A-up> :call feedkeys( line('.')==1 ? '' : 'ddkP' )<CR>\n    noremap <A-down> ddp\n~~~","source":"_posts/tool/vim.md","raw":"---\ntitle: vim plug \ncategories:\n- tools\ndate: 2021/2/8\ntoc: true # 是否启用内容索引\n---\n\n---\n### 安装vim-plug \n---\n~~~bash\n    vim    :  curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n    neovim :  curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n~~~\n\n\n---\n### 配置 vim-plug\n---\n修改 ~/.vimrc\n~~~bash\n    call plug#begin('~/.vim/plugged')\n    Plug 'itchyny/lightline.vim'\n    call plug#end()\n~~~\n\n---\n### 插件操作\n---\n~~~bash\n    # 导入插件\n    :PlugInstall\n\n    # 更新插件\n    :PlugUpdate\n\n    # 清理插件\n    :PlugClean\n~~~\n\n---\n### 常用插件\n---\n~~~bash\n    # 目录树\n    Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }  \n~~~\n\n---\n### 配置实现的插件\n---\n换行 ALT + 上下 实现vscode类似的换行效果\n~~~bash\n    noremap <A-up> :call feedkeys( line('.')==1 ? '' : 'ddkP' )<CR>\n    noremap <A-down> ddp\n~~~","slug":"tool/vim","published":1,"updated":"2021-02-08T16:03:23.349Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkwtrt67000jdpjsd1c21i8a","content":"<hr>\n<h3 id=\"安装vim-plug\"><a href=\"#安装vim-plug\" class=\"headerlink\" title=\"安装vim-plug\"></a>安装vim-plug</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim    :  curl -fLo ~/.vim/<span class=\"built_in\">autoload</span>/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br><span class=\"line\">neovim :  curl -fLo ~/.config/nvim/<span class=\"built_in\">autoload</span>/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"配置-vim-plug\"><a href=\"#配置-vim-plug\" class=\"headerlink\" title=\"配置 vim-plug\"></a>配置 vim-plug</h3><hr>\n<p>修改 ~/.vimrc</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">call plug<span class=\"comment\">#begin(&#x27;~/.vim/plugged&#x27;)</span></span><br><span class=\"line\">Plug <span class=\"string\">&#x27;itchyny/lightline.vim&#x27;</span></span><br><span class=\"line\">call plug<span class=\"comment\">#end()</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"插件操作\"><a href=\"#插件操作\" class=\"headerlink\" title=\"插件操作\"></a>插件操作</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入插件</span></span><br><span class=\"line\">:PlugInstall</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新插件</span></span><br><span class=\"line\">:PlugUpdate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清理插件</span></span><br><span class=\"line\">:PlugClean</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"常用插件\"><a href=\"#常用插件\" class=\"headerlink\" title=\"常用插件\"></a>常用插件</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 目录树</span></span><br><span class=\"line\">Plug <span class=\"string\">&#x27;scrooloose/nerdtree&#x27;</span>, &#123; <span class=\"string\">&#x27;on&#x27;</span>:  <span class=\"string\">&#x27;NERDTreeToggle&#x27;</span> &#125;  </span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"配置实现的插件\"><a href=\"#配置实现的插件\" class=\"headerlink\" title=\"配置实现的插件\"></a>配置实现的插件</h3><hr>\n<p>换行 ALT + 上下 实现vscode类似的换行效果</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">noremap &lt;A-up&gt; :call feedkeys( line(<span class=\"string\">&#x27;.&#x27;</span>)==1 ? <span class=\"string\">&#x27;&#x27;</span> : <span class=\"string\">&#x27;ddkP&#x27;</span> )&lt;CR&gt;</span><br><span class=\"line\">noremap &lt;A-down&gt; ddp</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<hr>\n<h3 id=\"安装vim-plug\"><a href=\"#安装vim-plug\" class=\"headerlink\" title=\"安装vim-plug\"></a>安装vim-plug</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim    :  curl -fLo ~/.vim/<span class=\"built_in\">autoload</span>/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br><span class=\"line\">neovim :  curl -fLo ~/.config/nvim/<span class=\"built_in\">autoload</span>/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"配置-vim-plug\"><a href=\"#配置-vim-plug\" class=\"headerlink\" title=\"配置 vim-plug\"></a>配置 vim-plug</h3><hr>\n<p>修改 ~/.vimrc</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">call plug<span class=\"comment\">#begin(&#x27;~/.vim/plugged&#x27;)</span></span><br><span class=\"line\">Plug <span class=\"string\">&#x27;itchyny/lightline.vim&#x27;</span></span><br><span class=\"line\">call plug<span class=\"comment\">#end()</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"插件操作\"><a href=\"#插件操作\" class=\"headerlink\" title=\"插件操作\"></a>插件操作</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入插件</span></span><br><span class=\"line\">:PlugInstall</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新插件</span></span><br><span class=\"line\">:PlugUpdate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清理插件</span></span><br><span class=\"line\">:PlugClean</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"常用插件\"><a href=\"#常用插件\" class=\"headerlink\" title=\"常用插件\"></a>常用插件</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 目录树</span></span><br><span class=\"line\">Plug <span class=\"string\">&#x27;scrooloose/nerdtree&#x27;</span>, &#123; <span class=\"string\">&#x27;on&#x27;</span>:  <span class=\"string\">&#x27;NERDTreeToggle&#x27;</span> &#125;  </span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"配置实现的插件\"><a href=\"#配置实现的插件\" class=\"headerlink\" title=\"配置实现的插件\"></a>配置实现的插件</h3><hr>\n<p>换行 ALT + 上下 实现vscode类似的换行效果</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">noremap &lt;A-up&gt; :call feedkeys( line(<span class=\"string\">&#x27;.&#x27;</span>)==1 ? <span class=\"string\">&#x27;&#x27;</span> : <span class=\"string\">&#x27;ddkP&#x27;</span> )&lt;CR&gt;</span><br><span class=\"line\">noremap &lt;A-down&gt; ddp</span><br></pre></td></tr></table></figure>"},{"title":"UEFI Protocol 机制","date":"2021-02-06T16:00:00.000Z","_content":"\n---\n### Protocol\n---\nGUID是一条链表，每个节点是就是一个GUID，一个GUID必须挂一条 Protocol.","source":"_posts/uefi/04_UFEI_protocol.md","raw":"---\ntitle: UEFI Protocol 机制\ndate: 2021/2/7\ncategories:\n- uefi\n---\n\n---\n### Protocol\n---\nGUID是一条链表，每个节点是就是一个GUID，一个GUID必须挂一条 Protocol.","slug":"uefi/04_UFEI_protocol","published":1,"updated":"2021-02-08T12:56:39.232Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkwtrt68000kdpjs230a5quo","content":"<hr>\n<h3 id=\"Protocol\"><a href=\"#Protocol\" class=\"headerlink\" title=\"Protocol\"></a>Protocol</h3><hr>\n<p>GUID是一条链表，每个节点是就是一个GUID，一个GUID必须挂一条 Protocol.</p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<h3 id=\"Protocol\"><a href=\"#Protocol\" class=\"headerlink\" title=\"Protocol\"></a>Protocol</h3><hr>\n<p>GUID是一条链表，每个节点是就是一个GUID，一个GUID必须挂一条 Protocol.</p>\n"},{"title":"Youtube-dl youtube视频批量下载","date":"2021-02-07T16:00:00.000Z","toc":true,"_content":"\n### what is Youtube-dl ？\n--- \nYoutube-dl 是一个自由开源的命令行视频下载工具，可以用来从 Youtube 等类似的网站上下载视频，目前它支持的网站除了 Youtube 还有 Facebook、Dailymotion、Google Video、Yahoo 等等。它构架于 pygtk 之上，需要 Python 的支持来运行。它支持很多操作系统，包括 Windows、Mac 以及 Unix。Youtube-dl 还有断点续传、下载整个频道或者整个播放清单中的视频、添加自定义的标题、代理等等其他功能。\n\n~~~bash\n    sudo apt-get update -y\n    sudo apt-get upgrade -y\n    sudo apt-get install curl -y\n    curl -L https://yt-dl.org/latest/youtube-dl -o /usr/bin/youtube-dl\n    chmod 755 /usr/bin/youtube-dl\n~~~\n~~~bash\n    # 显示所有视频格式\n    youtube-dl -F https://www.youtube.com/watch?v=j_JgXJ-apXs  \n\n    [info] Available formats for j_JgXJ-apXs:\n    format code  extension  resolution note\n    139          m4a        audio only DASH audio   56k , m4a_dash container, mp4a.40.5@ 48k (22050Hz), 756.44KiB\n    249          webm       audio only DASH audio   56k , opus @ 50k, 724.28KiB\n    250          webm       audio only DASH audio   69k , opus @ 70k, 902.75KiB\n    171          webm       audio only DASH audio  110k , vorbis@128k, 1.32MiB\n    251          webm       audio only DASH audio  122k , opus @160k, 1.57MiB\n    140          m4a        audio only DASH audio  146k , m4a_dash container, mp4a.40.2@128k (44100Hz), 1.97MiB\n    278          webm       256x144    144p   97k , webm container, vp9, 24fps, video only, 1.33MiB\n    160          mp4        256x144    DASH video  102k , avc1.4d400c, 24fps, video only, 731.53KiB\n    133          mp4        426x240    DASH video  174k , avc1.4d4015, 24fps, video only, 1.36MiB\n    242          webm       426x240    240p  221k , vp9, 24fps, video only, 1.74MiB\n    134          mp4        640x360    DASH video  369k , avc1.4d401e, 24fps, video only, 2.90MiB\n    243          webm       640x360    360p  500k , vp9, 24fps, video only, 4.15MiB\n    135          mp4        854x480    DASH video  746k , avc1.4d401e, 24fps, video only, 6.11MiB\n    244          webm       854x480    480p  844k , vp9, 24fps, video only, 7.27MiB\n    247          webm       1280x720   720p 1155k , vp9, 24fps, video only, 9.21MiB\n    136          mp4        1280x720   DASH video 1300k , avc1.4d401f, 24fps, video only, 9.66MiB\n    248          webm       1920x1080  1080p 1732k , vp9, 24fps, video only, 14.24MiB\n    137          mp4        1920x1080  DASH video 2217k , avc1.640028, 24fps, video only, 15.28MiB\n    17           3gp        176x144    small , mp4v.20.3, mp4a.40.2@ 24k\n    36           3gp        320x180    small , mp4v.20.3, mp4a.40.2\n    43           webm       640x360    medium , vp8.0, vorbis@128k\n    18           mp4        640x360    medium , avc1.42001E, mp4a.40.2@ 96k\n    22           mp4        1280x720   hd720 , avc1.64001F, mp4a.40.2@192k (best)\n~~~\n\n然后使用 -f 指定你想要下载的格式，如下所示：\n~~~bash\n    youtube-dl -f 18 https://www.youtube.com/watch?v=j_JgXJ-apXs\n\n    [youtube] j_JgXJ-apXs: Downloading webpage\n    [youtube] j_JgXJ-apXs: Downloading video info webpage\n    [youtube] j_JgXJ-apXs: Extracting video information\n    [youtube] j_JgXJ-apXs: Downloading MPD manifest\n    [download] Destination: B.A. PASS 2 Trailer no 2 _ Filmybox-j_JgXJ-apXs.mp4\n    [download] 100% of 6.90MiB in 00:47\n~~~\n\n### 下载音频 \n~~~bash\n    youtube-dl https://www.youtube.com/watch?v=j_JgXJ-apXs -x --audio-format mp3\n~~~\n\n### 下载视频\n~~~bash\n    youtube-dl -citw https://www.youtube.com/channel/UCatfiM69M9ZnNhOzy0jZ41A\n~~~\n\n### 指定代理\n~~~bash\n    youtube-dl --proxy http://proxy-ip:port https://www.youtube.com/watch?v=j_JgXJ-apXs\n~~~\n\n### youtube-list\n若想一条命令下载多个 Youtube 视频，那么首先把所有要下载的 Youtube 视频 URL 存在一个文件中（假设这个文件叫 youtube-list.txt），然后运行下面命令：\n~~~bash\n    youtube-dl -a youtube-list.txt\n~~~\n\n","source":"_posts/tool/youtuber_dll.md","raw":"---\ntitle: Youtube-dl youtube视频批量下载\ncategories:\n- tools\ndate: 2021/2/8\ntoc: true # 是否启用内容索引\n---\n\n### what is Youtube-dl ？\n--- \nYoutube-dl 是一个自由开源的命令行视频下载工具，可以用来从 Youtube 等类似的网站上下载视频，目前它支持的网站除了 Youtube 还有 Facebook、Dailymotion、Google Video、Yahoo 等等。它构架于 pygtk 之上，需要 Python 的支持来运行。它支持很多操作系统，包括 Windows、Mac 以及 Unix。Youtube-dl 还有断点续传、下载整个频道或者整个播放清单中的视频、添加自定义的标题、代理等等其他功能。\n\n~~~bash\n    sudo apt-get update -y\n    sudo apt-get upgrade -y\n    sudo apt-get install curl -y\n    curl -L https://yt-dl.org/latest/youtube-dl -o /usr/bin/youtube-dl\n    chmod 755 /usr/bin/youtube-dl\n~~~\n~~~bash\n    # 显示所有视频格式\n    youtube-dl -F https://www.youtube.com/watch?v=j_JgXJ-apXs  \n\n    [info] Available formats for j_JgXJ-apXs:\n    format code  extension  resolution note\n    139          m4a        audio only DASH audio   56k , m4a_dash container, mp4a.40.5@ 48k (22050Hz), 756.44KiB\n    249          webm       audio only DASH audio   56k , opus @ 50k, 724.28KiB\n    250          webm       audio only DASH audio   69k , opus @ 70k, 902.75KiB\n    171          webm       audio only DASH audio  110k , vorbis@128k, 1.32MiB\n    251          webm       audio only DASH audio  122k , opus @160k, 1.57MiB\n    140          m4a        audio only DASH audio  146k , m4a_dash container, mp4a.40.2@128k (44100Hz), 1.97MiB\n    278          webm       256x144    144p   97k , webm container, vp9, 24fps, video only, 1.33MiB\n    160          mp4        256x144    DASH video  102k , avc1.4d400c, 24fps, video only, 731.53KiB\n    133          mp4        426x240    DASH video  174k , avc1.4d4015, 24fps, video only, 1.36MiB\n    242          webm       426x240    240p  221k , vp9, 24fps, video only, 1.74MiB\n    134          mp4        640x360    DASH video  369k , avc1.4d401e, 24fps, video only, 2.90MiB\n    243          webm       640x360    360p  500k , vp9, 24fps, video only, 4.15MiB\n    135          mp4        854x480    DASH video  746k , avc1.4d401e, 24fps, video only, 6.11MiB\n    244          webm       854x480    480p  844k , vp9, 24fps, video only, 7.27MiB\n    247          webm       1280x720   720p 1155k , vp9, 24fps, video only, 9.21MiB\n    136          mp4        1280x720   DASH video 1300k , avc1.4d401f, 24fps, video only, 9.66MiB\n    248          webm       1920x1080  1080p 1732k , vp9, 24fps, video only, 14.24MiB\n    137          mp4        1920x1080  DASH video 2217k , avc1.640028, 24fps, video only, 15.28MiB\n    17           3gp        176x144    small , mp4v.20.3, mp4a.40.2@ 24k\n    36           3gp        320x180    small , mp4v.20.3, mp4a.40.2\n    43           webm       640x360    medium , vp8.0, vorbis@128k\n    18           mp4        640x360    medium , avc1.42001E, mp4a.40.2@ 96k\n    22           mp4        1280x720   hd720 , avc1.64001F, mp4a.40.2@192k (best)\n~~~\n\n然后使用 -f 指定你想要下载的格式，如下所示：\n~~~bash\n    youtube-dl -f 18 https://www.youtube.com/watch?v=j_JgXJ-apXs\n\n    [youtube] j_JgXJ-apXs: Downloading webpage\n    [youtube] j_JgXJ-apXs: Downloading video info webpage\n    [youtube] j_JgXJ-apXs: Extracting video information\n    [youtube] j_JgXJ-apXs: Downloading MPD manifest\n    [download] Destination: B.A. PASS 2 Trailer no 2 _ Filmybox-j_JgXJ-apXs.mp4\n    [download] 100% of 6.90MiB in 00:47\n~~~\n\n### 下载音频 \n~~~bash\n    youtube-dl https://www.youtube.com/watch?v=j_JgXJ-apXs -x --audio-format mp3\n~~~\n\n### 下载视频\n~~~bash\n    youtube-dl -citw https://www.youtube.com/channel/UCatfiM69M9ZnNhOzy0jZ41A\n~~~\n\n### 指定代理\n~~~bash\n    youtube-dl --proxy http://proxy-ip:port https://www.youtube.com/watch?v=j_JgXJ-apXs\n~~~\n\n### youtube-list\n若想一条命令下载多个 Youtube 视频，那么首先把所有要下载的 Youtube 视频 URL 存在一个文件中（假设这个文件叫 youtube-list.txt），然后运行下面命令：\n~~~bash\n    youtube-dl -a youtube-list.txt\n~~~\n\n","slug":"tool/youtuber_dll","published":1,"updated":"2021-02-08T13:12:33.776Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkwtrt6a000ndpjs17aqg5wd","content":"<h3 id=\"what-is-Youtube-dl-？\"><a href=\"#what-is-Youtube-dl-？\" class=\"headerlink\" title=\"what is Youtube-dl ？\"></a>what is Youtube-dl ？</h3><hr>\n<p>Youtube-dl 是一个自由开源的命令行视频下载工具，可以用来从 Youtube 等类似的网站上下载视频，目前它支持的网站除了 Youtube 还有 Facebook、Dailymotion、Google Video、Yahoo 等等。它构架于 pygtk 之上，需要 Python 的支持来运行。它支持很多操作系统，包括 Windows、Mac 以及 Unix。Youtube-dl 还有断点续传、下载整个频道或者整个播放清单中的视频、添加自定义的标题、代理等等其他功能。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update -y</span><br><span class=\"line\">sudo apt-get upgrade -y</span><br><span class=\"line\">sudo apt-get install curl -y</span><br><span class=\"line\">curl -L https://yt-dl.org/latest/youtube-dl -o /usr/bin/youtube-dl</span><br><span class=\"line\">chmod 755 /usr/bin/youtube-dl</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示所有视频格式</span></span><br><span class=\"line\">youtube-dl -F https://www.youtube.com/watch?v=j_JgXJ-apXs  </span><br><span class=\"line\"></span><br><span class=\"line\">[info] Available formats <span class=\"keyword\">for</span> j_JgXJ-apXs:</span><br><span class=\"line\">format code  extension  resolution note</span><br><span class=\"line\">139          m4a        audio only DASH audio   56k , m4a_dash container, mp4a.40.5@ 48k (22050Hz), 756.44KiB</span><br><span class=\"line\">249          webm       audio only DASH audio   56k , opus @ 50k, 724.28KiB</span><br><span class=\"line\">250          webm       audio only DASH audio   69k , opus @ 70k, 902.75KiB</span><br><span class=\"line\">171          webm       audio only DASH audio  110k , vorbis@128k, 1.32MiB</span><br><span class=\"line\">251          webm       audio only DASH audio  122k , opus @160k, 1.57MiB</span><br><span class=\"line\">140          m4a        audio only DASH audio  146k , m4a_dash container, mp4a.40.2@128k (44100Hz), 1.97MiB</span><br><span class=\"line\">278          webm       256x144    144p   97k , webm container, vp9, 24fps, video only, 1.33MiB</span><br><span class=\"line\">160          mp4        256x144    DASH video  102k , avc1.4d400c, 24fps, video only, 731.53KiB</span><br><span class=\"line\">133          mp4        426x240    DASH video  174k , avc1.4d4015, 24fps, video only, 1.36MiB</span><br><span class=\"line\">242          webm       426x240    240p  221k , vp9, 24fps, video only, 1.74MiB</span><br><span class=\"line\">134          mp4        640x360    DASH video  369k , avc1.4d401e, 24fps, video only, 2.90MiB</span><br><span class=\"line\">243          webm       640x360    360p  500k , vp9, 24fps, video only, 4.15MiB</span><br><span class=\"line\">135          mp4        854x480    DASH video  746k , avc1.4d401e, 24fps, video only, 6.11MiB</span><br><span class=\"line\">244          webm       854x480    480p  844k , vp9, 24fps, video only, 7.27MiB</span><br><span class=\"line\">247          webm       1280x720   720p 1155k , vp9, 24fps, video only, 9.21MiB</span><br><span class=\"line\">136          mp4        1280x720   DASH video 1300k , avc1.4d401f, 24fps, video only, 9.66MiB</span><br><span class=\"line\">248          webm       1920x1080  1080p 1732k , vp9, 24fps, video only, 14.24MiB</span><br><span class=\"line\">137          mp4        1920x1080  DASH video 2217k , avc1.640028, 24fps, video only, 15.28MiB</span><br><span class=\"line\">17           3gp        176x144    small , mp4v.20.3, mp4a.40.2@ 24k</span><br><span class=\"line\">36           3gp        320x180    small , mp4v.20.3, mp4a.40.2</span><br><span class=\"line\">43           webm       640x360    medium , vp8.0, vorbis@128k</span><br><span class=\"line\">18           mp4        640x360    medium , avc1.42001E, mp4a.40.2@ 96k</span><br><span class=\"line\">22           mp4        1280x720   hd720 , avc1.64001F, mp4a.40.2@192k (best)</span><br></pre></td></tr></table></figure>\n<p>然后使用 -f 指定你想要下载的格式，如下所示：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">youtube-dl -f 18 https://www.youtube.com/watch?v=j_JgXJ-apXs</span><br><span class=\"line\"></span><br><span class=\"line\">[youtube] j_JgXJ-apXs: Downloading webpage</span><br><span class=\"line\">[youtube] j_JgXJ-apXs: Downloading video info webpage</span><br><span class=\"line\">[youtube] j_JgXJ-apXs: Extracting video information</span><br><span class=\"line\">[youtube] j_JgXJ-apXs: Downloading MPD manifest</span><br><span class=\"line\">[download] Destination: B.A. PASS 2 Trailer no 2 _ Filmybox-j_JgXJ-apXs.mp4</span><br><span class=\"line\">[download] 100% of 6.90MiB <span class=\"keyword\">in</span> 00:47</span><br></pre></td></tr></table></figure>\n<h3 id=\"下载音频\"><a href=\"#下载音频\" class=\"headerlink\" title=\"下载音频\"></a>下载音频</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">youtube-dl https://www.youtube.com/watch?v=j_JgXJ-apXs -x --audio-format mp3</span><br></pre></td></tr></table></figure>\n<h3 id=\"下载视频\"><a href=\"#下载视频\" class=\"headerlink\" title=\"下载视频\"></a>下载视频</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">youtube-dl -citw https://www.youtube.com/channel/UCatfiM69M9ZnNhOzy0jZ41A</span><br></pre></td></tr></table></figure>\n<h3 id=\"指定代理\"><a href=\"#指定代理\" class=\"headerlink\" title=\"指定代理\"></a>指定代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">youtube-dl --proxy http://proxy-ip:port https://www.youtube.com/watch?v=j_JgXJ-apXs</span><br></pre></td></tr></table></figure>\n<h3 id=\"youtube-list\"><a href=\"#youtube-list\" class=\"headerlink\" title=\"youtube-list\"></a>youtube-list</h3><p>若想一条命令下载多个 Youtube 视频，那么首先把所有要下载的 Youtube 视频 URL 存在一个文件中（假设这个文件叫 youtube-list.txt），然后运行下面命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">youtube-dl -a youtube-list.txt</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"what-is-Youtube-dl-？\"><a href=\"#what-is-Youtube-dl-？\" class=\"headerlink\" title=\"what is Youtube-dl ？\"></a>what is Youtube-dl ？</h3><hr>\n<p>Youtube-dl 是一个自由开源的命令行视频下载工具，可以用来从 Youtube 等类似的网站上下载视频，目前它支持的网站除了 Youtube 还有 Facebook、Dailymotion、Google Video、Yahoo 等等。它构架于 pygtk 之上，需要 Python 的支持来运行。它支持很多操作系统，包括 Windows、Mac 以及 Unix。Youtube-dl 还有断点续传、下载整个频道或者整个播放清单中的视频、添加自定义的标题、代理等等其他功能。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update -y</span><br><span class=\"line\">sudo apt-get upgrade -y</span><br><span class=\"line\">sudo apt-get install curl -y</span><br><span class=\"line\">curl -L https://yt-dl.org/latest/youtube-dl -o /usr/bin/youtube-dl</span><br><span class=\"line\">chmod 755 /usr/bin/youtube-dl</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示所有视频格式</span></span><br><span class=\"line\">youtube-dl -F https://www.youtube.com/watch?v=j_JgXJ-apXs  </span><br><span class=\"line\"></span><br><span class=\"line\">[info] Available formats <span class=\"keyword\">for</span> j_JgXJ-apXs:</span><br><span class=\"line\">format code  extension  resolution note</span><br><span class=\"line\">139          m4a        audio only DASH audio   56k , m4a_dash container, mp4a.40.5@ 48k (22050Hz), 756.44KiB</span><br><span class=\"line\">249          webm       audio only DASH audio   56k , opus @ 50k, 724.28KiB</span><br><span class=\"line\">250          webm       audio only DASH audio   69k , opus @ 70k, 902.75KiB</span><br><span class=\"line\">171          webm       audio only DASH audio  110k , vorbis@128k, 1.32MiB</span><br><span class=\"line\">251          webm       audio only DASH audio  122k , opus @160k, 1.57MiB</span><br><span class=\"line\">140          m4a        audio only DASH audio  146k , m4a_dash container, mp4a.40.2@128k (44100Hz), 1.97MiB</span><br><span class=\"line\">278          webm       256x144    144p   97k , webm container, vp9, 24fps, video only, 1.33MiB</span><br><span class=\"line\">160          mp4        256x144    DASH video  102k , avc1.4d400c, 24fps, video only, 731.53KiB</span><br><span class=\"line\">133          mp4        426x240    DASH video  174k , avc1.4d4015, 24fps, video only, 1.36MiB</span><br><span class=\"line\">242          webm       426x240    240p  221k , vp9, 24fps, video only, 1.74MiB</span><br><span class=\"line\">134          mp4        640x360    DASH video  369k , avc1.4d401e, 24fps, video only, 2.90MiB</span><br><span class=\"line\">243          webm       640x360    360p  500k , vp9, 24fps, video only, 4.15MiB</span><br><span class=\"line\">135          mp4        854x480    DASH video  746k , avc1.4d401e, 24fps, video only, 6.11MiB</span><br><span class=\"line\">244          webm       854x480    480p  844k , vp9, 24fps, video only, 7.27MiB</span><br><span class=\"line\">247          webm       1280x720   720p 1155k , vp9, 24fps, video only, 9.21MiB</span><br><span class=\"line\">136          mp4        1280x720   DASH video 1300k , avc1.4d401f, 24fps, video only, 9.66MiB</span><br><span class=\"line\">248          webm       1920x1080  1080p 1732k , vp9, 24fps, video only, 14.24MiB</span><br><span class=\"line\">137          mp4        1920x1080  DASH video 2217k , avc1.640028, 24fps, video only, 15.28MiB</span><br><span class=\"line\">17           3gp        176x144    small , mp4v.20.3, mp4a.40.2@ 24k</span><br><span class=\"line\">36           3gp        320x180    small , mp4v.20.3, mp4a.40.2</span><br><span class=\"line\">43           webm       640x360    medium , vp8.0, vorbis@128k</span><br><span class=\"line\">18           mp4        640x360    medium , avc1.42001E, mp4a.40.2@ 96k</span><br><span class=\"line\">22           mp4        1280x720   hd720 , avc1.64001F, mp4a.40.2@192k (best)</span><br></pre></td></tr></table></figure>\n<p>然后使用 -f 指定你想要下载的格式，如下所示：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">youtube-dl -f 18 https://www.youtube.com/watch?v=j_JgXJ-apXs</span><br><span class=\"line\"></span><br><span class=\"line\">[youtube] j_JgXJ-apXs: Downloading webpage</span><br><span class=\"line\">[youtube] j_JgXJ-apXs: Downloading video info webpage</span><br><span class=\"line\">[youtube] j_JgXJ-apXs: Extracting video information</span><br><span class=\"line\">[youtube] j_JgXJ-apXs: Downloading MPD manifest</span><br><span class=\"line\">[download] Destination: B.A. PASS 2 Trailer no 2 _ Filmybox-j_JgXJ-apXs.mp4</span><br><span class=\"line\">[download] 100% of 6.90MiB <span class=\"keyword\">in</span> 00:47</span><br></pre></td></tr></table></figure>\n<h3 id=\"下载音频\"><a href=\"#下载音频\" class=\"headerlink\" title=\"下载音频\"></a>下载音频</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">youtube-dl https://www.youtube.com/watch?v=j_JgXJ-apXs -x --audio-format mp3</span><br></pre></td></tr></table></figure>\n<h3 id=\"下载视频\"><a href=\"#下载视频\" class=\"headerlink\" title=\"下载视频\"></a>下载视频</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">youtube-dl -citw https://www.youtube.com/channel/UCatfiM69M9ZnNhOzy0jZ41A</span><br></pre></td></tr></table></figure>\n<h3 id=\"指定代理\"><a href=\"#指定代理\" class=\"headerlink\" title=\"指定代理\"></a>指定代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">youtube-dl --proxy http://proxy-ip:port https://www.youtube.com/watch?v=j_JgXJ-apXs</span><br></pre></td></tr></table></figure>\n<h3 id=\"youtube-list\"><a href=\"#youtube-list\" class=\"headerlink\" title=\"youtube-list\"></a>youtube-list</h3><p>若想一条命令下载多个 Youtube 视频，那么首先把所有要下载的 Youtube 视频 URL 存在一个文件中（假设这个文件叫 youtube-list.txt），然后运行下面命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">youtube-dl -a youtube-list.txt</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[{"_id":"source/_posts/liveoverflow/hack_binary_example/patchbinary.png","slug":"patchbinary.png","post":"ckkwtrt5z0008dpjs0zpkfyx1","modified":0,"renderable":0},{"_id":"source/_posts/markdown/03_language_markdown_ref/patchbinary.png","slug":"patchbinary.png","post":"ckkwtrt61000bdpjs11ez8hye","modified":1,"renderable":0}],"PostCategory":[{"post_id":"ckkwtrt5q0001dpjs6lk5druy","category_id":"ckkwtrt5v0004dpjs78bc65qc","_id":"ckkwtrt66000gdpjs94gccxjp"},{"post_id":"ckkwtrt5u0003dpjscuflgrtu","category_id":"ckkwtrt62000cdpjs6m5tbh9x","_id":"ckkwtrt69000ldpjsf1rzc53e"},{"post_id":"ckkwtrt5x0006dpjscbzz1xyd","category_id":"ckkwtrt66000hdpjs8la39qrm","_id":"ckkwtrt6c000odpjs8t9fcr7s"},{"post_id":"ckkwtrt5z0008dpjs0zpkfyx1","category_id":"ckkwtrt6a000mdpjs3o58cyzm","_id":"ckkwtrt6c000qdpjs1hhzabhv"},{"post_id":"ckkwtrt61000bdpjs11ez8hye","category_id":"ckkwtrt6c000pdpjs35ya61cc","_id":"ckkwtrt6d000sdpjs7z0p28go"},{"post_id":"ckkwtrt63000edpjsd7ma4tx1","category_id":"ckkwtrt6c000rdpjs0rhwgfjf","_id":"ckkwtrt6e000vdpjs82nyez00"},{"post_id":"ckkwtrt64000fdpjsbhfqbmjs","category_id":"ckkwtrt6c000rdpjs0rhwgfjf","_id":"ckkwtrt6f000xdpjshq437ymm"},{"post_id":"ckkwtrt67000jdpjsd1c21i8a","category_id":"ckkwtrt6c000rdpjs0rhwgfjf","_id":"ckkwtrt6f000ydpjs0cd5ddmu"},{"post_id":"ckkwtrt68000kdpjs230a5quo","category_id":"ckkwtrt6f000wdpjse6nb6gnb","_id":"ckkwtrt6g0010dpjs1t4l9sqr"},{"post_id":"ckkwtrt6a000ndpjs17aqg5wd","category_id":"ckkwtrt6c000rdpjs0rhwgfjf","_id":"ckkwtrt6g0011dpjsapln6b8r"}],"PostTag":[{"post_id":"ckkwtrt5x0006dpjscbzz1xyd","tag_id":"ckkwtrt600009dpjsc2q2551n","_id":"ckkwtrt67000idpjsadex8j5x"}],"Tag":[{"name":"hexo","_id":"ckkwtrt600009dpjsc2q2551n"}]}}